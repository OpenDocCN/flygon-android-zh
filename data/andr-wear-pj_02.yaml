- en: Let us Help Capture What is on Your Mind - WearRecyclerView and More
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们帮助捕捉你的想法 —— WearRecyclerView 及更多功能
- en: The culture of Wearing a utility that helps us to perform certain actions has
    always been part of a modern civilization. Wrist watches for human beings have
    become an augmented tool for checking the time and date. Wearing a watch lets
    you check the time with just a glance. Technology has taken this watch-wearing
    experience to the next level. The first modern Wearable watch was a combination
    of a calculator and a watch, introduced to the world in 1970\. Over the decades,
    advancements in microprocessors and wireless technology have led to the introduction
    of a concept called *ubiquitous computing*. During this time, most leading electronics
    industry start-ups started to work on their ideas, which has made Wearable devices
    very popular.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 戴上能帮助我们执行某些动作的实用工具，这种文化一直是现代文明的一部分。对人类来说，腕表已经成为检查时间和日期的增强工具。佩戴手表可以让你只需一瞥就能知道时间。科技将这种戴表体验带到了下一个层次。第一款现代可穿戴手表是计算器和手表的组合，于1970年推出。几十年来，微处理器和无线的进步导致了“无处不在的计算”这一概念的出现。在这段时间里，大多数领先的电子行业初创公司开始着手他们的想法，这使得可穿戴设备变得非常流行。
- en: Tech giant companies, such as Google, Apple, Samsung, and Sony, have joined
    the force of the Wearable devices era. They have introduced their competitive
    Wearable products, which are extremely successful in the Wearable device market.
    More interestingly, Google's Android Wear is powerful, follows the same Android
    smartphone development practices, and has a very good developer community compared
    to Apple Watch OS and Samsung's Tizen OS developer community.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 科技巨头公司，如谷歌、苹果、三星和索尼，都加入了可穿戴设备时代的行列。他们推出了自己的竞争性可穿戴产品，这些产品在可穿戴设备市场上取得了极大的成功。更有趣的是，谷歌的
    Android Wear 功能强大，遵循与 Android 智能手机开发相同的实践，并且与 Apple Watch OS 和三星的 Tizen OS 开发社区相比，拥有非常好的开发者社区。
- en: Google announced Android Wear in March 2014\. Since then, Android Wear as a
    smartwatch and Wearable software platform has evolved. Google's continuous advancement
    in designing and user experience have resulted in a new generation of the Android
    Wear operating system, which has the ability to handle biometric sensors like
    never before with more features in the platform; Google calls it Android Wear
    2.0.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌在2014年3月宣布了 Android Wear。从那时起，作为智能手表和可穿戴软件平台的 Android Wear 一直在发展。谷歌在设计和用户体验方面的持续进步导致了新一代
    Android Wear 操作系统的诞生，该系统具有前所未有的处理生物识别传感器的能力，平台功能更多；谷歌称之为 Android Wear 2.0。
- en: 'Android Wear 2.0 will cause a lot of excitement in app development with remarkably
    competitive features to develop. Android Wear 2.0 allows a developer to build
    and carve his idea specific to Android Wear; there is no need to pair a watch
    and mobile app. Google calls it a standalone application. Android Wear 2.0 introduces
    a new way to input within the Android watch: a new application programming interface
    called Complications, which allows watch faces to display vital information from
    biometrics and other sensors. New updated notifications support for Android Wear
    2.0 will help users and developers to present notifications in a more comprehensive
    manner.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Android Wear 2.0 在应用开发方面将引起极大的兴奋，具有显著竞争力的特性待开发。Android Wear 2.0 允许开发者构建和雕琢他针对
    Android Wear 的特定想法；无需将手表与移动应用配对。谷歌称之为独立应用程序。Android Wear 2.0 引入了一种在 Android 表中输入的新方式：一个新的应用程序编程接口，称为
    Complications，它允许表盘显示来自生物识别和其他传感器的重要信息。Android Wear 2.0 的新更新通知支持将帮助用户和开发者以更全面的方式呈现通知。
- en: 'In this chapter, we will explore the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下内容：
- en: Android Wear design principles
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android Wear 设计原则
- en: Exploring essential UI components specific to Wear apps
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索特定于可穿戴应用的基本 UI 组件
- en: Setting up a development environment for Wear apps development
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为可穿戴应用开发设置开发环境
- en: Creating your first Android Wear application
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建你的第一个 Android Wear 应用程序
- en: Android Wear design principles
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android Wear 设计原则
- en: Designing a Wear application is different than designing a mobile or tablet
    application. The Wear operating system is very lightweight and has a specific
    set of jobs to accomplish by sharing the right information with the Wearer.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 设计可穿戴应用与设计移动或平板应用不同。Wear 操作系统非常轻量级，并且有特定的任务要完成，即与佩戴者分享正确信息。
- en: General Wear principles are Timely, Glanceable, Easy to Tap, Time-Saving.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通用可穿戴原则是：及时性、一瞥即得、易于轻触、节省时间。
- en: '**Timely**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**及时性**'
- en: Giving the right information at the right time.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在正确的时间提供正确的信息。
- en: '**Glanceable**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**一瞥即得**'
- en: Keeping the Wear application user interface clean and uncluttered.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 保持穿戴应用用户界面干净、不杂乱。
- en: '**Easy to Tap**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**易于点击**'
- en: The actions users will click on should have the right spacing and size of the
    picture.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 用户将点击的动作应该具有适当的间距和图片大小。
- en: '**Time-Saving**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**节省时间**'
- en: Creating the best application flows that do tasks quickly.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 创建能够快速完成任务的最佳应用流程。
- en: 'For any Wear application, we need the proper building blocks to control the
    business logic of the application and other architectural implementation. The
    following are the scenarios for developing a Wear application to help us to carve
    the wear application better:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何穿戴应用，我们需要合适的构建块来控制应用程序的业务逻辑和其他架构实现。以下是开发穿戴应用的场景，帮助我们更好地雕刻穿戴应用：
- en: Defining layouts
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义布局
- en: Creating lists
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建列表
- en: Showing confirmations
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示确认信息
- en: Wear navigation and actions
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 穿戴导航和动作
- en: Multifunction buttons
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多功能按钮
- en: Defining layouts
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义布局
- en: Wearable applications can use the same layouts that we use in handheld Android
    device programming but with specific constraints for Wear applications. We should
    not do heavy processing actions similar to handheld Android devices in Wear applications
    and expect a good user experience.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 穿戴应用可以使用我们在手持式Android设备编程中使用的相同布局，但需要针对穿戴应用的具体限制。我们不应该在穿戴应用中进行类似于手持式Android设备的繁重处理操作，并期待良好的用户体验。
- en: 'An application designed for a round screen will not look great on square Wear
    devices. To resolve this, the Android Wear support library comes with the following
    two solutions:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为圆形屏幕设计的应用在方形穿戴设备上看起来不会很好。为了解决这个问题，Android Wear支持库提供了以下两个解决方案：
- en: '`BoxInsetLayout`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`BoxInsetLayout`'
- en: '`Curved Layout`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Curved Layout`（曲线布局）'
- en: We can provide different resources to allow Android to detect the shape of the
    Android Wear at runtime.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以提供不同的资源，允许Android在运行时检测Android Wear的形状。
- en: Creating lists
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建列表
- en: Lists let the user select an item from a set of items. In the legacy Wear, 1.x
    API `WearableListView` helped programmers to build lists and custom lists. Wearable
    UI library now has `WearableRecyclerView` with `curvedLayout` support and has
    the best implementation experience in Wear devices.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 列表允许用户从一组项目中选择一个项目。在旧版的Wear 1.x API中，`WearableListView`帮助程序员构建列表和自定义列表。现在，穿戴UI库有了支持`curvedLayout`的`WearableRecyclerView`，并在穿戴设备上拥有最佳的实现体验。
- en: 'We can add gestures and other magnificent functionalities:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以添加手势和其他出色的功能：
- en: '![](img/00024.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00024.jpeg)'
- en: Exploring UI components for Wear devices
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索穿戴设备的UI组件
- en: In this subchapter, let's explore the commonly used Wear-specific UI components.
    In Wear application programming, we can use all the components that we use in
    mobile app programming, but how we accommodate the visual appearance of components
    in the Wear device needs to be well thought of before using it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一小节中，让我们探索常用的穿戴特定UI组件。在穿戴应用编程中，我们可以使用我们在移动应用编程中使用的所有组件，但在使用之前，我们需要仔细考虑如何在穿戴设备中容纳组件的视觉外观。
- en: '`WatchViewStub`: `WatchViewStub` helps in rendering the views for different
    form factors of Wearable devices. If your application is being installed on a
    round watch device, `WatchViewStub` will load the specific layout configuration
    for round watches. If it is square, it will load the square layout configuration:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`WatchViewStub`：`WatchViewStub`有助于为不同表盘形状的穿戴设备渲染视图。如果您的应用安装在圆形手表设备上，`WatchViewStub`将加载针对圆形手表的特定布局配置。如果是方形，它将加载方形布局配置：'
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`WearableRecyclerView`: `WearableRecyclerView` is the implementation of `recyclerview`
    specific to wearable devices. It provides a flexible view for datasets in the
    Wearable device viewport. We will explore `WearbaleRecyclerView` in detail in
    the coming chapters:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`WearableRecyclerView`：`WearableRecyclerView`是专为穿戴设备实现的`recyclerview`。它为穿戴设备视口中的数据集提供了灵活的视图。我们将在接下来的章节中详细探讨`WearableRecyclerView`：'
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Note: `WearableListView` is deprecated; the Android community recommends using
    `WearableRecyclerView`.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：`WearableListView`已弃用；Android社区建议使用`WearableRecyclerView`。
- en: '`CircledImageVIew`: An `Imageview` surrounded by a circle. A very handy component
    for presenting the image in round form factor Wearable devices:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`CircledImageVIew`：一个由圆形环绕的`Imageview`。这是在圆形表盘穿戴设备上展示图片的非常实用的组件：'
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`BoxInsetLayout`: This Layout extends directly to `Framelayout` and it has
    the ability to recognize the form factor of the Wearable device. Shape-aware `FrameLayout`
    can box its children in the center square of the screen:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`BoxInsetLayout`：此布局直接扩展到`Framelayout`，并且能够识别Wearable设备的形状因素。形状感知的`FrameLayout`可以将子元素框定在屏幕中心正方形内：'
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After the Wear 2.0 release, a few components were deprecated for an immersive
    activity experience and Google strictly prohibits using them; we can still use
    all the components that we know in Android programming.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 自从Wear 2.0版本发布后，为了提供沉浸式活动体验，一些组件被弃用，谷歌严格禁止使用它们；我们仍然可以在Android编程中使用我们所熟知的所有组件。
- en: Showing confirmations
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示确认信息
- en: Compared to confirmations in handheld Android devices, in Wear applications,
    confirmations should occupy the whole screen or more than what handheld devices
    show as a dialogue box. This ensures users can see these confirmations at one
    glance. The Wearable UI library helps in displaying confirmation timers and animated
    timers in Android Wear.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 与手持Android设备中的确认操作相比，在Wear应用程序中，确认操作应该占据整个屏幕或比手持设备显示的对话框更多。这确保用户可以一眼看到这些确认信息。Wearable
    UI库帮助在Android Wear中显示确认计时器和动画计时器。
- en: DelayedConfirmationView
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DelayedConfirmationView
- en: 'A `DelayedConfirmationView` is an automatic confirmation view based on the
    timer:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`DelayedConfirmationView`是基于计时器的自动确认视图：'
- en: '****![](img/00025.jpeg)********![](img/00026.jpeg)****'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '****![图片](img/00025.jpeg)********![图片](img/00026.jpeg)****'
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Wear navigation and actions
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Wear导航和动作
- en: 'In the new release of Android Wear, the **Material design** library adds the
    following two interactive drawers:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android Wear的新版本中，**Material design**库新增了以下两种交互式抽屉：
- en: Navigation drawer
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导航抽屉
- en: Action drawer
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动作抽屉
- en: Navigation drawer
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航抽屉
- en: 'Lets user switch between views in the application. Developers can allow the
    drawer to be opened anywhere within the scrolling parent''s content by setting
    the `setShouldOnlyOpenWhenAtTop()` method to false:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 允许用户在应用程序中的视图之间切换。开发者可以通过将`setShouldOnlyOpenWhenAtTop()`方法设置为false，允许抽屉在滚动父内容内的任何位置打开。
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Action drawer
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动作抽屉
- en: 'The action drawer gives access to easy and common actions in your application.
    By default, action drawer appears at the bottom of the screen and provides specific
    actions to users:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 动作抽屉提供了访问应用程序中简单且常见的操作。默认情况下，动作抽屉出现在屏幕底部，并为用户提供特定操作：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Multifunction buttons
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多功能按钮
- en: 'In addition to the power button, Android Wear supports another button called
    the multifunction button on the device. The Wearable support library provides
    API for determining the multifunction buttons included by the manufacturer:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 除了电源按钮外，Android Wear还支持设备上的另一个按钮，即多功能按钮。Wearable支持库提供了确定制造商包含的多功能按钮的API：
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Visit [https://developer.android.com/training/wearables/ui/index.html](https://developer.android.com/training/wearables/ui/index.html)
    for any sort of query that you might have on design guidelines for Wear device
    programming.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对Wear设备编程的设计指南有任何疑问，请访问[https://developer.android.com/training/wearables/ui/index.html](https://developer.android.com/training/wearables/ui/index.html)。
- en: Setting up a development environment for Wear development
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Wear开发的开发环境
- en: In this section, we will set up a development environment for Wear application
    development.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为Wear应用程序开发设置一个开发环境。
- en: '**Prerequisites**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**先决条件**'
- en: Your favorite operating system (Windows, macOS, or Linux)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您喜欢的操作系统（Windows、macOS或Linux）
- en: Determine whether you have the latest JRE installed on your operating system
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定您的操作系统上是否安装了最新版本的JRE
- en: Install the latest version of JDK or Open JDK
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装最新版本的JDK或Open JDK
- en: Install the latest version of Android Studio (at the time of writing this book,
    the latest version is 2.2.3 and any newer version should be fine)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装最新版本的Android Studio（在撰写本书时，最新版本是2.2.3，任何更新的版本应该都可以）
- en: Installing Android Studio
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Android Studio
- en: 'Visit [https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html)
    to download the latest version of Android Studio. Google highly recommends using
    Android Studio for all Android application development, since Android Studio has
    tight integration with Gradle and useful Android APIs:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[https://developer.android.com/studio/index.html](https://developer.android.com/studio/index.html)下载最新版本的Android
    Studio。谷歌强烈建议在所有Android应用程序开发中使用Android Studio，因为Android Studio与Gradle紧密集成并提供了有用的Android
    API：
- en: '![](img/00027.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00027.jpeg)'
- en: 'After the Android Studio installation, it''s now time to download the necessary
    SDK in the SDK Platforms tab in SDK Manager. Install one complete version of Android;
    for the scope of this book, we will install Android 7.1.1 API level 25:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完 Android Studio 后，现在是在 SDK 管理器的 SDK Platforms 标签下下载必要的 SDK 的时候了。安装一个完整的 Android
    版本；在本书的范围内，我们将安装 Android 7.1.1 API 级别 25：
- en: '![](img/00028.jpeg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00028.jpeg)'
- en: 'After the successful installation of the SDK of Nougat 7.1.1 API level 25,
    under the **SDK Tools** tab, make sure you have installed the following components,
    as shown in the following screenshot:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功安装了 Nougat 7.1.1 API 级别 25 的 SDK 后，在**SDK 工具**标签下，确保你已经安装了以下组件，如下面的截图所示：
- en: Android Support Library
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android 支持库
- en: Google Play services
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Play 服务
- en: Google Repository
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google 仓库
- en: Android Support Repository
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android 支持仓库
- en: '![](img/00029.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00029.jpeg)'
- en: Google releases updates on IDE and SDK Tools frequently; keep your development
    environment up-to-date.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌频繁发布 IDE 和 SDK 工具的更新；请保持你的开发环境是最新的。
- en: 'Note: if you plan to make your application available in China, then you must
    use the special release version 7.8.87 of the Google Play services client library
    to handle communication between a phone and watch: [https://developer.android.com/training/wearables/apps/creating-app-china.html](https://developer.android.com/training/wearables/apps/creating-app-china.html)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：如果你打算让你的应用程序在中国可用，那么你必须使用 Google Play 服务客户端库的特殊发布版本 7.8.87 来处理手机和手表之间的通信：[https://developer.android.com/training/wearables/apps/creating-app-china.html](https://developer.android.com/training/wearables/apps/creating-app-china.html)
- en: 'Visit the following link to check the update Release Notes on SDK Tools: [https://developer.android.com/studio/releases/sdk-tools.html.](https://developer.android.com/studio/releases/sdk-tools.html)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 访问以下链接查看 SDK 工具的更新发布说明：[https://developer.android.com/studio/releases/sdk-tools.html.](https://developer.android.com/studio/releases/sdk-tools.html)
- en: '![](img/00030.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00030.jpeg)'
- en: 'Updating your IDE from the stable channel is highly recommended. Updates for
    Android Studio are available on four different channels:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议从稳定渠道更新你的 IDE。Android Studio 的更新在四个不同的渠道上可用：
- en: Canary channel
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 金丝雀渠道
- en: Dev channel
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发渠道
- en: Beta channel
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试版渠道
- en: Stable channel
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稳定渠道
- en: '**Canary channel**: The Android Studio engineering team works continuously
    to make Android Studio better. In this channel, every week there will be an update
    release, and it will include new functionality changes and improvements; you can
    check those changes in the release notes. But updates from this channel are not
    recommended for application production.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**金丝雀渠道：**Android Studio 工程团队不断努力使 Android Studio 变得更好。在这个渠道上，每周将有一个更新发布，并将包括新的功能变更和改进；你可以在发布说明中查看这些更改。但此渠道的更新不建议用于应用程序生产。'
- en: '**Dev Channel:** On this channel, a release happens after a complete round
    of internal testing from the Android Studio team.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**开发渠道：**在这个渠道上，发布会在 Android Studio 团队完成一轮完整的内部测试后进行。'
- en: '**Beta channel:** On this channel, updates are totally based on stable Canary
    builds. Before publishing these builds to a stable channel, Google releases them
    in the beta channel to get developer feedback.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**测试版渠道：**在这个渠道上，更新完全基于稳定的金丝雀构建。在将这些构建发布到稳定渠道之前，谷歌会在测试版渠道中发布它们以获取开发者的反馈。'
- en: '**Stable Channel:** Are the official stable releases of the Android Studio
    and will be available to download on Google''s official page [http://developer.android.com/studio.](http://developer.android.com/studio.)'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**稳定渠道：**是 Android Studio 的官方稳定版本，可在谷歌官方页面 [http://developer.android.com/studio.](http://developer.android.com/studio.)
    下载。'
- en: By default, Android Studio receives updates from a stable channel.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Android Studio 从稳定渠道接收更新。
- en: Creating your first Android Wear application
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建你的第一个 Android Wear 应用程序
- en: In this section, let's understand the essential steps required to create your
    first Wear project.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，让我们了解创建你的第一个 Wear 项目的必要步骤。
- en: Before you continue to create your application, ensure you have one complete
    version of Android installed with a Wear system image and you have the latest
    version of Android Studio.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在你继续创建你的应用程序之前，请确保你已经安装了一个带有 Wear 系统镜像的完整版 Android，并且你有最新版本的 Android Studio。
- en: The following picture is the initial interface of Android Studio. In this window,
    one can import legacy ADT Android projects, configure the Android SDK, and update
    Android Studio.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的图片是 Android Studio 的初始界面。在这个窗口中，你可以导入传统的 ADT Android 项目，配置 Android SDK，以及更新
    Android Studio。
- en: 'Android Studio welcome window with basic controls for getting started:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 欢迎窗口，带有开始使用的基本控制：
- en: '![](img/00031.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00031.jpeg)'
- en: Creating your first Wear project
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建你的第一个Wear项目
- en: Click on the Start a new Android Studio project option in the Android Studio
    window. You will be prompted by another window with project details.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android Studio窗口中点击“开始新的Android Studio项目”选项。您将看到一个带有项目详情的窗口。
- en: 'The following screenshot shows the window that allows users to configure their
    project details, such as project name, Package name, and whether the project needs
    native C++ support:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了允许用户配置项目详情的窗口，如项目名称、包名称以及项目是否需要本地C++支持：
- en: '![](img/00032.jpeg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00032.jpeg)'
- en: 'You can name your project as you wish. After you have chosen your project name
    and your project local system location, you can press the Next button in the window,
    which brings up another window with a few configuration queries, as shown in the
    following screenshot:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按自己的意愿为项目命名。选择项目名称和项目在本地系统的位置后，您可以点击窗口中的“下一步”按钮，这将打开另一个带有一些配置查询的窗口，如下截图所示：
- en: '![](img/00033.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00033.jpeg)'
- en: 'In this window, you can choose to write a standalone Wear application if you
    uncheck the Phone and Tablet option. In this way, you will see only Wear application
    templates:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在此窗口中，如果您取消勾选“手机和平板电脑”选项，可以选择编写独立的Wear应用程序。这样，您将只看到Wear应用程序模板：
- en: '![](img/00034.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00034.jpeg)'
- en: 'Now, Android Studio templates prompt only Android Wear activity templates with
    the following set of options:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Android Studio模板仅提示以下选项集的Android Wear活动模板：
- en: Add No Activity
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加无活动
- en: Always On Wear Activity
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终开启的Wear活动
- en: Blank Wear Activity
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 空白Wear活动
- en: Display Notification
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示通知
- en: Google Maps Wear Activity
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Maps Wear活动
- en: Watch Face
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表盘界面
- en: 'The activity template chooser helps you to access the default boilerplate codes,
    which are already templatized and can be used directly in projects:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 活动模板选择器可以帮助您访问默认的模板化样板代码，这些代码可以直接在项目中使用：
- en: '![](img/00035.jpeg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00035.jpeg)'
- en: 'To create the first project, we will choose Blank Wear Activity and click on
    the Next button in the window. Android Studio will prompt another window for creating
    the name of the activity and layout file. In this template, the two form factors
    of Android Wearable devices, which are mostly round and square shapes, are prepopulated
    with the boilerplate code stub:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建第一个项目，我们将选择“空白Wear活动”，并在窗口中点击“下一步”按钮。Android Studio将提示另一个窗口以创建活动和布局文件的名称。在此模板中，Android可穿戴设备的两种形式因素（主要是圆形和方形）已经预填充了样板代码存根：
- en: '![](img/00036.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00036.jpeg)'
- en: When your project is ready to be created, click on the Finish button. After
    clicking on Finish, Android Studio will take a few moments to create the project
    for us.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的项目准备好创建时，点击“完成”按钮。点击完成后，Android Studio将花费一些时间为我们创建项目。
- en: 'Way to go! You have now created a working boilerplate code for the Android
    Wear standalone application without the phone companion application. When successfully
    created, you will see the following files and codes added to your project by default:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 做得好！您现在已经为Android Wear独立应用程序创建了工作的样板代码，而没有手机伴侣应用程序。成功创建后，您将看到以下文件和代码默认添加到您的项目中：
- en: '![](img/00037.jpeg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00037.jpeg)'
- en: 'If your SDK is not updated with API level 25, you might see the Wear option
    in the Android Studio project creating prompts with Android Wear support library
    1.x; you can update this in the Wear module Gradle file with the following dependency:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的SDK没有更新到API级别25，那么在Android Studio项目创建提示中，您可能会看到带有Android Wear支持库1.x的Wear选项；你可以在Wear模块的Gradle文件中用以下依赖关系进行更新：
- en: '[PRE8]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Creating a Wear emulator
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Wear模拟器
- en: The process of creating a Wear emulator is very similar to creating a phone
    emulator.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 创建Wear模拟器的过程与创建手机模拟器非常相似。
- en: 'In the AVD manager, click on the Create Virtual Device... button:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在AVD管理器中，点击“创建虚拟设备...”按钮：
- en: '![](img/00038.jpeg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00038.jpeg)'
- en: 'Choose the required form factor emulator according to your application needs.
    Now, let''s create the Android Wear square emulator:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的应用程序需求选择所需的形式因素模拟器。现在，让我们创建一个Android Wear方形模拟器：
- en: '![](img/00039.jpeg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00039.jpeg)'
- en: 'After selecting the right emulator for your Wear, you will get another prompt
    to choose the Wear operating system. Let''s choose the API Level 25 Nougat emulator,
    as shown in the following screenshot:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在为您的Wear选择合适的模拟器之后，您将看到一个提示，选择Wear操作系统。如下截图所示，我们选择API级别25的Nougat模拟器：
- en: '![](img/00040.jpeg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00040.jpeg)'
- en: 'The last prompt asks for the emulator name and other orientation configurations
    based on your needs:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个提示会根据你的需要询问模拟器名称和其他方向配置：
- en: '![](img/00041.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00041.jpeg)'
- en: 'Way to go! Now, we have successfully created a square form factor emulator
    for the project. Let''s run the project that we have created in the emulator:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 做得好！现在，我们已经成功为项目创建了一个方形尺寸的模拟器。让我们在模拟器中运行我们创建的项目：
- en: '![](img/00042.jpeg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00042.jpeg)'
- en: Google recommends developing Wear apps in the actual hardware device to have
    the best user experience. However, working on emulators has the benefit of creating
    different screen form factors to check the application's rendering.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌建议在真实硬件设备上开发Wear应用以获得最佳用户体验。然而，在模拟器上工作可以创建不同的屏幕尺寸，以检查应用程序的渲染情况。
- en: Working with actual Wear device
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用实际的Wear设备工作
- en: Open the settings menu on the Wear device
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Wear设备上打开设置菜单
- en: Go to About device
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往关于设备
- en: Click on the build number seven times to enable developer mode
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击构建号七次以启用开发者模式
- en: Now enable ADB debugging on the watch
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在手表上启用ADB调试
- en: You can now connect the Wear device directly to your machine with the USB cable.
    You can debug your applications over Wi-Fi and Bluetooth with the following setups.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以用USB线将Wear设备直接连接到你的机器上。通过以下设置，你可以在Wi-Fi和蓝牙上进行应用调试。
- en: Debugging over Wi-Fi
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Wi-Fi进行调试
- en: Make sure your watch has the developer options enabled. Debugging over Wi-Fi
    is possible only when the Wear device and machine are connected to the same network.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的手表已启用开发者选项。只有在Wear设备和机器连接到同一网络时，才能通过Wi-Fi进行调试。
- en: In the Wear device developer option, tap on Debug over Wi-Fi
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Wear设备开发者选项中，点击“通过Wi-Fi调试”
- en: The watch will display its IP address (for example, 192.168.1.100). Keep a reference;
    we need this for the next step.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手表将显示其IP地址（例如，192.168.1.100）。保留参考，下一步我们需要这个。
- en: Connect the debugger to the device
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将调试器连接到设备
- en: 'Using the following command, we can attach the actual device to the ADB debugger:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下命令，我们可以将实际设备连接到ADB调试器：
- en: '[PRE9]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Enable Bluetooth debugging
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用蓝牙调试
- en: 'We need to ensure debugging is enabled in developer options, as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要确保在开发者选项中启用了调试，如下所示：
- en: Enable Debug over Bluetooth
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用通过蓝牙的调试
- en: Install the companion app on the phone (download it from [https://play.google.com/store/apps/details?id=com.google.android.wearable.app&hl=en](https://play.google.com/store/apps/details?id=com.google.android.wearable.app&hl=en))
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在手机上安装伴侣应用（从[https://play.google.com/store/apps/details?id=com.google.android.wearable.app&hl=en](https://play.google.com/store/apps/details?id=com.google.android.wearable.app&hl=en)下载）
- en: Go to settings in the companion app
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在伴侣应用的设置中
- en: Enable debugging over Bluetooth
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过蓝牙启用调试
- en: Connect the phone to the machine through the cable
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过电缆将手机连接到机器
- en: 'You can use the following commands to establish the connection:'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用以下命令建立连接：
- en: '[PRE10]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In your Android Wear, just allow ADB Debugging when it asks.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的Android Wear上，当它提示时允许ADB调试。
- en: Now that we have a working setup of our development environment, let's understand
    the basic Android Wear-specific UI components.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置了开发环境，让我们了解基本的Android Wear特定UI组件。
- en: Summary
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we have looked at the initial setup for Wear application development.
    We have understood the necessary components to download, setting up a Wear emulator,
    connecting the Wear emulator to the ADB bridge, debugging over Wi-Fi, and essential
    user interface components specific to Wear development. In the next chapter, we
    will explore how to build a note-taking application which persists the data that
    users enter.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了Wear应用开发的初步设置。我们了解了需要下载的必要组件，设置Wear模拟器，将Wear模拟器连接到ADB桥，通过Wi-Fi进行调试，以及特定于Wear开发的界面组件。在下一章中，我们将探讨如何构建一个笔记应用，该应用可以保存用户输入的数据。

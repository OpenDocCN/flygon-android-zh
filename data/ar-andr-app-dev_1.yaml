- en: Chapter 1. Augmented Reality Concepts and Tools
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 增强现实概念与工具
- en: '**Augmented Reality** (**AR**) offers us a new way to interact with the physical
    (or real) world. It creates a modified version of our reality, enriched with digital
    (or virtual) information, on the screen of your desktop computer or mobile device.
    Merging and combining the virtual and the real can leverage a totally new range
    of user experience, going beyond what common apps are capable of. Can you imagine
    playing a first-person shooter in your own neighborhood, with monsters popping
    up at the corner of your street (as it is possible with ARQuake by *Bruce Thomas*
    at the University of South Australia, see left-hand side of the following screenshot)?
    Will it not be a thrilling moment to go to a natural history museum and see a
    dusty dinosaur skeleton coming virtually alive—flesh and bone—in front of your
    eyes? Or can you imagine reading a story to your kid and seeing some proud rooster
    appear and walk over the pages of a book (as it is possible with the AR version
    of the "House that Jack Built" written by *Gavin Bishop*, see the right-hand side
    of the following screenshot). In this book, we show you how to practically implement
    such experiences on the Android platform.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**增强现实**（**AR**）为我们提供了一种与物理（或真实）世界互动的新方式。它在我们桌面电脑或移动设备的屏幕上，创建了一个融入了数字（或虚拟）信息的现实世界的改良版本。将虚拟与现实融合在一起可以开创一系列全新的用户体验，超越常见应用的能力范围。你能想象在自家附近玩第一人称射击游戏，街角突然冒出怪物吗（正如澳大利亚南澳大学的*Bruce
    Thomas*开发的ARQuake中所示，见下截图左侧）？在自然历史博物馆看到尘封的恐龙骨架在你眼前虚拟复活，血肉丰满，难道不是一件激动人心的事情吗？或者，当你给孩子讲故事时，看到一只骄傲的公鸡出现在书上并走在页面之上（正如*Gavin
    Bishop*所著的《杰克建的房子》AR版所示，见下截图右侧）。在这本书中，我们将向您展示如何在Android平台上实际实现这些体验。'
- en: '![Augmented Reality Concepts and Tools](img/8553_01_01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![增强现实概念与工具](img/8553_01_01.jpg)'
- en: A decade ago, experienced researchers would have been among the few who were
    able to create these types of applications. They were generally limited to demonstration
    prototypes or in the production of an ad hoc project running for a limited period
    of time. Now, developing AR experiences has become a reality for a wide range
    of mobile software developers. Over the last few years, we have been spectators
    to great progresses in computational power, the miniaturization of sensors, as
    well as increasingly accessible and featured multimedia libraries. These advances
    allow developers to produce AR applications more easily than ever before. This
    already leads to an increasing number of AR applications flourishing on mobile
    app stores such as Google Play. While an enthusiastic programmer can easily stitch
    together some basic code snippets to create a facsimile of a basic AR application,
    they are generally poorly designed, with limited functionalities, and hardly reusable.
    To be able to create sophisticated AR applications, one has to understand what
    Augmented Reality truly is.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 十年前，有经验的研发人员是少数能够创建这类应用程序的人群。它们通常仅限于演示原型或者在有限时间内运行的临时项目中。现在，开发增强现实（AR）体验已经成为广泛移动软件开发者的现实。在过去的几年里，我们见证了计算能力、传感器小型化以及多媒体库的易用性和功能性的巨大进步。这些进展使得开发者能够比以往更容易地制作AR应用程序。这已经导致在诸如Google
    Play之类的移动应用商店中涌现出越来越多的AR应用。尽管热情的程序员可以轻松地将一些基本的代码片段拼凑起来，创建一个基本AR应用的外观，但它们通常设计粗糙，功能有限，几乎不具备可重用性。为了能够创建复杂的AR应用，我们必须真正理解增强现实（Augmented
    Reality）是什么。
- en: In this chapter, we will guide you toward a better understanding of AR. We will
    describe some of the major concepts of AR. We will then move on from these examples
    to the foundational software components for AR. Finally, we will introduce the
    development tools that we will use throughout this book, which will support our
    journey into creating productive and modular AR software architecture.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将引导您更深入地理解AR。我们将描述AR的一些主要概念。然后，我们将从这些例子过渡到AR的基础软件组件。最后，我们将介绍本书将使用的开发工具，这些工具将支持我们构建高效且模块化的AR软件架构的旅程。
- en: Ready to change your reality for Augmented Reality? Let's start.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好为了增强现实而改变你的现实了吗？让我们开始吧。
- en: A quick overview of AR concepts
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AR概念快速概览
- en: As AR has become increasingly popular in the media over the last few years,
    unfortunately, several distorted notions of Augmented Reality have evolved. Anything
    that is somehow related to the real world and involves some computing, such as
    standing in front of a shop and watching 3D models wear the latest fashions, has
    become AR. Augmented Reality emerged from research labs a few decades ago and
    different definitions of AR have been produced. As more and more research fields
    (for example, computer vision, computer graphics, human-computer interaction,
    medicine, humanities, and art) have investigated AR as a technology, application,
    or concept, multiple overlapping definitions now exist for AR. Rather than providing
    you with an exhaustive list of definitions, we will present some major concepts
    present in any AR application.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 随着近年来增强现实在媒体上变得越来越流行，不幸的是，一些关于增强现实的扭曲观念也产生了。任何与真实世界有关，并涉及一些计算的活动，比如站在商店前观看3D模型穿着最新时尚，都变成了增强现实。增强现实从几十年前的实验室研究中出现，产生了不同的定义。随着越来越多研究领域（例如，计算机视觉、计算机图形学、人机交互、医学、人文和艺术）将增强现实作为一个技术、应用或概念进行研究，现在存在多个重叠的增强现实定义。我们不会为您提供详尽的定义列表，而是介绍任何增强现实应用中存在的一些主要概念。
- en: Sensory augmentation
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 感官增强
- en: The term Augmented Reality itself contains the notion of reality. Augmenting
    generally refers to the aspect of influencing one of your human sensory systems,
    such as vision or hearing, with additional information. This information is generally
    defined as digital or virtual and will be produced by a computer. The technology
    currently uses **displays** to overlay and merge the physical information with
    the digital information. To augment your hearing, modified headphones or earphones
    equipped with microphones are able to mix sound from your surroundings in real-time
    with sound generated by your computer. In this book, we will mainly look at visual
    augmentation.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: “增强现实”这个词本身包含了现实的概念。增强通常指的是通过附加信息影响你的一个人类感官系统，如视觉或听觉的方面。这种信息通常被定义为数字或虚拟的，并由计算机生成。目前的技术使用**显示**来叠加和融合物理信息与数字信息。为了增强你的听觉，配备麦克风的改良耳机或耳塞能够实时将你周围的声音与计算机生成的声音混合。在这本书中，我们将主要关注视觉增强。
- en: Displays
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示技术
- en: The TV screen at home is the ideal device to perceive virtual content, streamed
    from broadcasts or played from your DVD. Unfortunately, most common TV screens
    are not able to capture the real world and augment it. An Augmented Reality display
    needs to simultaneously show the real and virtual worlds.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 家中的电视屏幕是感知虚拟内容的理想设备，无论是来自广播的流媒体还是播放的DVD内容。不幸的是，大多数常见的电视屏幕无法捕捉现实世界并将其增强。增强现实显示需要同时展示真实世界和虚拟世界。
- en: One of the first display technologies for AR was produced by *Ivan Sutherland*
    in 1964 (named "The Sword of Damocles"). The system was rigidly mounted on the
    ceiling and used some CRT screens and a transparent display to be able to create
    the sensation of visually merging the real and virtual.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 增强现实最早期的显示技术之一是由*Ivan Sutherland*在1964年生产的（名为“达摩克利斯之剑”）。该系统被刚性安装在天花板上，并使用一些CRT屏幕和一个透明显示来创建视觉上融合真实和虚拟的感觉。
- en: 'Since then, we have seen different trends in AR display, going from static
    to wearable and handheld displays. One of the major trends is the usage of **optical
    see-through** (**OST**) technology. The idea is to still see the real world through
    a semi-transparent screen and project some virtual content on the screen. The
    merging of the real and virtual worlds does not happen on the computer screen,
    but directly on the retina of your eye, as depicted in the following figure:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 从那时起，我们在增强现实显示中看到了不同的趋势，从静态显示发展到可穿戴和手持显示。其中一个主要趋势是使用**光学透视**（**OST**）技术。这个想法是仍然通过半透明屏幕看到真实世界，并在屏幕上投射一些虚拟内容。真实世界和虚拟世界的融合不是在电脑屏幕上发生的，而是直接在你的视网膜上，如下面的图所示：
- en: '![Displays](img/8553_01_03.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![显示技术](img/8553_01_03.jpg)'
- en: 'The other major trend in AR display is what we call **video see-through** (**VST**)
    technology. You can imagine perceiving the world not directly, but through a video
    on a monitor. The video image is mixed with some virtual content (as you will
    see in a movie) and sent back to some standard display, such as your desktop screen,
    your mobile phone, or the upcoming generation of head-mounted displays as shown
    in the following figure:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: AR显示的另一个主要趋势是我们所说的**视频透视**（**VST**）技术。你可以想象不是直接感知世界，而是通过显示器上的视频来感知。视频图像与一些虚拟内容混合（正如你在电影中看到的）并返回到一些标准显示设备，如桌面屏幕、移动电话或如下图中即将出现的一代头戴式显示器：
- en: '![Displays](img/8553_01_04.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![显示设备](img/8553_01_04.jpg)'
- en: In this book, we will work on Android-driven mobile phones and, therefore, discuss
    only VST systems; the video camera used will be the one on the back of your phone.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用安卓驱动的移动电话，因此只讨论VST系统；所使用的摄像机将是手机背面的那一个。
- en: Registration in 3D
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3D注册
- en: 'With a display (OST or VST) in your hands, you are already able to superimpose
    things from your real world, as you will see in TV advertisements with text banners
    at the bottom of the screen. However, any virtual content (such as text or images)
    will remain fixed in its position on the screen. The superposition being really
    static, your AR display will act as a **head-up display** (**HUD**), but won''t
    really be an AR as shown in the following figure:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 手持显示设备（OST或VST），你已经能够将真实世界中的事物叠加在上面，正如你在电视广告中看到屏幕底部有文字横幅。然而，任何虚拟内容（如文本或图像）将保持其在屏幕上的固定位置。这种叠加实际上是静态的，你的AR显示屏将充当**抬头显示**（**HUD**），但并不是如下图所示的那种真正的AR：
- en: '![Registration in 3D](img/8553_01_05.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![3D注册](img/8553_01_05.jpg)'
- en: Google Glass is an example of an HUD. While it uses a semitransparent screen
    like an OST, the digital content remains in a static position.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Google Glass是一个HUD的例子。尽管它使用像OST那样的半透明屏幕，但数字内容保持在一个静态位置。
- en: AR needs to know more about real and virtual content. It needs to know where
    things are in space (**registration**) and follow where they are moving (**tracking**).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 增强现实（AR）需要更多地了解真实内容和虚拟内容。它需要知道物体在空间中的位置（**注册**）并跟踪它们的移动（**追踪**）。
- en: 'Registration is basically the idea of aligning virtual and real content in
    the same space. If you are into movies or sports, you will notice that 2D or 3D
    graphics are superimposed onto scenes of the physical world quite often. In ice
    hockey, the puck is often highlighted with a colored trail. In movies such as
    *Walt Disney''s* TRON (1982 version), the real and virtual elements are seamlessly
    blended. However, AR differs from those effects as it is based on all of the following
    aspects (proposed by *Ronald T. Azuma* in 1997):'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注册基本上是将虚拟和真实内容在同一空间对齐的想法。如果你喜欢看电影或体育，你会注意到2D或3D图形经常被叠加到物理世界的场景中。在冰球中，球通常用彩色轨迹突出显示。在诸如*沃尔特·迪士尼*的《创》（1982年版）等电影中，真实和虚拟元素无缝融合。然而，AR与这些效果不同，因为它基于以下所有方面（由*Ronald
    T. Azuma*在1997年提出）：
- en: '**It''s in 3D**: In the olden days, some of the movies were edited manually
    to merge virtual visual effects with real content. A well-known example is Star
    Wars, where all the lightsaber effects have been painted by hand by hundreds of
    artists and, thus, frame by frame. Nowadays, more complex techniques support merging
    digital 3D content (such as characters or cars) with the video image (and is called
    match moving). AR is inherently always doing that in a 3D space.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**它是3D的**：在早期，有些电影是通过手动编辑将虚拟视觉效果与真实内容合并的。一个著名的例子是《星球大战》，其中所有的光剑效果都是由数百名艺术家手工绘制的，因此是逐帧制作的。如今，更复杂的技术支持将数字3D内容（如角色或汽车）与视频图像合并（这称为匹配移动）。AR本质上始终在3D空间中完成这一工作。'
- en: '**The registration happens in real time**: In a movie, everything is pre-recorded
    and generated in a studio; you just play the media. In AR, everything is in real
    time, so your application needs to merge, at each instance, reality and virtuality.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注册是实时发生的**：在电影中，一切都是预先录制并在工作室中生成的；你只需播放媒体。在AR中，一切都是实时的，因此你的应用程序需要在每个实例中将现实与虚拟性合并。'
- en: '**It''s interactive**: In a movie, you only look passively at the scene from
    where it has been shot. In AR, you can actively move around, forward, and backward
    and turn your AR display—you will still see an alignment between both worlds.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**它是交互式的**：在电影中，你只是被动地从拍摄场景的地方观看。在AR中，你可以主动地四处移动，前进和后退，并转动你的AR显示屏——你仍然会看到两个世界之间的对齐。'
- en: Interaction with the environment
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 与环境的互动
- en: Building a rich AR application needs interaction between environments; otherwise
    you end up with pretty, 3D graphics that can turn boring quite fast. AR interaction
    refers to selecting and manipulating digital and physical objects and navigating
    in the augmented scene. Rich AR applications allow you to use objects which can
    be on your table, to move some virtual characters, use your hands to select some
    floating virtual objects while walking on the street, or speak to a virtual agent
    appearing on your watch to arrange a meeting later in the day. In [Chapter 6](ch06.html
    "Chapter 6. Make It Interactive – Create the User Experience"), *Make It Interactive
    – Create the User Experience*, we will discuss mobile-AR interaction. We will
    look at how some of the standard mobile interaction techniques can also be applied
    to AR. We will also dig into specific techniques involving the manipulation of
    the real world.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 构建丰富的AR应用需要环境之间的交互；否则，你最终会得到很快就变得无聊的漂亮3D图形。AR交互是指选择和操作数字和物理对象，并在增强的场景中导航。丰富的AR应用允许你使用桌面上的对象，移动一些虚拟角色，在街上行走时用手选择一些漂浮的虚拟对象，或者与出现在你的手表上的虚拟代理交谈，安排当天晚些时候的会议。[在第6章](ch06.html
    "第6章. 让它互动——创造用户体验") *让它互动——创造用户体验*中，我们将讨论移动AR的交互。我们将探讨一些标准的移动交互技术如何也应用于AR。我们还将深入研究涉及操作现实世界的特定技术。
- en: Choose your style – sensor-based and computer vision-based AR
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择你的风格——基于传感器和计算机视觉的增强现实（AR）
- en: Previously in this chapter, we discussed what AR is and elaborated on display,
    registration, and interaction. As some of the notions in this book can also be
    applied to any AR development, we will specifically look at **mobile AR**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章前面的内容中，我们讨论了增强现实（AR）的定义，并详细阐述了显示、注册和交互。由于本书中的一些概念同样适用于任何AR开发，我们将特别关注**移动AR**。
- en: Mobile AR sometimes refers to any transportable, wearable AR system that can
    be used indoors and outdoors. In this book, we will look at mobile AR with the
    most popular connotation used today—using handheld mobile devices, such as smartphones
    or tablets. With the current generation of smartphones, two major approaches to
    the AR system can be realized. These systems are characterized by their specific
    registration techniques and, also, their interaction range. They both enable a
    different range of applications. The systems, sensor-based AR and computer vision-based
    AR, are using the video see-through display, relying on the camera and screen
    of the mobile phone.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 移动AR有时指的是任何可携带、可穿戴的AR系统，这种系统可以在室内外使用。在本书中，我们将探讨目前最流行的移动AR含义——使用手持移动设备，如智能手机或平板电脑。借助当前一代的智能手机，可以实现两种主要的AR系统方法。这些系统以其特定的注册技术和交互范围为特征，同时它们也支持不同范围的应用。基于传感器的AR和基于计算机视觉的AR系统都使用视频透视显示，依赖于手机的摄像头和屏幕。
- en: Sensor-based AR
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于传感器的AR
- en: The first type of system is called sensor-based AR and generally referred to
    as a GPS plus inertial AR (or, sometimes, outdoor AR system). Sensor-based AR
    uses the location sensor from a mobile as well as the orientation sensor. Combining
    both the location and orientation sensors delivers the global position of the
    user in the physical world.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类系统称为基于传感器的AR，通常被称为GPS加惯性AR（有时也称为户外AR系统）。基于传感器的AR使用移动设备的位置传感器和方向传感器。结合位置和方向传感器可以提供用户在物理世界中的全球位置。
- en: The location sensor is mainly supported with a **GNSS** (**Global Navigation
    Satellite System**) receiver. One of the most popular GNSS receivers is the GPS
    (maintained by the USA), which is present on most smartphones.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 位置传感器主要支持**全球导航卫星系统**（**GNSS**）接收器。最流行的GNSS接收器之一是GPS（由美国维护），它几乎存在于所有智能手机上。
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: Other systems are currently (or will soon be) deployed, such as GLONASS (Russia),
    Galileo (Europe, 2020), or Compass (China, 2020).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 其他系统目前正在（或即将）部署，例如GLONASS（俄罗斯）、Galileo（欧洲，2020年）或Compass（中国，2020年）。
- en: There are several possible orientation sensors available on handheld devices,
    such as accelerometers, magnetometers, and gyroscopes. The measured position and
    orientation of your handheld device provides tracking information, which is used
    for registering virtual objects on the physical scene. The position reported by
    the GPS module can be both inaccurate and updated slower than you move around.
    This can result in a **lag,** that is, when you do a fast movement, virtual elements
    seem to float behind. One of the most popular types of AR applications with sensor-based
    systems are AR browsers, which visualize **Points of Interests** (**POIs**), that
    is, simple graphical information about things around you. If you try some of the
    most popular products such as Junaio, Layar, or Wikitude, you will probably observe
    this effect of lag.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 手持设备上有几种可能的定向传感器，如加速度计、磁力计和陀螺仪。你的手持设备测量的位置和方向提供了追踪信息，这些信息用于在物理场景上注册虚拟对象。由GPS模块报告的位置可能不准确，且更新速度比你移动的速度慢。这可能导致**滞后**现象，即当你快速移动时，虚拟元素似乎会飘在后面。基于传感器的系统中最受欢迎的AR应用类型之一是AR浏览器，它们可以可视化**兴趣点**（**POI**），即关于你周围事物的简单图形信息。如果你尝试一些最受欢迎的产品，如Junaio、Layar或Wikitude，你可能会观察到这种滞后效应。
- en: The advantage of this technique is that the sensor-based ARs are working on
    a general scale around the world, in practically any physical outdoor position
    (such as if you are in the middle of the desert or in a city). One of the limitations
    of such systems is their inability to work inside (or work poorly) or in any occluded
    area (no line-of-sight with the sky, such as in forests or on streets with high
    buildings all around). We will discuss more about this type of mobile AR system
    in [Chapter 4](ch04.html "Chapter 4. Locating in the World"), *Locating in the
    World*.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术的优点在于，基于传感器的增强现实（AR）可以在全球范围内普遍适用，几乎在任何物理户外位置都能工作（比如你身处于沙漠中央或是一座城市中）。这种系统的一个限制是它们无法在室内工作（或者工作效果差），或者在任意遮挡区域工作（与天空没有视线，如在森林中或四周高楼林立的街道上）。我们将在[第四章](ch04.html
    "第四章. 在世界中定位")《在世界中定位》中进一步讨论这种类型的移动AR系统。
- en: Computer vision-based AR
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于计算机视觉的AR
- en: The other popular type of AR system is computer vision-based AR. The idea here
    is to leverage the power of the inbuilt camera for more than capturing and displaying
    the physical world (as done in sensor-based AR). This technology generally operates
    with image processing and computer vision algorithms that analyze the image to
    detect any object visible from the camera. This analysis can provide information
    about the position of different objects and, therefore, the user (more about that
    in [Chapter 5](ch05.html "Chapter 5. Same as Hollywood – Virtual on Physical Objects"),
    *Same as Hollywood – Virtual on Physical Objects*).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种流行的AR系统是基于计算机视觉的AR。这里的想法是利用内置相机的力量，不仅仅是为了捕捉和显示物理世界（如基于传感器的AR所做的）。这项技术通常与图像处理和计算机视觉算法一起工作，分析图像以检测相机可见的任何物体。这种分析可以提供关于不同物体位置的信息，因此也能提供关于用户的信息（更多内容请见[第五章](ch05.html
    "第五章. 好莱坞风格——虚拟物体叠加在物理物体上")，《好莱坞风格——虚拟物体叠加在物理物体上》）。
- en: The advantage is that things seem to be perfectly aligned. The current technology
    allows you to recognize different types of planar pictorial content, such as a
    specifically designed marker (**marker-based tracking**) or more natural content
    (**markerless tracking**). One of the disadvantages is that vision-based AR is
    heavy in processing and can drain the battery really rapidly. Recent generations
    of smartphones are more adapted to handle this type of problem, being that they
    are optimized for energy consumption.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术的优点是事物似乎完美对齐。当前技术允许你识别不同类型的平面图像内容，比如特别设计的标记（**基于标记的追踪**）或更自然的内容（**无标记追踪**）。一个缺点是，基于视觉的AR在处理上较为繁重，并且可能非常快地耗尽电池。最近几代的智能手机更适合处理这类问题，因为它们针对能源消耗进行了优化。
- en: AR architecture concepts
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 增强现实（AR）架构概念
- en: So let's explore how we can support the development of the previously described
    concepts and the two general AR systems. As in the development of any other application,
    some well-known concepts of software engineering can be applied in developing
    an AR application. We will look at the structural aspect of an AR application
    (software components) followed by the behavioral aspect (control flow).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们探讨如何支持之前描述的概念以及两种通用AR系统的发展。与开发任何其他应用程序一样，一些软件工程中的知名概念可以应用于AR应用程序的开发。我们将先看看AR应用程序的结构方面（软件组件），然后是行为方面（控制流程）。
- en: AR software components
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AR软件组件
- en: 'An AR application can be structured in three layers: the application layer,
    the AR layer, and the OS/Third Party layer.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 增强现实应用程序可以结构化为三层：应用层、AR层和操作系统/第三方层。
- en: The **application layer** corresponds to the domain logic of your application.
    If you want to develop an AR game, anything related to managing the game assets
    (characters, scenes, objects) or the game logic will be implemented in this specific
    layer. The AR layer corresponds to the instantiation of the concepts we've previously
    described. Each of the AR notions and concepts that we've presented (display,
    registration, and interaction) can be seen, in terms of software, as a modular
    element, a component, or a service of the AR layer.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用层**对应于应用程序的领域逻辑。如果您想开发一个AR游戏，与游戏资源管理（角色、场景、物体）或游戏逻辑相关的任何内容都将在这个特定层中实现。AR层对应于我们之前描述的概念的实例化。我们之前提出的每个AR概念和理念（显示、注册和交互）在软件层面都可以被视为一个模块元素、组件或AR层的服务。'
- en: You can note that we have separated tracking from registration in the figure,
    making tracking one major software component for an AR application. Tracking,
    which provides spatial information to the registration service, is a complex and
    computationally intensive process in any AR application. The OS/Third Party layer
    corresponds to existing tools and libraries which don't provide any AR functionalities,
    but will enable the AR layer. For example, the **Display** module for a mobile
    application will communicate with the OS layer to access the camera to create
    a view of the physical world. On Android, the Google Android API is part of this
    layer. Some additional libraries, such as JMonkeyEngine, which handle the graphics,
    are also part of this layer.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以注意到，在图中我们将跟踪与注册分离开了，使得跟踪成为AR应用程序的一个主要软件组件。在任何AR应用程序中，提供空间信息给注册服务的跟踪都是一个复杂且计算密集型的过程。操作系统/第三方层对应于现有的工具和库，它们本身不提供任何AR功能，但将支持AR层。例如，移动应用程序的**显示**模块将与操作系统层通信，访问摄像头以创建物理世界的视图。在Android上，Google
    Android API就是这一层的一部分。一些额外的库，如处理图形的JMonkeyEngine，也是这一层的一部分。
- en: 'In the rest of the book, we will show you how to implement the different modules
    of the AR layer, which also involves communication with the OS/Third Party layer.
    The major layers of an AR application (see the right-hand side of the following
    figure), with their application modules (the left-hand side of the following figure),
    are depicted in the following figure:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的其余部分，我们将向您展示如何实现AR层的不同模块，这也涉及到与操作系统/第三方层的通信。AR应用程序的主要层（见以下图的右侧），以及它们的应用模块（以下图的左侧），在以下图中描绘：
- en: '![AR software components](img/8553_01_06.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![AR软件组件](img/8553_01_06.jpg)'
- en: AR control flow
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AR控制流程
- en: With the concept of software layers and components in mind, we can now look
    at how information will flow in a typical AR application. We will focus here on
    describing how each of the components of the AR layer relate to each other over
    time and what their connections with the OS/Third Party layer are.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了软件层次和组件的概念之后，我们现在可以看看在典型的增强现实（AR）应用程序中信息的流动方式。在这里，我们将重点描述AR层的每个组件随时间如何相互关联，以及它们与操作系统/第三方层之间的连接是什么。
- en: 'Over the last decade, AR researchers and developers have converged toward a
    well-used method of combining these components using a similar order of execution—the
    AR control flow. We present here the general AR control flow used by the community
    and summarized in the following figure:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去十年中，AR研究人员和开发人员趋向于使用一种广泛采用的方法来组合这些组件，并采用类似的执行顺序——AR控制流程。在这里，我们介绍了社区总结并在以下图中概述的一般AR控制流程：
- en: '![AR control flow](img/8553_01_07.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![AR控制流程](img/8553_01_07.jpg)'
- en: The preceding figure, read from the bottom up, shows the main activities of
    an AR application. This sequence is repeated indefinitely in an AR application;
    it can be seen as the typical **AR main loop** (please note that we've excluded
    the domain logic here as well as the OS activities). Each activity corresponds
    to the same module we've presented before. The structure of the AR layer and AR
    control flow is, therefore, quite symmetric.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图表，从下往上阅读，展示了AR应用程序的主要活动。这个顺序在AR应用程序中无限重复；它可以被视为典型的**AR主循环**（请注意，我们在这里排除了领域逻辑以及操作系统活动）。每个活动对应我们之前展示的相同模块。因此，AR层和AR控制流程的结构非常对称。
- en: Understand that this control flow is the key to developing an AR application,
    so we will come back to it and use it in the rest of the book. We will get into
    more details of each of the components and steps in the next chapter.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这个控制流程是开发AR应用程序的关键，因此我们将在本书的剩余部分回到这个主题并使用它。下一章我们将详细讲解各个组件和步骤。
- en: 'So, looking at the preceding figure, the main activities and steps in your
    application are as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，查看前面的图表，你的应用程序中的主要活动和步骤如下：
- en: '**Manage the display first**: For mobile AR, this means accessing the video
    camera and showing a captured image on the screen (a view of your physical world).
    We will discuss that in [Chapter 2](ch02.html "Chapter 2. Viewing the World"),
    *Viewing the World*. This also involves matching camera parameters between the
    physical camera and the virtual one that renders your digital objects ([Chapter
    3](ch03.html "Chapter 3. Superimposing the World"), *Superimposing the World*).'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**首先管理显示**：对于移动AR来说，这意味着访问视频摄像头并在屏幕上显示捕获的图像（你物理世界的视图）。我们将在[第2章](ch02.html "第2章.
    观察世界")，*观察世界*中讨论这个问题。这也涉及到在物理摄像头和渲染你的数字对象的虚拟摄像头之间匹配相机参数（[第3章](ch03.html "第3章.
    覆盖世界")，*覆盖世界*）。'
- en: '**Register and track your objects**: Analyze the sensors on your mobile (approach
    1) or analyze the video image (approach 2) and detect the position of each element
    of your world (such as camera or objects). We will discuss this aspect in [Chapter
    4](ch04.html "Chapter 4. Locating in the World"), *Locating in the World* and
    [Chapter 5](ch05.html "Chapter 5. Same as Hollywood – Virtual on Physical Objects"),
    *Same as Hollywood – Virtual on Physical Objects*.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**注册并跟踪你的对象**：分析你手机上的传感器（方法1）或分析视频图像（方法2），并检测你的世界中的每个元素的位置（如相机或物体）。我们将在[第4章](ch04.html
    "第4章. 在世界中定位")，*在世界中定位*和[第5章](ch05.html "第5章. 与好莱坞相同 - 在物理对象上的虚拟")，*与好莱坞相同 - 在物理对象上的虚拟*中讨论这个方面。'
- en: '**Interact**: Once your content is correctly registered, you can start to interact
    with it, as we will discuss in [Chapter 6](ch06.html "Chapter 6. Make It Interactive
    – Create the User Experience"), *Make It Interactive – Create the User Experience*.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**互动**：一旦你的内容正确注册，你就可以开始与它互动，我们将在[第6章](ch06.html "第6章. 让它互动 - 创建用户体验")，*让它互动
    - 创建用户体验*中讨论这一点。'
- en: System requirements for development and deployment
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开发和部署的系统要求
- en: 'If you want to develop Augmented Reality applications for Android, you can
    share the majority of tools with regular Android developers. Specifically, you
    can leverage the power of the widely supported **Google Android Developer Tools
    Bundle** (**ADT Bundle**). This includes the following:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要为Android开发增强现实应用程序，你可以与常规Android开发者共享大部分工具。特别是，你可以利用广泛支持的**谷歌Android开发者工具包**（**ADT
    Bundle**）。它包括以下内容：
- en: The Eclipse **Integrated Development Environment** (**IDE**)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse **集成开发环境**（**IDE**）
- en: The **Google Android Developer Tools** (**ADT**) plugin for Eclipse
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于Eclipse的**谷歌Android开发者工具**（**ADT**）插件
- en: The Android platform for your targeted devices (further platforms can be downloaded)
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对你的目标设备的Android平台（可以下载其他平台）
- en: The Android Emulator with the latest system image
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带有最新系统映像的Android模拟器
- en: 'Besides this standard package common to many Android development environments,
    you will need the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这个许多Android开发环境共有的标准包之外，你还需要以下内容：
- en: A snapshot of **JMonkeyEngine** (**JME**), version 3 or higher
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JMonkeyEngine**（**JME**）的快照，版本3或更高'
- en: '**Qualcomm® Vuforia^(TM)** **SDK** (**Vuforia^(TM)**)**,** version 2.6 or higher'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高通® Vuforia^(TM)** **软件开发包**（**Vuforia^(TM)**），版本2.6或更高'
- en: '**Android Native Development Kit** (**Android NDK**), version r9 or higher'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android原生开发工具包**（**Android NDK**），版本r9或更高'
- en: The JME Java OpenGL® game engine is a free toolkit that brings the 3D graphics
    in your programs to life. It provides 3D graphics and gaming middleware that frees
    you from exclusively coding in low-level **OpenGL**® **ES** (**OpenGL® for Embedded
    Systems**), for example, by providing an asset system for importing models, predefined
    lighting, and physics and special effects components.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: JME Java OpenGL®游戏引擎是一个免费的工具集，可以让你的程序中的3D图形生动起来。它提供了3D图形和游戏中间件，使你无需专门使用低级**OpenGL**®
    **ES** (**OpenGL® for Embedded Systems**，例如)进行编码，通过提供导入模型的资源系统、预定义的照明、物理和特效组件。
- en: The Qualcomm® Vuforia^(TM) SDK brings state-of-the art computer vision algorithms
    targeted at recognizing and tracking a wide variety of objects, including fiducials
    (frame markers), image targets, and even 3D objects. While it is not needed for
    sensor-based AR, it allows you to conveniently implement computer vision-based
    AR applications.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 高通® Vuforia^(TM) SDK集成了先进的计算机视觉算法，旨在识别和跟踪各种对象，包括校准标记（框架标记）、图像目标和甚至3D对象。虽然它对于基于传感器的AR不是必需的，但它可以让你方便地实现基于计算机视觉的AR应用程序。
- en: The Google Android NDK is a toolset for performance-critical applications. It
    allows parts of the application to be written in native-code languages (C/C++).
    While you don't need to code in C or C++, this toolset is required by Vuforia^(TM)
    SDK.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌Android NDK是用于性能关键型应用程序的工具集。它允许应用程序的部分内容用本地代码语言（C/C++）编写。虽然你不需要用C或C++编码，但Vuforia^(TM)
    SDK需要这个工具集。
- en: Of course, you are not bound to a specific IDE and can work with command-line
    tools as well. The code snippets themselves, which we present in this book, do
    not rely on the use of a specific IDE. However, within this book, we will give
    you setup instructions specifically for the popular Eclipse IDE. Furthermore,
    all development tools can be used on Windows (XP or later), Linux, and Mac OS
    X (10.7 or later).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你不必局限于特定的IDE，也可以使用命令行工具。我们在这本书中提供的代码片段并不依赖于特定IDE的使用。然而，在本书中，我们将为你提供针对流行的Eclipse
    IDE的设置说明。此外，所有开发工具都可以在Windows（XP或更高版本）、Linux和Mac OS X（10.7或更高版本）上使用。
- en: On the next pages, we will guide you through the installation processes of the
    Android Developer Tools Bundle, NDK, JME, and Vuforia^(TM) SDK. While the development
    tools can be spread throughout the system, we recommend that you use a common
    base directory for both the development tools and the sample code; let's call
    it `AR4Android` (for example, `C:/AR4Android` under Windows or `/opt/AR4Android`
    under Linux or Mac OS X).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的页面中，我们将指导你完成Android开发者工具包、NDK、JME和Vuforia^(TM) SDK的安装过程。虽然开发工具可以分散在系统中，但我们建议你为开发工具和示例代码使用一个共同的基目录；我们称之为`AR4Android`（例如，在Windows下的`C:/AR4Android`或在Linux或Mac
    OS X下的`/opt/AR4Android`）。
- en: Installing the Android Developer Tools Bundle and the Android NDK
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装Android开发者工具包和Android NDK
- en: 'You can install the ADT Bundle in two easy steps as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下两个简单步骤安装ADT Bundle：
- en: Download the ADT Bundle from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载ADT
    Bundle。
- en: After downloading, unzip `adt-bundle-<os_platform>.zip` into the `AR4Android`
    base directory.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载后，将`adt-bundle-<os_platform>.zip`解压到`AR4Android`基础目录。
- en: You can then start the Eclipse IDE by launching `AR4Android/adt-bundle-<os_platform>/eclipse/eclipse(.exe)`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以通过启动`AR4Android/adt-bundle-<os_platform>/eclipse/eclipse(.exe)`来启动Eclipse
    IDE。
- en: Tip
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Please note that you might need to install additional system images, depending
    on the devices you use (for example, version 2.3.5, or 4.0.1). You can follow
    the instructions given at the following website: [http://developer.android.com/tools/help/sdk-manager.html](http://developer.android.com/tools/help/sdk-manager.html).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，根据你使用的设备，你可能需要安装额外的系统映像（例如，版本2.3.5或4.0.1）。你可以按照以下网站的说明操作：[http://developer.android.com/tools/help/sdk-manager.html](http://developer.android.com/tools/help/sdk-manager.html)。
- en: 'For the Android NDK (version r9 or higher), you follow a similar procedure
    as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Android NDK（版本r9或更高），你可以按照以下类似的步骤操作：
- en: Download it from [http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html).
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)下载。
- en: After downloading, unzip `android-ndk-r<version>Y-<os_platform>.(zip|bz2)` into
    the `AR4Android` base directory.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载后，将`android-ndk-r<version>Y-<os_platform>.(zip|bz2)`解压到`AR4Android`基础目录。
- en: Installing JMonkeyEngine
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装JMonkeyEngine
- en: 'JME is a powerful Java-based 3D game engine. It comes with its own development
    environment (JME IDE based on NetBeans) which is targeted towards the development
    of desktop games. While the JME IDE also supports the deployment of Android devices,
    it (at the time this book is being written) lacks the integration of convenient
    Android SDK tools like the **Android Debug Bridge** (**adb**), **Dalvik Debug
    Monitor Server view** (**DDMS**) or integration of the Android Emulator found
    in the ADT Bundle. So, instead of using the JME IDE, we will integrate the base
    libraries into our AR projects in Eclipse. The easiest way to obtain the JME libraries
    is to download the SDK for your operating system from [http://jmonkeyengine.org/downloads](http://jmonkeyengine.org/downloads)
    and install it into the `AR4Android` base directory (or your own developer directory;
    just make sure you can easily access it later in your projects). At the time this
    book is being published, there are three packages: Windows, GNU/Linux, and Mac
    OS X.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: JME 是一个基于 Java 的强大3D游戏引擎。它自带开发环境（基于 NetBeans 的 JME IDE），主要针对桌面游戏的开发。尽管 JME IDE
    也支持部署到 Android 设备，但在本书撰写之时，它还没有集成像 ADT Bundle 中那样的便捷 Android SDK 工具，例如**Android
    调试桥**（**adb**）、**Dalvik 调试监控服务器视图**（**DDMS**）或 Android 模拟器的集成。因此，我们将不使用 JME IDE，而是将基本库集成到我们在
    Eclipse 中的 AR 项目中。获取 JME 库的最简单方法是，从 [http://jmonkeyengine.org/downloads](http://jmonkeyengine.org/downloads)
    下载适用于你操作系统的 SDK 并安装到 `AR4Android` 基础目录（或你自己的开发者目录；只要确保稍后在你的项目中能轻松访问即可）。在本书出版之时，有三个软件包：Windows、GNU/Linux
    和 Mac OS X。
- en: Tip
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can also obtain most recent versions from [http://updates.jmonkeyengine.org/nightly/3.0/engine/](http://updates.jmonkeyengine.org/nightly/3.0/engine/)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以从 [http://updates.jmonkeyengine.org/nightly/3.0/engine/](http://updates.jmonkeyengine.org/nightly/3.0/engine/)
    获取最新版本。
- en: 'You need only the Java libraries of JME (`.jar`) for the AR development, using
    the ADT Bundle. If you work on Windows or Linux, you can include them in any existing
    Eclipse project by performing the following steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用 ADT Bundle 进行 AR 开发，你只需要 JME 的 Java 库（`.jar`）。如果你在 Windows 或 Linux 上工作，可以通过执行以下步骤将它们包含在任何现有的
    Eclipse 项目中：
- en: Right-click on your AR project (which we will create in the next chapter) or
    any other project in the Eclipse explorer and go to **Build Path** | **Add External
    Archives**.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Eclipse 资源管理器中右键点击你的 AR 项目（我们将在下一章创建）或其他任何项目，然后选择**构建路径** | **添加外部存档**。
- en: In the **JAR selection** dialog, browse to `AR4Android/jmonkeyplatform/ jmonkeyplatform/libs`.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**JAR选择**对话框中，浏览至 `AR4Android/jmonkeyplatform/jmonkeyplatform/libs` 目录。
- en: You can select **all JARs** in the lib directory and click on **Open**.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以选中 lib 目录中的**所有JAR文件**，然后点击**打开**。
- en: If you work on Mac OS X, you should extract the libraries from `jmonkeyplatform.app`
    before applying the same procedure as for Windows or Linux described in the preceding
    section. To extract the libraries, you need to right-click on your `jmonkeyplatform.app`
    app and select **Show Package contents** and you will find the libraries in `/Applications/jmonkeyplatform.app/Contents/Resources/`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Mac OS X，在应用与 Windows 或 Linux 前一节描述的相同步骤之前，应该从 `jmonkeyplatform.app`
    中提取库。要提取库，你需要右键点击 `jmonkeyplatform.app` 应用并选择**显示包内容**，你会在 `/Applications/jmonkeyplatform.app/Contents/Resources/`
    找到库。
- en: Please note that, in the context of this book, we only use a few of them. In
    the Eclipse projects accompanying the source code of the book, you will find the
    necessary JARs already in the local lib directories containing the subset of Java
    libraries necessary for running the examples. You can also reference them in your
    build path.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在本书的背景下，我们只使用其中的一部分。在随书附带的 Eclipse 项目中，你会发现必要的 JAR 文件已经位于本地 lib 目录中，其中包含了运行示例所需的
    Java 库子集。你还可以在构建路径中引用它们。
- en: Note
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The reference documentation for using JME with Android can be found at [http://hub.jmonkeyengine.org/wiki/doku.php/jme3:android](http://hub.jmonkeyengine.org/wiki/doku.php/jme3:android).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 JME 与 Android 相关的参考文档可以在 [http://hub.jmonkeyengine.org/wiki/doku.php/jme3:android](http://hub.jmonkeyengine.org/wiki/doku.php/jme3:android)
    找到。
- en: Installing Vuforia^(TM)
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 Vuforia^(TM)
- en: Vuforia^(TM) is a state-of-the-art library for computer vision recognition and
    natural feature tracking.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Vuforia^(TM) 是一个最先进的计算机视觉识别和自然特征跟踪库。
- en: In order to download and install Vuforia^(TM), you have to initially register
    at [https://developer.vuforia.com/user/register](https://developer.vuforia.com/user/register).
    Afterwards, you can download the SDK (for Windows, Linux, or Mac OS X) from [https://developer.vuforia.com/resources/sdk/android](https://developer.vuforia.com/resources/sdk/android).
    Create a folder named `AR4Android/ThirdParty`. Now create an Eclipse project by
    going to **File** | **New** | **Project ...** named `ThirdParty` and choose as
    location the folder `AR4Android/ThirdParty` (see also the section *Creating an
    Eclipse project* in [Chapter 2](ch02.html "Chapter 2. Viewing the World"), *Viewing
    the World*). Then install the Vuforia^(TM) SDK in `AR4Android/ThirdParty/vuforia-sdk-android-<VERSION>`.
    For the examples in [Chapter 5](ch05.html "Chapter 5. Same as Hollywood – Virtual
    on Physical Objects"), *Same as Hollywood – Virtual on Physical Objects* and [Chapter
    6](ch06.html "Chapter 6. Make It Interactive – Create the User Experience"), *Make
    It Interactive – Create the User Experience*, you will need to reference this
    `ThirdParty Eclipse` project.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为了下载和安装Vuforia^(TM)，你首先需要在[https://developer.vuforia.com/user/register](https://developer.vuforia.com/user/register)进行注册。注册后，你可以从[https://developer.vuforia.com/resources/sdk/android](https://developer.vuforia.com/resources/sdk/android)下载SDK（支持Windows、Linux或Mac
    OS X）。创建一个名为`AR4Android/ThirdParty`的文件夹。然后通过选择**文件** | **新建** | **项目 ...**，创建一个名为`ThirdParty`的Eclipse项目，并将位置选择为文件夹`AR4Android/ThirdParty`（也见[第2章](ch02.html
    "第2章. 观察世界")中的*创建Eclipse项目*一节，*观察世界*）。接着在`AR4Android/ThirdParty/vuforia-sdk-android-<VERSION>`安装Vuforia^(TM)
    SDK。对于[第5章](ch05.html "第5章. 好莱坞级——实物上的虚拟")，*好莱坞级——实物上的虚拟*和[第6章](ch06.html "第6章.
    互动体验——创建用户体验")，*互动体验——创建用户体验*中的示例，你需要引用这个`ThirdParty Eclipse`项目。
- en: Which Android devices should you use?
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你应该使用哪些Android设备？
- en: 'The Augmented Reality applications which you will learn to build will run on
    a wide variety of Android-powered smartphone and tablet devices. However, depending
    on the specific algorithms, we will introduce certain hardware requirements that
    should be met. Specifically, the Android device needs to have the following features:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你将学习的增强现实应用程序将在各种Android智能手机和平板电脑上运行。然而，根据特定的算法，我们将引入一些硬件要求。具体来说，Android设备需要具备以下特性：
- en: A back-facing camera for all examples in this book
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于本书所有示例的后置摄像头
- en: A GPS module for the sensor-based AR examples
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于基于传感器的AR示例的GPS模块
- en: A gyroscope or linear accelerometers for the sensor-based AR examples
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于基于传感器的AR示例的陀螺仪或线性加速度计
- en: Augmented Reality on mobile phones can be challenging as many integrated sensors
    have to be active during the running of applications and computationally demanding
    algorithms are executed. Therefore, we recommend deploying them on a dual-core
    processor (or more cores) for the best AR experience. The earliest Android version
    to deploy should be 2.3.3 (API 10, Gingerbread). This gives potential outreach
    to your AR app across approximately 95 percent of all Android devices.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在手机上实现增强现实可能会具有挑战性，因为许多集成传感器必须在应用程序运行期间保持活跃，并执行计算密集型算法。因此，我们建议在双核处理器（或多核）上部署以获得最佳的AR体验。最早应部署的Android版本应为2.3.3（API
    10，姜饼）。这使你的AR应用有可能覆盖大约95%的所有Android设备。
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意事项
- en: Visit [http://developer.android.com/about/dashboards/index.html](http://developer.android.com/about/dashboards/index.html)
    for up-to-date numbers.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[http://developer.android.com/about/dashboards/index.html](http://developer.android.com/about/dashboards/index.html)获取最新的数据。
- en: Please make sure to set up your device for development as described at [http://developer.android.com/tools/device.html](http://developer.android.com/tools/device.html).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保按照[http://developer.android.com/tools/device.html](http://developer.android.com/tools/device.html)的描述为开发设置你的设备。
- en: In addition, most AR applications, specifically the computer-vision based applications
    (using Vuforia^(TM)), require enough processing power.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，大多数AR应用程序，尤其是基于计算机视觉的应用程序（使用Vuforia^(TM)），需要足够的处理能力。
- en: Summary
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we introduced the foundational background of AR. We've presented
    some of the main concepts of AR, such as sensory augmentation, dedicated display
    technology, real-time spatial registration of physical and digital information,
    and interaction with the content.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了AR的基础背景。我们展示了AR的一些主要概念，如感官增强、专用的显示技术、物理和数字信息的实时空间注册以及与内容的互动。
- en: We've also presented computer vision-based and sensor-based AR systems, the
    two major trends of architecture on mobile devices. The basic software architecture
    blocks of an AR application have also been described and will be used as a guide
    for the remaining presentation of this book. By now, you should have installed
    the third-party tools used in the coming chapters. In the next chapter, you will
    get started with viewing the virtual world and implementing camera access with
    JME.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还介绍了基于计算机视觉和传感器的增强现实（AR）系统，这是移动设备上架构的两个主要趋势。同时，我们还描述了一个AR应用程序的基本软件架构块，并将以此作为本书后续内容的指导。至此，你应该已经安装了接下来章节中将使用的第三方工具。在下一章中，你将开始学习如何查看虚拟世界并使用JME实现相机访问。

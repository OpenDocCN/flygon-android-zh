- en: Chapter 1. Setting Up Your Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 设置你的开发环境
- en: '*Are you ready to take up the mobile challenge? Is your computer switched on,
    mouse and keyboard plugged in, and screen illuminating your desk? Then let''s
    not wait a minute more!*'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*你准备好接受移动开发挑战了吗？你的电脑打开了，鼠标和键盘插上了，屏幕照亮了你的桌子吗？那么我们不要再等一分钟了！*'
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Developing Android applications requires a specific set of tools. You may
    already know about the Android Software Development Kit for pure Java applications.
    However, getting full access to the power of Android devices requires more: the
    Android Native Development Kit.*'
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*开发Android应用程序需要一套特定的工具。你可能已经了解到了用于纯Java应用程序的Android软件开发工具包（SDK）。然而，要完全访问Android设备的强大功能，还需要更多：Android原生开发工具包（NDK）。*'
- en: Setting up a proper Android environment is not that complicated, however it
    can be rather tricky. Indeed, Android is still an evolving platform and recent
    additions, such as Android Studio or Gradle, are not well supported when it comes
    to NDK development. Despite these annoyances, anybody can have a ready-to-work
    environment in an hour.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 设置一个合适的Android环境并不是那么复杂，但它可能相当棘手。实际上，Android仍然是一个不断发展的平台，最近的添加内容，如Android Studio或Gradle，在NDK开发方面支持得并不好。尽管有这些烦恼，任何人都可以在一个小时内拥有一个可以立即工作的环境。
- en: 'In this first chapter, we are going to:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一章中，我们将要：
- en: Install prerequisites packages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装必备软件包
- en: Set up an Android development environment
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置一个Android开发环境
- en: Launch an Android emulator
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动一个Android模拟器
- en: Connect an Android device for development
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接一个用于开发的Android设备
- en: Getting started with Android development
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始Android开发
- en: What differentiates mankind from animals is the use of tools. Android developers,
    the authentic species you belong to, are no different!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 区分人类与动物的是工具的使用。Android开发者，你所属的真正物种，也不例外！
- en: 'To develop applications on Android, we can use any of the following three platforms:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Android上开发应用程序，我们可以使用以下三个平台中的任何一个：
- en: Microsoft Windows (XP and later)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软Windows（XP及更高版本）
- en: Apple OS X (Version 10.4.8 or later)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苹果OS X（版本10.4.8或更高版本）
- en: Linux (distributions using GLibc 2.7 or later, such as latest versions of Ubuntu)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux（使用GLibc 2.7或更高版本的发行版，如最新版本的Ubuntu）
- en: These systems are supported on x86 platforms (that is, PCs with processors such
    as Intel or AMD) in both 32- and 64-bit versions, except for Windows XP (32-bit
    only).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些系统在x86平台（即使用Intel或AMD处理器的PC）上支持32位和64位版本，Windows XP除外（仅32位）。
- en: 'This is a good start but, unless you are able to read and write binary code
    as well as speak your mother tongue, having a raw OS is not enough. We also need
    software dedicated to Android development:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个不错的开始，但除非你能像说母语一样读写二进制代码，否则仅有一个原始操作系统是不够的。我们还需要专门用于Android开发的软件：
- en: A **JDK** (**Java Development Kit**)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**JDK**（**Java开发工具包**）
- en: An Android SDK (Software Development Kit)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Android SDK（软件开发工具包）
- en: An Android NDK (Native Development Kit)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Android NDK（原生开发工具包）
- en: An **IDE** (**Integrated Development Environment**) such as Eclipse or Visual
    Studio (or vi for hard-core coders). Android Studio and IntelliJ are not yet well-suited
    for NDK development, although they provide basic support for native code.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**IDE**（**集成开发环境**），如Eclipse或Visual Studio（或为硬核程序员准备的vi）。尽管Android Studio和IntelliJ为原生代码提供了基本支持，但它们还不适合NDK开发。
- en: A good old command-line shell to manipulate all these tools. We will use Bash.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个好的旧命令行终端来操作所有这些工具。我们将使用Bash。
- en: Now that we know what tools are necessary to work with Android, let's start
    with the installation and setup process.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们知道与Android工作需要哪些工具，那么让我们开始安装和设置过程。
- en: Note
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The following section is dedicated to Windows. If you are a Mac or Linux user,
    you can jump to *Setting up an OS X* or *Setting up Linux* section.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分专门针对Windows。如果你是Mac或Linux用户，可以跳到*设置OS X*或*设置Linux*部分。
- en: Setting up Windows
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Windows
- en: Before installing the necessary tools, we need to set up Windows to host our
    Android development tools properly. Although it is not the most natural fit for
    Android development, Windows still provides a fully functional environment.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装必要工具之前，我们需要正确设置Windows以承载我们的Android开发工具。尽管Windows并不是Android开发的最自然选择，但它仍然提供了一个功能齐全的环境。
- en: The following section explains how to set up the prerequisite packages on Windows
    7\. The process is the same for Windows XP, Vista, or 8.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将解释如何在Windows 7上设置必备软件包。这个过程同样适用于Windows XP、Vista或8。
- en: Time for action – preparing Windows for Android development
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手操作——为Android开发准备Windows
- en: 'To develop with the Android NDK on Windows, we need to set up a few prerequisites:
    Cygwin, a JDK, and Ant.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Windows上使用Android NDK进行开发，我们需要设置一些先决条件：Cygwin、JDK和Ant。
- en: Go to [http://cygwin.com/install.html](http://cygwin.com/install.html) and download
    the Cygwin setup program suitable for your environment. Once downloaded, execute
    it.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[http://cygwin.com/install.html](http://cygwin.com/install.html)并下载适合你环境的Cygwin安装程序。下载完成后，执行它。
- en: In the installation window, click on **Next** and then **Install from Internet**.![Time
    for action – preparing Windows for Android development](img/9645_01_22.jpg)
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装窗口中，点击**下一步**然后选择**从互联网安装**。![准备在Windows上开发Android的动作时间](img/9645_01_22.jpg)
- en: Follow the installation wizard screens. Consider selecting a download site from
    where Cygwin packages are downloaded in your country.
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 跟随安装向导屏幕操作。考虑选择一个在你国家下载Cygwin软件包的下载站点。
- en: 'Then, when proposed, include the **Devel**, **Make**, **Shells**, and **bash**
    packages:'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，当提议时，包括**Devel**、**Make**、**Shells**和**bash**软件包：
- en: '![Time for action – preparing Windows for Android development](img/9645_01_23.jpg)'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![准备在Windows上开发Android的动作时间](img/9645_01_23.jpg)'
- en: Follow the installation wizard until the end. This may take some time depending
    on your Internet connection.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 跟随安装向导直到完成。根据你的互联网连接，这可能需要一些时间。
- en: Download Oracle JDK 7 from the Oracle website at [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)
    (or JDK 8, although it is not officially supported at the time this book is written).
    Launch and follow the installation wizard until the end.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Oracle官网[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)下载Oracle
    JDK 7（或者JDK 8，尽管在本书编写时它还未正式支持）。启动并按照安装向导直到完成。
- en: Download Ant from its website at [http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)
    and unzip its binary package in the directory of your choice (for example, `C:\Ant`).
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Ant的官网[http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)下载Ant，并将其二进制包解压到你选择的目录中（例如，`C:\Ant`）。
- en: After installation, define JDK, Cygwin, and Ant locations in environment variables.
    To do so, open Windows **Control Panel** and go to the **System** panel (or right-click
    on the **Computer** item in the Windows Start menu and select **Properties**).
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装后，在环境变量中定义JDK、Cygwin和Ant的位置。为此，打开Windows **控制面板** 并进入 **系统** 面板（或者在Windows开始菜单中右键点击
    **计算机** 项，选择 **属性**）。
- en: Then, go to **Advanced system settings**. The **System Properties** window appears.
    Finally, select the **Advanced** tab and click on the **Environment Variables**
    button.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，进入**高级系统设置**。将出现**系统属性**窗口。最后，选择**高级**标签，点击**环境变量**按钮。
- en: 'In the Environment Variables window, inside the System variables list, add:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在环境变量窗口中，系统变量列表内添加：
- en: The `CYGWIN_HOME` variable with the `Cygwin` installation directory as the value
    (for example, `C:\Cygwin`)
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置`CYGWIN_HOME`变量，其值为`Cygwin`安装目录（例如，`C:\Cygwin`）
- en: The `JAVA_HOME` variable with the JDK installation directory as the value
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置`JAVA_HOME`变量，其值为JDK安装目录
- en: The `ANT_HOME` variable with the Ant installation directory as the value (for
    example, `C:\Ant`)
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置`ANT_HOME`变量，其值为Ant安装目录（例如，`C:\Ant`）
- en: Prepend `%CYGWIN_HOME%\bin;%JAVA_HOME%\bin;%ANT_HOME%\bin;`, all separated by
    a semicolon, at the beginning of your `PATH` environment variable.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在你的`PATH`环境变量开头添加`%CYGWIN_HOME%\bin;%JAVA_HOME%\bin;%ANT_HOME%\bin;`，每个路径之间用分号隔开。
- en: '![Time for action – preparing Windows for Android development](img/9645_01_49.jpg)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![准备在Windows上开发Android的动作时间](img/9645_01_49.jpg)'
- en: 'Finally, launch a Cygwin terminal. Your profile files get created on the first
    launch. Check the `make` version to ensure Cygwin works:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，启动Cygwin终端。第一次启动时将创建你的配置文件。检查`make`版本以确保Cygwin正常工作：
- en: '[PRE0]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will see the following output:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将看到以下输出：
- en: '![Time for action – preparing Windows for Android development](img/9645_01_27.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![准备在Windows上开发Android的动作时间](img/9645_01_27.jpg)'
- en: 'Ensure JDK is properly installed by running Java and checking its version.
    Check carefully to make sure the version number corresponds to the newly installed
    JDK:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行Java并检查其版本，确保JDK已正确安装。仔细检查以确保版本号与刚安装的JDK相符：
- en: '[PRE1]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You will see the following output on the screen:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将在屏幕上看到以下输出：
- en: '![Time for action – preparing Windows for Android development](img/9645_01_28.jpg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![准备在Windows上开发Android的动作时间](img/9645_01_28.jpg)'
- en: 'From a classic Windows terminal, check the Ant version to make sure it is properly
    working:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从经典的Windows终端，检查Ant版本以确保其正常工作：
- en: '[PRE2]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You will see the following on the terminal:'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将在终端上看到以下内容：
- en: '![Time for action – preparing Windows for Android development](img/9645_01_48.jpg)'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![准备在Windows上进行Android开发的行动时间](img/9645_01_48.jpg)'
- en: '*What just happened?*'
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: 'Windows is now set up with all the necessary packages to host Android development
    tools:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Windows现在已设置好所有必要的软件包，以容纳Android开发工具：
- en: Cygwin, which is an open source software collection, allows the Windows platform
    to emulate a Unix-like environment. It aims at natively integrating software based
    on the POSIX standard (such as Unix, Linux, and so on) into Windows. It can be
    considered as an intermediate layer between applications originated from Unix/Linux
    (but natively recompiled on Windows) and the Windows OS itself. Cygwin includes
    `Make`, which is required by the Android NDK compilation system to build native
    code.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cygwin是一个开源软件集合，它允许Windows平台模拟类似Unix的环境。它的目标是原生地将基于POSIX标准（如Unix、Linux等）的软件集成到Windows中。它可以被视为起源于Unix/Linux（但在Windows上原生重新编译）的应用程序与Windows操作系统本身之间的中间层。Cygwin包括`Make`，这是Android
    NDK编译系统构建原生代码所需的。
- en: Tip
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Even if Android NDK R7 introduced native Windows binaries, which does not require
    a Cygwin runtime, it is still recommended to install the latter for debugging
    purpose.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 即使Android NDK R7引入了原生的Windows二进制文件，不需要Cygwin运行时，但为了调试目的，仍然建议安装后者。
- en: A JDK 7, which contains the runtime and tools necessary to build Java applications
    on Android and run the Eclipse IDE as well as Ant. The only real trouble that
    you may encounter when installing a JDK is some interferences from a previous
    installation, such as an existing **Java Runtime Environment** (**JRE**). Proper
    JDK use can be enforced through the `JAVA_HOME` and `PATH` environment variables.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JDK 7，它包含了在Android上构建Java应用程序以及运行Eclipse IDE和Ant所需的运行时和工具。在安装JDK时，你可能遇到的唯一真正麻烦是一些来自之前安装的干扰，比如现有的**Java运行时环境**（**JRE**）。通过`JAVA_HOME`和`PATH`环境变量可以强制使用正确的JDK。
- en: Tip
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Defining the `JAVA_HOME` environment variable is not required. However, `JAVA_HOME`
    is a popular convention among Java applications, Ant being one of them. It first
    looks for the `java` command in `JAVA_HOME` (if defined) before looking in `PATH`.
    If you install an up-to-date JDK in another location later on, do not forget to
    update `JAVA_HOME`.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 定义`JAVA_HOME`环境变量不是必须的。然而，`JAVA_HOME`是Java应用程序（包括Ant）中的一个流行约定。它首先在`JAVA_HOME`（如果已定义）中查找`java`命令，然后才在`PATH`中查找。如果你稍后在其他位置安装了最新的JDK，不要忘记更新`JAVA_HOME`。
- en: Ant, which is a Java-based build automation utility. Although not a requirement,
    it allows building Android applications from the command line, as we will see
    in [Chapter 2](ch02.html "Chapter 2. Starting a Native Android Project"), *Starting
    a Native Android Project*. It is also a good solution to set up a continuous integration
    chain.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ant是一个基于Java的构建自动化工具。虽然这不是一个必需品，但它允许从命令行构建Android应用程序，如我们将在[第2章](ch02.html "第2章.
    开始一个原生Android项目")，*开始一个原生Android项目*中看到的。它也是设置持续集成链的一个好解决方案。
- en: The next step consists of setting up the Android development kits.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置Android开发工具包。
- en: Installing Android development kits on Windows
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows上安装Android开发工具
- en: 'Android requires specific development kits to develop applications: the Android
    SDK and NDK. Hopefully, Google has thought about the developer community and provides
    all the necessary tools for free.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Android需要特定的开发工具包来开发应用程序：Android SDK和NDK。幸运的是，谷歌考虑到了开发者社区，并免费提供所有必要的工具。
- en: In the following part, we will install these kits to start developing native
    Android applications on Windows 7.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下部分，我们将安装这些工具，开始在Windows 7上开发原生的Android应用程序。
- en: Time for action – installing Android SDK and NDK on Windows
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——在Windows上安装Android SDK和NDK
- en: The Android Studio bundle already contains the Android SDK. Let's install it.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio软件包已经包含了Android SDK。让我们来安装它。
- en: Open your web browser and download the Android Studio bundle from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的网络浏览器，从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载Android
    Studio软件包。
- en: Run the downloaded program and follow the installation wizard. When requested,
    install all Android components.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行下载的程序，并按照安装向导操作。当被请求时，安装所有Android组件。
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_29.jpg)'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在Windows上安装Android SDK和NDK](img/9645_01_29.jpg)'
- en: Then, choose the installation directories for Android Studio and the Android
    SDK (for example, `C:\Android\android-studio` and `C:\Android\sdk`).
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，选择Android Studio和Android SDK的安装目录（例如，`C:\Android\android-studio`和`C:\Android\sdk`）。
- en: Launch Android Studio to ensure it is properly working. If Android Studio proposes
    to import settings from a previous installation, select your preferred option
    and click on **OK**.![Time for action – installing Android SDK and NDK on Windows](img/9645_01_26.jpg)
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Android Studio以确保其正常工作。如果Android Studio提出从之前的安装导入设置，选择你偏好的选项并点击**OK**。![行动时间——在Windows上安装Android
    SDK和NDK](img/9645_01_26.jpg)
- en: The Android Studio welcome screen should then appear. Close it.
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此时应该会出现Android Studio的欢迎屏幕。关闭它。
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_25.jpg)'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在Windows上安装Android SDK和NDK](img/9645_01_25.jpg)'
- en: Go to [http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)
    and download the Android NDK (not SDK!) suitable for your environment. Extract
    the archive inside the directory of your choice (for example, `C:\Android\ndk`).
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)，下载适合你环境的Android
    NDK（不是SDK！），将压缩文件解压到你选择的目录中（例如，`C:\Android\ndk`）。
- en: To easily access Android utilities from the command line, let's declare the
    Android SDK and NDK as environment variables. From now on, we will refer to these
    directories as `$ANDROID_SDK` and `$ANDROID_NDK`.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了从命令行轻松访问Android工具，让我们将Android SDK和NDK声明为环境变量。从现在开始，我们将这些目录称为`$ANDROID_SDK`和`$ANDROID_NDK`。
- en: 'Open the **Environment Variables** system window, as we did previously. Inside
    the System variables list, add the following:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 打开**环境变量**系统窗口，就像我们之前做的那样。在系统变量列表中添加以下内容：
- en: The `ANDROID_SDK` variable with the SDK installation directory (for example,
    C:\Android\sdk)
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ANDROID_SDK`变量应包含SDK安装目录（例如，C:\Android\sdk）。'
- en: The `ANDROID_NDK` variable with the NDK installation directories (for example,
    C:\Android\ndk)
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ANDROID_NDK`变量应包含NDK安装目录（例如，C:\Android\ndk）。'
- en: Prepend `%ANDROID_SDK%\tools;%ANDROID_SDK%\platform-tools;%ANDROID_NDK%;`, all
    separated by a semicolon, at the beginning of your `PATH` environment variable.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在你的`PATH`环境变量开头添加`%ANDROID_SDK%\tools;%ANDROID_SDK%\platform-tools;%ANDROID_NDK%;`，用分号隔开。
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_24.jpg)'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在Windows上安装Android SDK和NDK](img/9645_01_24.jpg)'
- en: 'All Windows environment variables should be imported automatically by Cygwin
    when launched. Open a Cygwin terminal and list the Android devices connected to
    your computer (even if none are currently) with `adb` to check whether SDK is
    working. No error should appear:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当启动Cygwin时，所有Windows环境变量都应该自动被导入。打开一个Cygwin终端，使用`adb`列出连接到电脑的Android设备（即使当前没有连接的设备也要这样做），以检查SDK是否正常工作。不应该出现错误：
- en: '[PRE3]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_46.jpg)'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在Windows上安装Android SDK和NDK](img/9645_01_46.jpg)'
- en: 'Check the `ndk-build` version to ensure that NDK is working. If everything
    works, the `Make` version should appear:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`ndk-build`版本，以确保NDK正常工作。如果一切正常，应该会出现`Make`版本：
- en: '[PRE4]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Time for action – installing Android SDK and NDK on Windows](img/9645_01_47.jpg)'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在Windows上安装Android SDK和NDK](img/9645_01_47.jpg)'
- en: Open **Android** **SDK Manager**, located in the ADB bundle directory's root.![Time
    for action – installing Android SDK and NDK on Windows](img/9645_01_45.jpg)
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开位于ADB捆绑目录根目录的**Android SDK Manager**。![行动时间——在Windows上安装Android SDK和NDK](img/9645_01_45.jpg)
- en: In the opened window, click on **New** to select all the packages and then click
    on the **Install packages...** button. Accept the licenses in the popup that appears
    and start the installation of Android development packages by clicking on the
    **Install** button.
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在打开的窗口中，点击**New**选择所有包，然后点击**Install packages...**按钮。在弹出的窗口中接受许可协议，点击**Install**按钮开始安装Android开发包。
- en: After a few long minutes, all packages are downloaded and a confirmation message
    indicating that the Android SDK manager has been updated appears.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 经过几分钟的等待，所有包都已下载完毕，出现一条确认信息，表明Android SDK管理器已更新。
- en: Validate and close the manager.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确认并关闭管理器。
- en: '*What just happened?*'
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: Android Studio is now installed on the system. Although it is now the official
    Android IDE, we are not going to use it much throughout the book because of its
    lack of support of the NDK. It is, however, absolutely possible to use Android
    Studio for Java development, and command line or Eclipse for C/C++.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 现在已安装在系统上。虽然它现在是官方的 Android IDE，但由于它对 NDK 的支持不足，我们在本书中不会大量使用它。然而，完全可以用
    Android Studio 进行 Java 开发，以及使用命令行或 Eclipse 进行 C/C++ 开发。
- en: The Android SDK has been set up through the Android Studio package. An alternative
    solution consists of manually deploying the SDK standalone package provided by
    Google. On the other hand, the Android NDK has been deployed manually from its
    archive. Both the SDK and NDK are made available through the command line thanks
    to a few environment variables.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK 通过 Android Studio 包进行了设置。另一种解决方案是手动部署 Google 提供的 SDK 独立包。另一方面，Android
    NDK 是从其归档文件手动部署的。通过几个环境变量，SDK 和 NDK 都可以通过命令行使用。
- en: To get a fully functional environment, all Android packages have been downloaded
    thanks to the Android SDK manager, which aims at managing all the platforms, sources,
    samples, and emulation features available through the SDK. This tool greatly simplifies
    the update of your environment when new SDK API and components are released. There
    is no need to reinstall or overwrite anything!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得一个完全功能性的环境，所有 Android 包都已通过 Android SDK 管理器下载，该管理器旨在管理通过 SDK 可用的所有平台、源、示例和仿真功能。当新的
    SDK API 和组件发布时，这个工具极大地简化了环境的更新。无需重新安装或覆盖任何内容！
- en: However, the Android SDK Manager does not manage the NDK, which explains why
    we downloaded it separately, and why you will need to update it manually in the
    future.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Android SDK 管理器不管理 NDK，这就是为什么我们要单独下载它，以及为什么将来你需要手动更新它。
- en: Tip
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Installing all Android packages is not strictly necessary. Only the SDK platform
    (and possibly Google APIs) releases targeted by your application are really required.
    Installing all packages may avoid troubles when importing other projects or samples
    though.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 安装所有 Android 包并不是严格必要的。真正需要的是您的应用程序所针对的 SDK 平台（可能还有 Google APIs）版本。不过，安装所有包可能会在导入其他项目或示例时避免麻烦。
- en: The installation of your Android development environment is not over yet. We
    still need one more thing to develop comfortably with the NDK.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您的 Android 开发环境安装尚未完成。我们还需要一个东西，才能与 NDK 舒适地开发。
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This is the end of the section dedicated to the Windows setup. The following
    section is dedicated to OS X.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一段专门介绍 Windows 设置的章节的结束。下一章节将专注于 OS X。
- en: Setting up OS X
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 OS X
- en: Apple computers have a reputation for being simple and easy to use. I must say
    that this adage is rather true when it comes to Android development. Indeed, as
    a Unix-based system, OS X is well adapted to run the NDK toolchain.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Apple 电脑以其简单易用而闻名。我必须说，在 Android 开发方面，这个谚语是相当正确的。实际上，作为基于 Unix 的系统，OS X 很适合运行
    NDK 工具链。
- en: The following section explains how to set up the prerequisite packages on Mac
    OS X Yosemite.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将解释如何在 Mac OS X Yosemite 上设置前提条件包。
- en: Time for action – preparing OS X for Android development
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 准备 OS X 进行 Android 开发
- en: 'To develop with the Android NDK on OS X, we need to set up a few prerequisites:
    a JDK, Developer Tools, and Ant.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 OS X 上使用 Android NDK 进行开发，我们需要设置一些前提条件：JDK、开发者工具和 Ant。
- en: A JDK is preinstalled on OS X 10.6 Snow Leopard and below. On these systems,
    Apple's JDK is in version 6\. Since this version is deprecated, it is advised
    to install an up-to-date JDK 7 (or JDK 8, although it is not officially supported
    at the time this book is written).
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OS X 10.6 Snow Leopard 及以下版本预装了 JDK。在这些系统上，Apple 的 JDK 是版本 6。由于这个版本已被弃用，建议安装更新的
    JDK 7（或 JDK 8，尽管在本书编写时它没有得到官方支持）。
- en: On the other hand, OS X 10.7 Lion and above does not have a default JDK installed.
    Installing the JDK 7 is thus mandatory.
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一方面，OS X 10.7 Lion 及以上版本没有默认安装 JDK。因此，安装 JDK 7 是强制性的。
- en: To do so, download Oracle JDK 7 from the Oracle website at [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html).
    Launch the `DMG` and follow the installation wizard until the end.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为此，从 Oracle 网站下载 Oracle JDK 7，网址为 [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)。启动
    `DMG` 并按照安装向导直到结束。
- en: '![Time for action – preparing OS X for Android development](img/9645_01_25.jpg)'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 准备 OS X 进行 Android 开发](img/9645_01_25.jpg)'
- en: Check the Java version to ensure that the JDK is properly installed.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 检查Java版本以确保JDK已正确安装。
- en: '[PRE5]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![Time for action – preparing OS X for Android development](img/9645_01_76.jpg)'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![动手操作——为Android开发准备OS X](img/9645_01_76.jpg)'
- en: Tip
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To know if a JDK 6 is installed, check **Java Preferences.app** located by going
    to **Applications** | **Utilities** on your Mac. If you have JDK 7, check whether
    you have the **Java** icon under **System Preferences**.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要知道是否安装了JDK 6，请检查通过转到Mac上的**应用程序** | **实用工具**找到的**Java偏好设置.app**。如果你有JDK 7，检查**系统偏好设置**下是否有**Java**图标。
- en: 'All Developer Tools are included in the XCode installation package (Version
    5, at the time this book is written). XCode is provided on the AppStore for free.
    Starting from OS X 10.9, the Developer Tools package can be installed separately
    from a terminal prompt with the following command:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有开发者工具都包含在XCode安装包中（在本书编写时为版本5）。XCode在AppStore上免费提供。从OS X 10.9开始，开发者工具包可以通过终端提示符使用以下命令单独安装：
- en: '[PRE6]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Time for action – preparing OS X for Android development](img/9645_01_65.jpg)'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![动手操作——为Android开发准备OS X](img/9645_01_65.jpg)'
- en: Then, from the popup window that appears, select **Install**.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，从弹出的窗口中选择**安装**。
- en: 'To build native code with the Android NDK, whether XCode or the single Developer
    Tools package is installed, we need `Make`. Open a terminal prompt and check the
    `Make` version to ensure that it correctly works:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用Android NDK构建本地代码，无论是否安装了XCode或单独的开发者工具包，我们都需要`Make`。打开终端提示符并检查`Make`版本以确保它能正常工作：
- en: '[PRE7]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Time for action – preparing OS X for Android development](img/9645_01_62.jpg)'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![动手操作——为Android开发准备OS X](img/9645_01_62.jpg)'
- en: On OS X 10.9 and later, Ant must be installed manually. Download Ant from its
    website at [http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)
    and unzip its binary package in the directory of your choice (for example, `/Developer/Ant`).
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在OS X 10.9及以后的版本中，需要手动安装Ant。从Ant的官方网站[http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)下载Ant，并将其二进制包解压到您选择的目录中（例如，`/Developer/Ant`）。
- en: 'Then, create or edit the file `~/.profile` and make Ant available on the system
    path by appending the following:'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，创建或编辑文件`~/.profile`，并通过添加以下内容使Ant在系统路径上可用：
- en: '[PRE8]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Log out from your current session and log in again (or restart your computer)
    and check whether Ant is correctly installed by checking its version from the
    command line:'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从当前会话注销并重新登录（或重启计算机），并通过命令行检查Ant版本以确认Ant是否正确安装：
- en: '[PRE9]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Time for action – preparing OS X for Android development](img/9645_01_60.jpg)'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![动手操作——为Android开发准备OS X](img/9645_01_60.jpg)'
- en: '*What just happened?*'
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: 'Our OS X system is now set up with the necessary packages to host Android development
    tools:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的OS X系统现在已设置好必要的软件包以支持Android开发工具：
- en: A JDK 7, which contains the runtime and tools necessary to build Java applications
    on Android and to run the Eclipse IDE as well as Ant.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JDK 7，它包含了在Android上构建Java应用程序以及运行Eclipse IDE和Ant所需的运行时和工具。
- en: Developer Tools package, which packages various command-line utilities. It includes
    Make, which is required by the Android NDK compilation system to build native
    code.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发者工具包，它包含了各种命令行工具。它包括Make，这是Android NDK编译系统构建本地代码所需的。
- en: Ant, which is a Java-based build automation utility. Although not a requirement,
    it allows building Android applications from the command line, as we will see
    in [Chapter 2](ch02.html "Chapter 2. Starting a Native Android Project"), *Starting
    a Native Android Project*. It is also a good solution to set up a continuous integration
    chain.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ant，这是一个基于Java的构建自动化工具。尽管这不是必须的，但它允许我们从命令行构建Android应用程序，如我们将在[第2章](ch02.html
    "第2章.开始一个本地Android项目")，*开始一个本地Android项目*中看到的。它也是设置持续集成链的一个好解决方案。
- en: The next step consists of setting up the Android Development Kit.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置Android开发工具包。
- en: Installing Android development kits on OS X
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在OS X上安装Android开发工具包
- en: 'Android requires specific development kits to develop applications: the Android
    SDK and NDK. Hopefully, Google has thought about the developer community and provides
    all the necessary tools for free.'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Android开发应用程序需要特定的开发工具包：Android SDK和NDK。幸运的是，Google考虑到了开发者社区，并免费提供所有必要的工具。
- en: In the following part, we are going to install these kits to start developing
    native Android applications on Mac OS X Yosemite.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将安装这些工具包，开始在Mac OS X Yosemite上开发本地Android应用程序。
- en: Time for action – installing Android SDK and NDK on OS X
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手操作——在OS X上安装Android SDK和NDK
- en: The Android Studio bundle already contains the Android SDK. Let's install it.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio软件包已经包含了Android SDK。我们来安装它。
- en: Open your web browser and download the Android Studio bundle from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的网络浏览器，从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载Android
    Studio软件包。
- en: Run the downloaded `DMG` file. In the window that appears, drag the **Android
    Studio** icon into **Applications** and wait for Android Studio to be fully copied
    on the system.![Time for action – installing Android SDK and NDK on OS X](img/9645_01_66.jpg)
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行下载的`DMG`文件。在出现的窗口中，将**Android Studio**图标拖到**应用程序**中，等待Android Studio完全复制到系统上。![行动时间
    – 在OS X上安装Android SDK和NDK](img/9645_01_66.jpg)
- en: Run Android Studio from Launchpad.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Launchpad运行Android Studio。
- en: 'If an error **Unable to find a valid JVM** appears (because Android Studio
    cannot find a suitable JRE when launched), you can run Android Studio from the
    command line as follows (using the appropriate JDK path):'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果出现错误**无法找到有效的JVM**（因为Android Studio在启动时找不到合适的JRE），您可以通过命令行以下方式运行Android Studio（使用适当的JDK路径）：
- en: '[PRE10]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Tip
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To solve the Android Studio startup issue, you can also install the former JDK
    6 package provided by Apple. Beware! This version is outdated and thus, deprecated.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了解决Android Studio启动问题，您也可以安装苹果提供的旧版JDK 6。注意！这个版本已经过时，因此不推荐使用。
- en: If Android Studio proposes to import settings from a previous installation,
    select your preferred option and click on **OK**.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果Android Studio提示您从之前的安装导入设置，选择您偏好的选项并点击**确定**。
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_63.jpg)'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 在OS X上安装Android SDK和NDK](img/9645_01_63.jpg)'
- en: In the next **Setup Wizard** screen that appears, select the **Standard** installation
    type and continue the installation.
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在出现的下一个**设置向导**屏幕中，选择**标准**安装类型并继续安装。
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_75.jpg)'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 在OS X上安装Android SDK和NDK](img/9645_01_75.jpg)'
- en: Complete the installation until the Android Studio welcome screen appears. Then,
    close Android Studio.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成安装直到出现Android Studio欢迎屏幕。然后关闭Android Studio。
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_77.jpg)'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 在OS X上安装Android SDK和NDK](img/9645_01_77.jpg)'
- en: Go to [http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)
    and download the Android NDK (not SDK!) archive suitable for your environment.
    Extract it inside the directory of your choice (for example, `~/Library/Android/ndk`).
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)并下载适合您环境的Android
    NDK（不是SDK！）归档文件。将其解压到您选择的目录中（例如，`~/Library/Android/ndk`）。
- en: 'To easily access Android utilities from the command line, let''s declare the
    Android SDK and NDK as environment variables. From now on, we will refer to these
    directories as `$ANDROID_SDK` and `$ANDROID_NDK`. Assuming you use the default
    `Bash` command-line shell, create or edit `.profile` (which is a hidden file!)
    in your home directory and append the following instructions (adapt paths according
    to your installation):'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了从命令行轻松访问Android实用工具，我们将Android SDK和NDK声明为环境变量。从现在开始，我们将这些目录称为`$ANDROID_SDK`和`$ANDROID_NDK`。假设您使用默认的`Bash`命令行外壳，在您的家目录中创建或编辑`.profile`（这是一个隐藏文件！）并在最后添加以下指令（根据您的安装调整路径）：
- en: '[PRE11]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Log out from your current session and log in again (or restart your computer).
    List the Android devices connected to your computer (even if none currently are)
    with `adb` to check whether Android SDK is working. No error should appear:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从当前会话注销并重新登录（或者重启电脑）。使用`adb`列出连接到电脑的Android设备（即使当前没有连接的设备），以检查Android SDK是否正常工作。不应该出现错误：
- en: '[PRE12]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_68.jpg)'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 在OS X上安装Android SDK和NDK](img/9645_01_68.jpg)'
- en: 'Check the `ndk-build` version to ensure that NDK is working. If everything
    works, the `Make` version should appear:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`ndk-build`版本以确保NDK正常工作。如果一切正常，应该会显示`Make`版本：
- en: '[PRE13]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_69.jpg)'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 在OS X上安装Android SDK和NDK](img/9645_01_69.jpg)'
- en: 'Open a terminal and start the Android SDK manager with the following command:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端，使用以下命令启动Android SDK管理器：
- en: '[PRE14]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Time for action – installing Android SDK and NDK on OS X](img/9645_01_70.jpg)'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 在OS X上安装Android SDK和NDK](img/9645_01_70.jpg)'
- en: In the opened window, click on **New** to select all the packages and then click
    on the **Install packages...** button. Accept the licenses in the popup that appears
    and start the installation of all Android packages by clicking on the **Install**
    button.
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在打开的窗口中，点击**新建**以选择所有软件包，然后点击**安装软件包...**按钮。在弹出的窗口中接受许可协议，并通过点击**安装**按钮开始安装所有Android软件包。
- en: After a few long minutes, all packages are downloaded and a confirmation message
    indicating that the Android SDK manager has been updated appears.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 几分钟后，所有软件包下载完毕，出现一条确认信息，表明Android SDK管理器已更新。
- en: Validate and close the manager.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 验证并关闭管理器。
- en: '*What just happened?*'
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: Android Studio is now installed on the system. Although it is now the official
    Android IDE, we will not use it much through the book because of its lack of support
    of the NDK. It is, however, absolutely possible to use Android Studio for Java
    development, and command line or Eclipse for C/C++.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio现在已安装在系统上。尽管它现在是官方的Android IDE，但由于它对NDK的支持不足，我们在书中不会过多地使用它。然而，完全可以用Android
    Studio进行Java开发，以及使用命令行或Eclipse进行C/C++开发。
- en: The Android SDK has been set up through the Android Studio package. An alternative
    solution consists of manually deploying the SDK standalone package provided by
    Google. On the other hand, the Android NDK has been deployed manually from its
    archive. Both the SDK and NDK are made available through the command line, thanks
    to a few environment variables.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK已经通过Android Studio软件包进行了设置。另一种解决方案是手动部署由Google提供的SDK独立软件包。另一方面，Android
    NDK则是从其归档文件中手动部署的。通过几个环境变量，SDK和NDK都可以通过命令行使用。
- en: Tip
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: OS X is tricky when it comes to environment variables. They can be easily declared
    in `.profile` for applications launched from a terminal, as we just did. They
    can also be declared using an `environment.plist` file for GUI applications, which
    are not launched from Spotlight.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理环境变量时，OS X会有些棘手。它们可以在`.profile`中轻松声明，供从终端启动的应用程序使用，正如我们刚才所做的。也可以使用`environment.plist`文件为那些不是从Spotlight启动的GUI应用程序声明。
- en: To get a fully functional environment, all Android packages have been downloaded
    thanks to the Android SDK manager, which aims at managing all the platforms, sources,
    samples, and emulation features available through the SDK. This tool greatly simplifies
    the update of your environment when new SDK API and components are released. There
    is no need to reinstall or overwrite anything!
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得一个完全可用的环境，所有Android软件包都通过Android SDK管理器下载，该管理器旨在管理通过SDK提供的所有平台、源、示例和仿真功能。当新的SDK
    API和组件发布时，这个工具可以大大简化你的环境更新工作。无需重新安装或覆盖任何内容！
- en: However, the Android SDK manager does not manage the NDK, which explains why
    we downloaded it separately, and why you will need to update it manually in the
    future.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Android SDK管理器并不管理NDK，这就是为什么我们要单独下载NDK，以及将来你需要手动更新它的原因。
- en: Tip
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Installing all Android packages is not strictly necessary. Only the SDK platform
    (and possibly Google APIs) releases targeted by your application are really required.
    Installing all packages may avoid troubles importing other projects or samples
    though.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 安装所有Android软件包并不是绝对必要的。真正需要的是你的应用程序所针对的SDK平台（可能还有Google APIs）。不过，安装所有软件包可以避免在导入其他项目或示例时遇到麻烦。
- en: The installation of your Android development environment is not over yet. We
    still need one more thing to develop comfortably with the NDK.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 你的Android开发环境安装尚未完成。我们还需要一个东西，以便更舒适地使用NDK进行开发。
- en: Note
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This is the end of the section dedicated to the OS X setup. The following section
    is dedicated to Linux.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一段专门针对OS X设置的章节的结束。下一节将专门介绍Linux。
- en: Setting up Linux
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Linux
- en: Linux is naturally suited for Android development as the Android toolchain is
    Linux-based. Indeed, as a Unix-based system, Linux is well adapted to run the
    NDK toolchain. Beware, however, that commands to install packages may vary depending
    on your Linux distribution.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: Linux非常适合进行Android开发，因为Android工具链是基于Linux的。实际上，作为基于Unix的系统，Linux非常适合运行NDK工具链。但是要注意，安装软件包的命令可能会根据你的Linux发行版而有所不同。
- en: The following section explains how to set up the prerequisite packages on Ubuntu
    14.10 Utopic Unicorn.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将解释如何在Ubuntu 14.10 Utopic Unicorn上设置必备软件包。
- en: Time for action – preparing Ubuntu for Android development
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手时间——为Android开发准备Ubuntu
- en: 'To develop with the Android NDK on Linux, we need to set up a few prerequisites:
    Glibc, Make, OpenJDK, and Ant.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Linux 上使用 Android NDK 进行开发，我们需要设置一些先决条件：Glibc、Make、OpenJDK 和 Ant。
- en: 'From Command Prompt, check whether Glibc (the GNU C standard library) 2.7 or
    later, usually shipped with Linux systems by default, is installed:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令提示符中检查是否安装了 Glibc（GNU C 标准库）2.7 或更高版本，通常 Linux 系统默认会安装：
- en: '[PRE15]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Time for action – preparing Ubuntu for Android development](img/9645_01_31.jpg)'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 准备 Ubuntu 以进行 Android 开发](img/9645_01_31.jpg)'
- en: '`Make` is also required to build native code. Install it from the build-essential
    package (requires administrative privilege):'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Make` 也需要用来构建本地代码。从 build-essential 软件包中安装它（需要管理员权限）：'
- en: '[PRE16]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Run the following command to ensure `Make` is correctly installed, in which
    case its version is displayed:'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行以下命令以确保正确安装了 `Make`，如果安装正确，将显示其版本：
- en: '[PRE17]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Time for action – preparing Ubuntu for Android development](img/9645_01_32.jpg)'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 准备 Ubuntu 以进行 Android 开发](img/9645_01_32.jpg)'
- en: 'On 64-bit Linux systems, install the 32-bit libraries compatibility package,
    as Android SDK has binaries compiled for 32 bits only. To do so on Ubuntu 13.04
    and earlier, simply install the `ia32-libs` package:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 64 位 Linux 系统上，安装 32 位库兼容性软件包，因为 Android SDK 只有编译为 32 位的二进制文件。在 Ubuntu 13.04
    及更早版本上，只需安装 `ia32-libs` 软件包即可：
- en: '[PRE18]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'On Ubuntu 13.10 64 bits and later, this package has been removed. So, install
    the required packages manually:'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Ubuntu 13.10 64 位及以后的版本中，这个软件包已经被移除。因此，手动安装所需的软件包：
- en: '[PRE19]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Install Java OpenJDK 7 (or JDK 8, although it is not officially supported at
    the time this book is written). Oracle JDK is also fine:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Java OpenJDK 7（或者 JDK 8，尽管在本书编写时它没有得到官方支持）。Oracle JDK 也可以：
- en: '[PRE20]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Ensure JDK is properly installed by running Java and checking its version:'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过运行 Java 并检查其版本，确保 JDK 正确安装：
- en: '[PRE21]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![Time for action – preparing Ubuntu for Android development](img/9645_01_33.jpg)'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 准备 Ubuntu 以进行 Android 开发](img/9645_01_33.jpg)'
- en: 'Install Ant with the following command (requires administrative privilege):'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装 Ant（需要管理员权限）：
- en: '[PRE22]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Check whether Ant is properly working:'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 检查 Ant 是否正常工作：
- en: '[PRE23]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Time for action – preparing Ubuntu for Android development](img/9645_01_34.jpg)'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 - 准备 Ubuntu 以进行 Android 开发](img/9645_01_34.jpg)'
- en: '*What just happened?*'
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: 'Our Linux system is now prepared with the necessary packages to host Android
    development tools:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 Linux 系统现在已准备好必要的软件包以支持 Android 开发工具：
- en: The build-essential package, which is a minimal set of tools for compilation
    and packaging on Linux Systems. It includes Make, which is required by the Android
    NDK compilation system to build native code. **GCC** (the **GNU C Compiler**)
    is also included but is not required as Android NDK already contains its own version.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: build-essential 软件包是 Linux 系统上用于编译和打包的最小工具集。它包括 Make，这是 Android NDK 编译系统构建本地代码所必需的。**GCC**（**GNU
    C 编译器**）也包括在内，但不是必需的，因为 Android NDK 已经包含了自己的版本。
- en: 32-bit compatibility libraries for 64-bit systems, since the Android SDK still
    uses 32-bit binaries.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 64 位系统上的 32 位兼容库，因为 Android SDK 仍然使用 32 位二进制文件。
- en: A JDK 7, which contains the runtime and tools necessary to build Java applications
    on Android and run the Eclipse IDE as well as Ant.
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JDK 7，其中包含在 Android 上构建 Java 应用程序以及在 Eclipse IDE 和 Ant 中运行所需的运行时和工具。
- en: Ant, which is a Java-based build automation utility. Although not a requirement,
    it allows building Android applications from the command line, as we will see
    in [Chapter 2](ch02.html "Chapter 2. Starting a Native Android Project"), *Starting
    a Native Android Project*. It is also a good solution to set up a continuous integration
    chain.
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ant 是一个基于 Java 的构建自动化工具。尽管这不是一个硬性要求，但它允许我们从命令行构建 Android 应用程序，正如我们将在[第二章](ch02.html
    "第二章. 开始一个本地 Android 项目")《*开始一个本地 Android 项目*》中看到的那样。它也是设置持续集成链的一个好解决方案。
- en: The next step consists of setting up the Android development kits.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是设置 Android 开发工具包。
- en: Installing Android development kits on Linux
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Linux 上安装 Android 开发工具包
- en: 'Android requires specific development kits to develop applications: the Android
    SDK and NDK. Hopefully, Google has thought about the developer community and provides
    all the necessary tools for free.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: Android 开发应用程序需要特定的开发工具包：Android SDK 和 NDK。幸运的是，Google 已经考虑到了开发者社区，并免费提供所有必要的工具。
- en: In the following part, we will install these kits to start developing native
    Android applications on Ubuntu 14.10 Utopic Unicorn.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下部分，我们将安装这些工具包，以便在 Ubuntu 14.10 Utopic Unicorn 上开始开发本地 Android 应用程序。
- en: Time for action – installing Android SDK and NDK on Ubuntu
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 在 Ubuntu 上安装 Android SDK 和 NDK
- en: The Android Studio bundle already contains the Android SDK. Let's install it.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 包已经包含了 Android SDK。让我们来安装它。
- en: Open your web browser and download the Android Studio bundle from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
    Extract the downloaded archive in the directory of your choice (for example, `~/Android/Android-studio`).
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的网页浏览器，从 [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)
    下载 Android Studio 包。将下载的归档文件解压到你选择的目录中（例如，`~/Android/Android-studio`）。
- en: Run the Android Studio script `bin/studio.sh`. If Android Studio proposes to
    import settings from a previous installation, select your preferred option and
    click on **OK**.![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_04.jpg)
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 Android Studio 脚本 `bin/studio.sh`。如果 Android Studio 提出从之前的安装导入设置，选择你偏好的选项并点击
    **确定**。![行动时间——在 Ubuntu 上安装 Android SDK 和 NDK](img/9645_01_04.jpg)
- en: In the next **Setup** **Wizard** screen that appears, select a **Standard**
    installation type and continue installation.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在出现的下一个 **设置** **向导** 屏幕上，选择 **标准** 安装类型并继续安装。
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_01.jpg)'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在 Ubuntu 上安装 Android SDK 和 NDK](img/9645_01_01.jpg)'
- en: Complete installation until the Android Studio welcome screen. Then, close Android
    Studio.
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成安装直到出现 Android Studio 欢迎屏幕。然后关闭 Android Studio。
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_02.jpg)'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在 Ubuntu 上安装 Android SDK 和 NDK](img/9645_01_02.jpg)'
- en: Go to [http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)
    and download the Android NDK (not SDK!) archive suitable for your environment.
    Extract it inside the directory of your choice (for example, `~/Android/Ndk`).
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [http://developer.android.com/tools/sdk/ndk/index.html](http://developer.android.com/tools/sdk/ndk/index.html)
    并下载适合你环境的 Android NDK（不是 SDK！）归档文件。将其解压到你选择的目录中（例如，`~/Android/Ndk`）。
- en: 'To easily access Android utilities from the command line, let''s declare the
    Android SDK and NDK as environment variables. From now on, we will refer to these
    directories as `$ANDROID_SDK` and `$ANDROID_NDK`. Edit your `.profile` file (beware
    since this is a hidden file!) in your home directory and add the following variables
    at the end (adapt their path according to your installation directories):'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了从命令行轻松访问 Android 实用工具，让我们将 Android SDK 和 NDK 声明为环境变量。从现在开始，我们将这些目录称为 `$ANDROID_SDK`
    和 `$ANDROID_NDK`。编辑你主目录中的 `.profile` 文件（注意这是一个隐藏文件！），并在文件末尾添加以下变量（根据你的安装目录调整它们的路径）：
- en: '[PRE24]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Log out from your current session and log in again (or restart your computer).
    List the Android devices connected to your computer (even if none currently are)
    with `adb` to check whether Android SDK is working. No error should appear:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从当前会话中注销并重新登录（或者重启你的电脑）。使用 `adb` 列出连接到电脑的 Android 设备（即使当前没有连接也要列出），以检查 Android
    SDK 是否正常工作。不应该出现错误：
- en: '[PRE25]'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_35.jpg)'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在 Ubuntu 上安装 Android SDK 和 NDK](img/9645_01_35.jpg)'
- en: 'Check the `ndk-build` version to ensure that NDK is working. If everything
    works, the `Make` version should appear:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 `ndk-build` 的版本以确保 NDK 正在运行。如果一切正常，应该会出现 `Make` 的版本：
- en: '[PRE26]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_32.jpg)'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在 Ubuntu 上安装 Android SDK 和 NDK](img/9645_01_32.jpg)'
- en: 'Open a terminal and start the Android SDK manager with the following command:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端，使用以下命令启动 Android SDK 管理器：
- en: '[PRE27]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![Time for action – installing Android SDK and NDK on Ubuntu](img/9645_01_03.jpg)'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——在 Ubuntu 上安装 Android SDK 和 NDK](img/9645_01_03.jpg)'
- en: In the opened window, click on **New** to select all the packages, and then
    click on the **Install packages...** button. Accept the licenses in the popup
    that appears and start the installation of all Android package by clicking on
    the **Install** button.
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在打开的窗口中，点击 **新建** 以选择所有包，然后点击 **安装包...** 按钮。在出现的弹出窗口中接受许可协议，并通过点击 **安装** 按钮开始所有
    Android 包的安装。
- en: After a few long minutes, all packages are downloaded and a confirmation message
    indicating that the Android SDK manager has been updated appears.
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 经过一些漫长的等待，所有包都已下载完毕，出现一条确认信息表明 Android SDK 管理器已更新。
- en: Validate and close the manager.
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确认并关闭管理器。
- en: '*What just happened?*'
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: Android Studio is now installed on the system. Although it is now the official
    Android IDE, we are not going to use it much throughout the book because of its
    lack of support of the NDK. It is, however, absolutely possible to use Android
    Studio for Java development, and the command line or Eclipse for C/C++.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 现在系统上已经安装了Android Studio。尽管它现在是官方的安卓IDE，但由于它对NDK的支持不足，我们在本书中不会大量使用它。然而，完全可以用Android
    Studio进行Java开发，用命令行或Eclipse进行C/C++开发。
- en: The Android SDK has been set up through the Android Studio package. An alternative
    solution consists of manually deploying the SDK standalone package provided by
    Google. On the other hand, the Android NDK has been deployed manually from its
    archive. Both the SDK and NDK are made available through the command line, thanks
    to a few environment variables.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓SDK已经通过Android Studio软件包进行了设置。另一种解决方案是手动部署谷歌提供的SDK独立安装包。另一方面，安卓NDK则是从其归档文件中手动部署的。通过几个环境变量，SDK和NDK都可以在命令行中使用。
- en: To get a fully functional environment, all Android packages have been downloaded
    thanks to the Android SDK manager, which aims at managing all the platforms, sources,
    samples, and emulation features available through the SDK. This tool greatly simplifies
    the update of your environment when new SDK API and components are released. There
    is no need to reinstall or overwrite anything!
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得一个完全功能的环境，所有安卓软件包都是通过安卓SDK管理器下载的，该管理器旨在管理通过SDK提供的所有平台、源代码、示例和仿真功能。当新的SDK
    API和组件发布时，这个工具可以极大地简化环境的更新。无需重新安装或覆盖任何内容！
- en: However, the Android SDK manager does not manage the NDK, which explains why
    we downloaded it separately, and why you will need to update it manually in the
    future.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，安卓SDK管理器并不管理NDK，这就是为什么我们要单独下载NDK，以及为什么将来需要手动更新它的原因。
- en: Tip
  id: totrans-251
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Installing all Android packages is not strictly necessary. Only the SDK platform
    (and possibly Google APIs) releases targeted by your application are really required.
    Installing all packages may avoid trouble when importing other projects or samples
    though.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 安装所有的安卓软件包并非严格必要。真正需要的是您的应用程序所针对的SDK平台（可能还有Google APIs）。不过，安装所有软件包可能会在导入其他项目或示例时避免麻烦。
- en: The installation of not or Android development environment is not over yet.
    We still need one more thing to develop comfortably with the NDK.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓开发环境的安装还没有结束。我们还需要一个东西，才能更舒适地使用NDK进行开发。
- en: Note
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This is the end of the section dedicated to the Linux setup. The following section
    is for all operating systems.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一段专门针对Linux设置的章节的结束。下一节适用于所有操作系统。
- en: Installing the Eclipse IDE
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Eclipse IDE
- en: Because of Android Studio limitations, Eclipse is still one of the most appropriate
    IDEs to develop native code on Android. Using an IDE is not required though; command-line
    lovers or `vi` fanatics can skip this part!
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Android Studio的限制，Eclipse仍然是最适合在安卓上开发本地代码的IDE之一。然而，使用IDE并非必须；命令行爱好者或`vi`狂热者可以跳过这一部分！
- en: In the following section, we will see how to set up Eclipse.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将了解如何设置Eclipse。
- en: Time for action – installing Eclipse with ADT on your OS
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 在您的操作系统上安装带有ADT的Eclipse
- en: 'Since the latest Android SDK releases, Eclipse and its plugins (ADT and CDT)
    need to be installed manually. To do so execute the following steps:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 自从最新的安卓SDK发布以来，Eclipse及其插件（ADT和CDT）需要手动安装。为此，执行以下步骤：
- en: Go to [http://www.eclipse.org/downloads/](http://www.eclipse.org/downloads/)
    and download Eclipse for Java developers. Extract the downloaded archive in the
    directory of your choice (for example, `C:\Android\eclipse on Windows`, `~/ Android/Eclipse`
    on Linux, and `~/Library/Android/eclipse` on Mac OS X).
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[http://www.eclipse.org/downloads/](http://www.eclipse.org/downloads/)并下载适用于Java开发者的Eclipse。将下载的压缩文件解压到您选择的目录中（例如，在Windows上的`C:\Android\eclipse`，Linux上的`~/Android/Eclipse`，Mac
    OS X上的`~/Library/Android/eclipse`）。
- en: Then, run Eclipse. If Eclipse asks for a workspace (which contains Eclipse settings
    and projects) when starting up, define the directory of your choice or leave the
    default settings and then click on **OK**.
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，运行Eclipse。如果Eclipse在启动时询问工作空间（其中包含Eclipse设置和项目），请定义您选择的位置或保留默认设置，然后点击**确定**。
- en: 'When Eclipse has finished loading, close the welcome page. The following window
    should appear:'
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当Eclipse加载完毕后，关闭欢迎页面。应该会出现以下窗口：
- en: '![Time for action – installing Eclipse with ADT on your OS](img/9645_01_71.jpg)'
  id: totrans-264
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 在您的操作系统上安装带有ADT的Eclipse](img/9645_01_71.jpg)'
- en: Go to **Help** | **Install New Software…**. Enter `https://dl-ssl.google.com/android/eclipse`
    in the **Work with:** field and validate. After a few seconds, a **Developer Tools**
    plugin appears. Select it and click on the **Next** button.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 **帮助** | **安装新软件…**。在 **工作空间:** 字段中输入 `https://dl-ssl.google.com/android/eclipse`
    并验证。几秒钟后，会出现一个 **开发者工具** 插件。选择它并点击 **下一步** 按钮。
- en: Tip
  id: totrans-266
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In case this step fails while accessing update sites, check your Internet connection.
    You may be either disconnected or connected behind a proxy. In the latter case,
    you can download the ADT plugin as a separate archive from the ADT web page and
    install it manually, or configure Eclipse to connect through a proxy.
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在访问更新站点时此步骤失败，请检查您的互联网连接。您可能是断开连接或通过代理连接。在后一种情况下，您可以从 ADT 网页上单独下载 ADT 插件存档并手动安装，或者配置
    Eclipse 通过代理连接。
- en: '![Time for action – installing Eclipse with ADT on your OS](img/9645_01_73.jpg)'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 – 在您的操作系统上安装带有 ADT 的 Eclipse](img/9645_01_73.jpg)'
- en: Follow the wizard and accept conditions when asked. On the last wizard page,
    click on **Finish** to install ADT. A warning may appear indicating that the plugin
    content is unsigned. Ignore it and click on **OK**. When finished, restart Eclipse
    as requested.
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按照向导提示操作，并在询问时接受条件。在向导的最后一页，点击**完成**以安装 ADT。可能会出现警告，提示插件内容未签名。忽略它并点击**确定**。完成后，按照请求重启
    Eclipse。
- en: Go back to **Help** | **Install New Software…**. Open the **Work with** combobox
    and select the item containing the Eclipse version name (here, Luna). Then, check
    the **Show only software applicable to target environment** option. Find **Programming
    Languages** in the plugin tree and unfold it. Finally, check all C/C++ plugins
    and click on **Next**.![Time for action – installing Eclipse with ADT on your
    OS](img/9645_01_72.jpg)
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到 **帮助** | **安装新软件…**。打开 **工作空间** 下拉框，并选择包含 Eclipse 版本名称的项（这里为 Luna）。然后，勾选
    **只显示适用于目标环境的软件** 选项。在插件树中找到 **编程语言** 并展开它。最后，勾选所有 C/C++ 插件并点击 **下一步**。![操作时间
    – 在您的操作系统上安装带有 ADT 的 Eclipse](img/9645_01_72.jpg)
- en: Follow the wizard and accept conditions when asked. On the last wizard page,
    click on **Finish**. Wait until the installation is complete and restart Eclipse.
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 按照向导提示操作，并在询问时接受条件。在向导的最后一页，点击**完成**。等待安装完成并重启 Eclipse。
- en: Go to **Windows** | **Preferences...** (**Eclipse** | **Preferences...** on
    Mac OS X) and then select **Android** on the left tree. If everything is fine,
    the SDK Location should be filled with the Android SDK path.![Time for action
    – installing Eclipse with ADT on your OS](img/9645_01_78.jpg)
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 **Windows** | **首选项...**（在 Mac OS X 上为 **Eclipse** | **首选项...**），然后在左侧树中选择
    **Android**。如果一切正常，SDK 位置应该已填写 Android SDK 路径。![操作时间 – 在您的操作系统上安装带有 ADT 的 Eclipse](img/9645_01_78.jpg)
- en: Then, on the same window, go to **Android** | **NDK**. The **NDK Location**
    field should be empty. Fill it with the Android NDK path and validate. If the
    path is wrong, Eclipse complains that the directory is not valid.
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，在同一个窗口中，转到 **Android** | **NDK**。**NDK位置**字段应为空。填写 Android NDK 路径并验证。如果路径错误，Eclipse
    会提示目录无效。
- en: '![Time for action – installing Eclipse with ADT on your OS](img/9645_01_74.jpg)'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![操作时间 – 在您的操作系统上安装带有 ADT 的 Eclipse](img/9645_01_74.jpg)'
- en: '*What just happened?*'
  id: totrans-275
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: Eclipse is now up and running with the appropriate SDK and NDK configuration.
    Since the ADT package is no longer provided by Google, the Android development
    plugin ADT and the C/C++ Eclipse plugin CDT have to be installed manually in Eclipse.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 现在 Eclipse 已经配置好相应的 SDK 和 NDK 并运行起来了。由于 Google 不再提供 ADT 包，因此需要手动在 Eclipse 中安装
    Android 开发插件 ADT 和 C/C++ Eclipse 插件 CDT。
- en: Please note that Eclipse has been deprecated by Google and replaced by Android
    Studio. Sadly, Android Studio C/C++ and NDK support is rather limited for the
    moment. The only way to build native code is through Gradle, the new Android build
    system, whose NDK features are still unstable. If a comfortable IDE is essential
    to you, you can still use Android Studio for Java development and Eclipse for
    C/C++ though.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Eclipse 已经被 Google 弃用，并由 Android Studio 替换。遗憾的是，目前 Android Studio 对 C/C++
    和 NDK 的支持相当有限。构建本地代码的唯一方式是通过 Gradle，这个新的 Android 构建系统，其 NDK 功能仍然不稳定。如果舒适的 IDE
    对您至关重要，您仍然可以使用 Android Studio 进行 Java 开发，使用 Eclipse 进行 C/C++ 开发。
- en: 'If you work on Windows, maybe you are Visual Studio adept. In that case, I
    advise you that a few projects, shown as follows, bring Android NDK development
    to Visual Studio:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在 Windows 上工作，可能您是 Visual Studio 的熟练用户。在这种情况下，我建议您注意一些项目，如下所示，将 Android NDK
    开发带到了 Visual Studio：
- en: Android++, which is a free extension for Visual Studio that can be found at
    [http://android-plus-plus.com/](http://android-plus-plus.com/). Although still
    in Beta at the time this book is written, Android++ looks quite promising.
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android++是一个免费的Visual Studio扩展，可以在[http://android-plus-plus.com/](http://android-plus-plus.com/)找到。尽管在本书编写时仍处于测试阶段，但Android++看起来相当有前景。
- en: NVidia Nsight, which can be downloaded with a developer account from the Nvidia
    developer website at [https://developer.nvidia.com/nvidia-nsight-tegra](https://developer.nvidia.com/nvidia-nsight-tegra)
    (if you have a Tegra device). It packages together the NDK, a slightly customized
    version of Visual Studio, and a nice debugger.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVidia Nsight可以在Nvidia开发者网站[https://developer.nvidia.com/nvidia-nsight-tegra](https://developer.nvidia.com/nvidia-nsight-tegra)（如果你有Tegra设备）用开发者账户下载。它将NDK、一个稍微定制版的Visual
    Studio和一个不错的调试器打包在一起。
- en: VS-Android, which can be found at [https://github.com/gavinpugh/vs-android](https://github.com/gavinpugh/vs-android),
    is an interesting Open Source project, which brings NDK tools to Visual Studio.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在[https://github.com/gavinpugh/vs-android](https://github.com/gavinpugh/vs-android)找到的VS-Android是一个有趣的开放源代码项目，它将NDK工具带到了Visual
    Studio中。
- en: 'Our development environment is now almost ready. The last piece is missing
    though: an environment to run and test our applications.'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的开发环境现在几乎准备好了。尽管如此，还缺少最后一块：运行和测试我们应用程序的环境。
- en: Setting up the Android emulator
  id: totrans-283
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Android模拟器
- en: The Android SDK provides an emulator to help developers who want to speed up
    their deploy-run-test cycle or want to test, for example, different kinds of resolutions
    and OS versions. Let's see how to set it up.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK提供了一个模拟器，以帮助希望加快部署-运行-测试周期的开发者，或者希望测试例如不同类型的分辨率和操作系统版本的开发者。让我们看看如何设置它。
- en: Time for action – creating an Android virtual device
  id: totrans-285
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 创建Android虚拟设备
- en: 'The Android SDK provides everything we need to easily create a new emulator
    **Android Virtual Device** (**AVD**):'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK提供了我们轻松创建新的模拟器**Android Virtual Device** (**AVD**)所需的一切：
- en: 'Open **Android SDK Manager** from a terminal by running the following command:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从终端运行以下命令打开**Android SDK Manager**：
- en: '[PRE28]'
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Go to **Tools** | **Manage AVDs...**. Alternatively, click on the dedicated
    **Android Virtual Device Manager** button in the main toolbar of Eclipse.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**工具** | **管理AVD...**。或者，在Eclipse的主工具栏中点击专用的**Android Virtual Device Manager**按钮。
- en: 'Then, click on the **New** button to create a new Android emulator instance.
    Fill the form with the following information and click on **OK**:'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，点击**新建**按钮创建一个新的Android模拟器实例。用以下信息填写表单并点击**确定**：
- en: '![Time for action – creating an Android virtual device](img/9645_01_40.jpg)'
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间 – 创建Android虚拟设备](img/9645_01_40.jpg)'
- en: The newly created virtual device now appears in the **Android Virtual Device
    Manager** list. Select it and click on **Start...**.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新创建的虚拟设备现在显示在**Android Virtual Device Manager**列表中。选择它并点击**启动...**。
- en: Note
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you get an error related to `libGL` on Linux, open a command prompt and
    run the following command to install the Mesa graphics library: `sudo apt-get
    install libgl1-mesa-dev`.'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在Linux上遇到与`libGL`相关的错误，请打开命令提示符并运行以下命令以安装Mesa图形库：`sudo apt-get install libgl1-mesa-dev`。
- en: The **Launch Options** window appears. Tweak the display size depending on your
    screen size if needed and then click on **Launch**. The emulator starts up and
    after some time, your virtual device is loaded:![Time for action – creating an
    Android virtual device](img/9645_01_41.jpg)
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启动选项**窗口出现。根据需要调整显示大小，然后点击**启动**。模拟器启动，一段时间后，你的虚拟设备将加载完毕：![行动时间 – 创建Android虚拟设备](img/9645_01_41.jpg)'
- en: 'By default, the emulator SD card is read only. Although this is optional, you
    can set it in write mode by issuing the following command from a prompt:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，模拟器的SD卡是只读的。虽然这是可选的，但你可以通过从提示符发出以下命令来将其设置为写入模式：
- en: '[PRE29]'
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '*What just happened?*'
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: Android emulators can be easily managed through the Android Virtual Device manager.
    We are now able to test the applications we will develop in a representative environment.
    Even better, we can now test them in several conditions and resolutions without
    requiring a costly device. However, if emulators are useful development tools,
    take into account that emulation is not always perfectly representative and lacks
    some features, especially hardware sensors, which can be partially emulated.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓模拟器可以通过安卓虚拟设备管理器轻松管理。我们现在能够在代表性的环境中测试我们即将开发的应用程序。更妙的是，我们现在可以在多种条件和分辨率下进行测试，而无需昂贵的设备。然而，如果模拟器是有用的开发工具，请记住模拟并不总是完全具有代表性，并且缺少一些功能，尤其是硬件传感器，这些传感器只能部分模拟。
- en: 'Android Virtual Device manager is not the only place where we can manage emulators.
    We can also use the command-line tool emulator provided with the Android SDK.
    For example, to launch the Nexus4 emulator created earlier directly from a terminal
    prompt, enter the following:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓虚拟设备管理器并非我们管理模拟器的唯一场所。我们还可以使用安卓SDK提供的命令行工具emulator。例如，要从终端直接启动先前创建的Nexus4模拟器，请输入以下内容：
- en: '[PRE30]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: While creating the `Nexus4` AVD, acute readers might have been surprised to
    see we set CPU/ABI to Intel Atom (x86), whereas most Android devices run on ARM
    processors. Indeed, since Windows, OS X, and Linux all run on x86, only x86 Android
    emulator images can benefit from hardware and GPU acceleration. On the other hand,
    ARM ABI can run rather slow without it, but it may be more representative of the
    devices your application may run on.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建`Nexus4` AVD时，敏锐的读者可能已经注意到我们将CPU/ABI设置为Intel Atom（x86），而大多数安卓设备运行在ARM处理器上。实际上，由于Windows、OS
    X和Linux都运行在x86上，只有x86安卓模拟器镜像可以受益于硬件和GPU加速。另一方面，ARM ABI在没有加速的情况下可能会运行得相当慢，但它可能更符合你的应用程序可能运行的设备。
- en: Tip
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To benefit from full hardware acceleration with an X86 AVD, you will need to
    install the Intel **Hardware Accelerated Execution Manager** (**HAXM**) on your
    Windows or Mac OS X system. On Linux, you can install KVM instead. These programs
    can work only if your CPU benefits from a Virtualization Technology (which is
    the case most of the time nowadays).
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 若要使用X86 AVD获得完全硬件加速，你需要在Windows或Mac OS X系统上安装英特尔**硬件加速执行管理器**（**HAXM**）。在Linux上，你可以安装KVM。这些程序只有在你的CPU支持虚拟化技术时才能工作（如今大多数情况下都是如此）。
- en: Acuter readers may be even more surprised that we have not selected the latest
    Android platform. The reason is simply that x86 images are not available for all
    Android platforms.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 敏锐的读者可能还会惊讶于我们没有选择最新的安卓平台。原因仅仅是并非所有安卓平台都提供x86镜像。
- en: Note
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Snapshot option allows saving the emulator state before closing it. Sadly,
    this open is incompatible with GPU acceleration. You have to select either one.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 快照选项允许在关闭模拟器之前保存其状态。遗憾的是，这个选项与GPU加速不兼容。你必须选择其中之一。
- en: As a final note, know that customizing additional options, such as the presence
    of a GPS, camera, and so on, is also possible when creating an AVD to test an
    application in limited hardware conditions. The screen orientation can be switched
    with *Ctrl* + *F11* and *Ctrl* + *F12* shortcuts. For more information on how
    to use and configure the emulator, check out the Android website at [http://developer.android.com/tools/devices/emulator.html](http://developer.android.com/tools/devices/emulator.html).
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 最后需要注意的是，在创建AVD以在有限的硬件条件下测试应用程序时，自定义其他选项（如GPS、摄像头等的设置）也是可能的。屏幕方向可以通过快捷键*Ctrl*
    + *F11*和*Ctrl* + *F12*进行切换。有关如何使用和配置模拟器的更多信息，请访问安卓网站：[http://developer.android.com/tools/devices/emulator.html](http://developer.android.com/tools/devices/emulator.html)。
- en: Developing with an Android device
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用安卓设备进行开发
- en: Although emulators can be of help, they are obviously nothing compared to a
    real device. So, take your Android device in hand, switch it on and let's try
    to connect it to our development platform. Any of the following steps may change
    depending on your manufacturer and phone language. So, please refer to your device
    documentation for specific instructions.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管模拟器可以提供帮助，但它们显然无法与真实设备相比。因此，请拿起你的安卓设备，打开它，让我们尝试将其连接到我们的开发平台。以下步骤可能会因你的制造商和手机语言而有所不同。因此，请参阅你的设备文档以获取具体说明。
- en: Time for action – setting up an Android device
  id: totrans-311
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——设置安卓设备
- en: 'Device configuration is dependent on your target OS. To do so:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 设备配置取决于你的目标操作系统。为此：
- en: 'Configure your device driver on your OS if applicable:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果适用，请在你的操作系统上配置设备驱动：
- en: If you use Windows, installation of a development device is manufacturer-specific.
    More information can be found at [http://developer.android.com/tools/extras/oem-usb.html](http://developer.android.com/tools/extras/oem-usb.html)
    with a full list of device manufacturers. If you have a driver CD with your Android
    device, you can use it. Note that the Android SDK also contains some Windows drivers
    under `$ANDROID_SDK\extras\google\usb_driver`. Specific instructions are available
    for Google development phones, Nexus One, and Nexus S at [http://developer.android.com/sdk/win-usb.html](http://developer.android.com/sdk/win-usb.html).
  id: totrans-314
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用的是Windows，开发设备的安装是特定于制造商的。更多信息可以在[http://developer.android.com/tools/extras/oem-usb.html](http://developer.android.com/tools/extras/oem-usb.html)找到，那里有设备制造商的完整列表。如果你的Android设备附带有驱动CD，你可以使用它。请注意，Android
    SDK也包含一些Windows驱动程序，位于`$ANDROID_SDK\extras\google\usb_driver`目录下。针对Google开发手机，Nexus
    One和Nexus S的具体说明可以在[http://developer.android.com/sdk/win-usb.html](http://developer.android.com/sdk/win-usb.html)找到。
- en: If you use OS X, simply connecting your development device to your Mac should
    be enough to get it working! Your device should be recognized immediately without
    installing anything. Mac's ease of use is not a legend.
  id: totrans-315
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用的是OS X，只需将你的开发设备连接到你的Mac应该就足以让它工作了！你的设备应该会立即被识别，无需安装任何东西。Mac的易用性并非传说。
- en: If you are a Linux user, connecting your development device to your Distribution
    (at least on Ubuntu) should be enough to get it working too!
  id: totrans-316
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你是一个Linux用户，将你的开发设备连接到你的发行版（至少在Ubuntu上）应该就足以让它工作了！
- en: If your mobile device runs Android 4.2 or later, from the application list screen,
    go to **Settings** | **About phone** and tap several times on **Build Number**
    at the end of the list. After some efforts, **Developer options** will magically
    appear in your application list screen.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的移动设备运行的是Android 4.2或更高版本，从应用程序列表屏幕，进入**设置** | **关于手机**，并在列表末尾多次点击**构建编号**。经过一番努力后，**开发者选项**将神奇地出现在你的应用程序列表屏幕中。
- en: On Android 4.1 devices and earlier, **Developer options** should be visible
    by default.
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Android 4.1设备及其早期版本上，**开发者选项**应该默认可见。
- en: Still on your device, from the application list screen, go to **Settings** |
    **Developer options** and enable **Debugging** and **Stay awake**.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仍然在你的设备上，从应用程序列表屏幕，进入**设置** | **开发者选项**，并启用**调试**和**保持唤醒**。
- en: Plug your device into your computer using a data connection cable. Beware! Some
    cables are charge-only cables and will not work for development! Depending on
    your device manufacturer, it may appear as a USB disk.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用数据连接线将你的设备连接到计算机。注意！有些线缆是仅供充电的，不能用于开发！根据你的设备制造商，它可能显示为USB磁盘。
- en: On Android 4.2.2 devices and later, a dialog **Allow USB debugging?** appears
    on the phone screen. Select **Always allow from this computer** to permanently
    allow debugging and then click on **OK**.
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Android 4.2.2设备及其后续版本上，手机屏幕上会出现一个**允许USB调试？**的对话框。选择**始终允许从此计算机**以永久允许调试，然后点击**确定**。
- en: 'Open Command Prompt and execute the following:'
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令提示符并执行以下操作：
- en: '[PRE31]'
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Time for action – setting up an Android device](img/9645_01_50.jpg)'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——设置Android设备](img/9645_01_50.jpg)'
- en: 'On Linux, if **?????????** appears instead of your device name (which is likely),
    then `adb` does not have proper access rights. A solution might be to restart
    `adb` as root (at your own risk!):'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Linux上，如果出现**?????????**而不是你的设备名称（这很可能会发生），那么`adb`没有适当的访问权限。一个可能的解决方案是以root权限重启`adb`（风险自负！）：
- en: '[PRE32]'
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Another solution to find your Vendor ID and Product ID may be needed. Vendor
    ID is a fixed value for each manufacturer that can be found on the Android developer
    website at [http://developer.android.com/tools/device.html](http://developer.android.com/tools/device.html)
    (for example, HTC is `0bb4`). The device''s Product ID can be found using the
    result of the `lsusb` command in which we look for the Vendor ID (for example,
    here 0c87 is HTC Desire product ID):'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一个找到你的Vendor ID和Product ID的解决方案可能是必要的。Vendor ID是每个制造商的固定值，可以在Android开发者网站[http://developer.android.com/tools/device.html](http://developer.android.com/tools/device.html)上找到（例如，HTC是`0bb4`）。设备的产品ID可以通过`lsusb`命令的结果找到，我们在其中查找Vendor
    ID（例如，这里的0c87是HTC Desire的产品ID）：
- en: '[PRE33]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![Time for action – setting up an Android device](img/9645_01_51.jpg)'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——设置Android设备](img/9645_01_51.jpg)'
- en: 'Then, with root privilege, create a file `/etc/udev/rules.d/51-android.rules`
    with your Vendor ID and Product ID and change file rights to 644:'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，使用root权限创建一个文件`/etc/udev/rules.d/51-android.rules`，并填入你的Vendor ID和Product
    ID，然后将文件权限改为644：
- en: '[PRE34]'
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Finally, restart the `udev` service and `adb`:'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，重启`udev`服务和`adb`：
- en: '[PRE35]'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Launch Eclipse and open the **DDMS** perspective (**Window** | **Open Perspective**
    | **Other...**). If working properly, your phone should be listed in the **Devices**
    view.
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Eclipse并打开**DDMS**透视图（**窗口** | **打开透视图** | **其他...**）。如果正常工作，你的手机应该列在**设备**视图中。
- en: Tip
  id: totrans-335
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Eclipse is a compound of many views, such as the Package Explorer View, the
    Debug View, and so on. Usually, most of them are already visible, but sometimes
    they are not. In that case, open them through the main menu by navigating to **Window**
    | **Show View** | **Other…**. Views in Eclipse are grouped in **Perspectives**,
    which store workspace layout. They can be opened by going to **Window** | **Open
    Perspective** | **Other…**. Beware that some contextual menus may be available
    only in some perspectives.
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Eclipse是由许多视图组成的，例如包资源管理器视图、调试视图等。通常，它们大多数已经可见，但有时并非如此。在这种情况下，通过主菜单导航到**窗口**
    | **显示视图** | **其他…**来打开它们。Eclipse中的视图被组织在**透视图**中，这些透视图存储工作区布局。可以通过转到**窗口** |
    **打开透视图** | **其他…**来打开它们。请注意，某些上下文菜单可能只在某些透视图可用。
- en: '*What just happened?*'
  id: totrans-337
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: Our Android device has been switched into development mode and connected to
    our workstation through the Android Debug Bridge daemon. ADB gets started automatically
    the first time it is called, either from Eclipse or the command line.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Android设备已切换到开发模式，并通过Android调试桥守护进程连接到工作站。第一次从Eclipse或命令行调用ADB时，它会自动启动。
- en: We also enabled the **Stay awake** option to stop automatic screen shutdown
    when the phone charges, or when developing with it! And, more important than anything,
    we discovered that HTC means High Tech Computer! Jokes apart, connection process
    can be tricky on Linux, although little trouble should be encountered nowadays.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还启用了**保持唤醒**选项，以防止在手机充电或开发时自动关闭屏幕！而且，比任何事情都重要的是，我们发现HTC代表的是高技术计算机！玩笑归玩笑，在Linux上的连接过程可能会很棘手，尽管现在应该不会遇到太多麻烦。
- en: 'Still having trouble with a reluctant Android device? That could mean any of
    the following:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然遇到不情愿的Android设备的问题？这可能意味着以下任何一种情况：
- en: ADB is malfunctioning. In that case, restart the ADB deamon or execute it with
    administrative privilege.
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ADB出现故障。在这种情况下，重启ADB守护进程或以管理员权限执行它。
- en: Your development device is not working properly. In that case, try restarting
    your device or disabling and re-enabling development mode. If that still does
    not work, then buy another one or use the emulator.
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的开发设备工作不正常。在这种情况下，尝试重启你的设备或禁用并重新启用开发模式。如果仍然不起作用，那么购买另一个设备或使用模拟器。
- en: Your host system is not properly set up. In that case, check your device manufacturer
    instructions carefully to make sure the necessary driver is correctly installed.
    Check hardware properties to see whether it is recognized and turn on USB storage
    mode (if applicable) to see whether it is properly detected. Please refer to your
    device documentation.
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的主机系统没有正确设置。在这种情况下，仔细检查你的设备制造商的说明，确保必要的驱动程序已正确安装。检查硬件属性，看它是否被识别，并打开USB存储模式（如果适用），看它是否被正确检测。请参考你的设备文档。
- en: Tip
  id: totrans-344
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: When the charge-only mode is activated, SD card files and directories are visible
    to the Android applications installed on your phone but not to your computer.
    On the opposite side, when disk drive mode is activated, those are visible only
    from your computer. Check your connection mode when your application cannot access
    its resource files on an SD card.
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当激活仅充电模式时，SD卡中的文件和目录对手机上安装的Android应用可见，但对电脑不可见。相反，当激活磁盘驱动器模式时，这些文件和目录只对电脑可见。当你的应用无法在SD卡上访问其资源文件时，请检查你的连接模式。
- en: More about ADB
  id: totrans-346
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于ADB的更多信息
- en: 'ADB is a multi-facet tool which is used as a mediator between the development
    environment and devices. It is composed of:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: ADB是一个多功能的工具，用作开发环境和设备之间的中介。它包括以下部分：
- en: A background process running on emulators and devices to receive orders or requests
    from your workstation.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在模拟器和设备上运行的后台进程，用于接收来自工作站的任务或请求。
- en: A background server on your workstation communicating with connected devices
    and emulators. When listing devices, the ADB server is involved. When debugging,
    the ADB server is involved. When any communication with a device happens, the
    ADB server is involved!
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作站上与连接设备和模拟器通信的后台服务器。列出设备时，会涉及到ADB服务器。调试时，会涉及到ADB服务器。与设备进行任何通信时，都会涉及到ADB服务器！
- en: A client running on your workstation and communicating with devices through
    the ADB server. The ADB client is what we interacted with to list devices.
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的工作站上运行的客户端，通过ADB服务器与设备通信。我们与之交互列出设备的ADB客户端。
- en: 'ADB offers many useful options among which some are in the following table:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: ADB提供了许多有用的选项，其中一些在以下表格中：
- en: '| Command | Description |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| 命令 | 描述 |'
- en: '| --- | --- |'
  id: totrans-353
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `adb help` | To get an exhaustive help with all options and flags available
    |'
  id: totrans-354
  prefs: []
  type: TYPE_TB
  zh: '| `adb help` | 获取详尽的帮助，包括所有可用的选项和标志 |'
- en: '| `adb bugreport` | To print the whole device state |'
  id: totrans-355
  prefs: []
  type: TYPE_TB
  zh: '| `adb bugreport` | 打印整个设备的状态 |'
- en: '| `adb devices` | To list all Android devices currently connected including
    emulators |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '| `adb devices` | 列出当前连接的所有Android设备，包括模拟器 |'
- en: '| `adb install [-r] <apk path>` | To install an application package. Append
    `-r` to reinstall an already deployed application and keep its data |'
  id: totrans-357
  prefs: []
  type: TYPE_TB
  zh: '| `adb install [-r] <apk path>` | 安装应用程序包。添加`-r`以重新安装已部署的应用程序并保留其数据 |'
- en: '| `adb kill-server` | To terminate the ADB daemon |'
  id: totrans-358
  prefs: []
  type: TYPE_TB
  zh: '| `adb kill-server` | 终止ADB守护进程 |'
- en: '| `adb pull <device path> <local path>` | To transfer a file to your computer
    |'
  id: totrans-359
  prefs: []
  type: TYPE_TB
  zh: '| `adb pull <device path> <local path>` | 将文件传输到你的电脑 |'
- en: '| `adb push <local path> <device path>` | To transfer a file to your device
    or emulator |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
  zh: '| `adb push <local path> <device path>` | 将文件传输到你的设备或模拟器 |'
- en: '| `adb reboot` | To restart an Android device programmatically |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
  zh: '| `adb reboot` | 以编程方式重启Android设备 |'
- en: '| `adb shell` | To start a shell session on an Android device (more on this
    in [Chapter 2](ch02.html "Chapter 2. Starting a Native Android Project"), *Starting
    a Native Android Project*) |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '| `adb shell` | 在Android设备上启动shell会话（更多内容请见[第2章](ch02.html "第2章. 开始一个本地Android项目")，*开始一个本地Android项目*)
    |'
- en: '| `adb start-server` | To launch the ADB daemon |'
  id: totrans-363
  prefs: []
  type: TYPE_TB
  zh: '| `adb start-server` | 启动ADB守护进程 |'
- en: '| `adb wait-for-device` | To sleep until a device or emulator is connected
    to your computer (for example, in a script) |'
  id: totrans-364
  prefs: []
  type: TYPE_TB
  zh: '| `adb wait-for-device` | 等待直到设备或模拟器连接到你的电脑（例如，在脚本中） |'
- en: 'ADB also provides optional flags to target a specific device when several are
    connected simultaneously:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 当同时连接多个设备时，ADB还提供了可选的标志来定位特定设备：
- en: '| `-s <device id>` | To target a specific device by its name (device name can
    be found with adb devices) |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '| `-s <device id>` | 通过设备的名称（可以在adb devices中找到）来定位一个特定的设备 |'
- en: '| `-d` | To target the current physical device if only one is connected (or
    an error message is raised) |'
  id: totrans-367
  prefs: []
  type: TYPE_TB
  zh: '| `-d` | 如果只连接了一个物理设备，则定位当前物理设备（或者会引发错误信息） |'
- en: '| `-e` | To target the currently running emulator if only one is connected
    (or an error message is raised) |'
  id: totrans-368
  prefs: []
  type: TYPE_TB
  zh: '| `-e` | 如果只连接了一个模拟器，则定位当前运行的模拟器（或者会引发错误信息） |'
- en: 'For example, to dump the emulator state when a device is connected at the same
    time, execute the following command:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当设备连接时同时转储模拟器状态，执行以下命令：
- en: '[PRE36]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This is only an overview of what ADB can do. More information can be found on
    the Android developer website at [http://developer.android.com/tools/help/adb.html](http://developer.android.com/tools/help/adb.html).
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是ADB功能的概述。更多信息可以在Android开发者网站找到，网址是[http://developer.android.com/tools/help/adb.html](http://developer.android.com/tools/help/adb.html)。
- en: Summary
  id: totrans-372
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Setting up our Android development platform is a bit tedious but is hopefully
    performed once and for all!
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 设置我们的Android开发平台可能有些繁琐，但希望这是一劳永逸的！
- en: In summary, we installed all the prerequisite packages on our system. Some of
    them are specific to the target OS, such as Cygwin on Windows, Developer Tools
    on OS X, or build-essential packages on Linux. Then, we installed the Android
    Studio bundle, which contains both the Android Studio IDE and the Android SDK.
    The Android NDK has to be downloaded and set up separately.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，我们在系统上安装了所有必备的软件包。其中一些是特定于目标操作系统的，例如Windows上的Cygwin，OS X上的Developer Tools，或者Linux上的build-essential软件包。然后，我们安装了包含Android
    Studio IDE和Android SDK的Android Studio捆绑包。Android NDK需要单独下载和设置。
- en: Even if we will not use it much throughout this book, Android Studio remains
    one of the best choices for pure Java development. It is guaranteed to be maintained
    by Google and may become a good choice when Gradle NDK's integration gets more
    mature.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们在这本书中不会经常使用它，Android Studio仍然是纯Java开发的最佳选择之一。它由谷歌维护，当Gradle NDK的集成更加成熟时，它可能成为一个不错的选择。
- en: Meanwhile, the simplest solution is to go with Eclipse for NDK development.
    We installed Eclipse with the ADT and CDT plugin. These plugins integrate well
    together. They allow combining the power of Android Java and native C/C++ code
    into one single IDE.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，最简单的解决方案是使用 Eclipse 进行 NDK 开发。我们安装了带有 ADT 和 CDT 插件的 Eclipse。这些插件能够很好地整合在一起，它们允许将
    Android Java 和本地 C/C++ 代码的强大功能结合到一个单一的 IDE 中。
- en: Finally, we launched an Android emulator and connected an Android device to
    our development platform through the Android Debug Bridge.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们启动了一个 Android 模拟器，并通过 Android 调试桥接器将一个 Android 设备连接到我们的开发平台。
- en: Tip
  id: totrans-378
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: With the Android NDK being "open", anybody can build its own version. The Crystax
    NDK is a special NDK package built by Dmitry Moskalchuk. It brings advanced features
    unsupported by the NDK (latest toolchains, Boost out of the box… exceptions were
    first supported by the CrystaxNDK). Advanced users can find it on the Crystax
    website at [https://www.crystax.net/en/android/ndk](https://www.crystax.net/en/android/ndk).
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Android NDK 是“开放的”，任何人都可以构建自己的版本。Crystax NDK 是由 Dmitry Moskalchuk 创建的特殊 NDK
    包。它带来了 NDK 不支持的高级功能（最新的工具链、开箱即用的 Boost…最初支持异常的是 CrystaxNDK）。高级用户可以在 Crystax 网站上找到它，网址为[https://www.crystax.net/en/android/ndk](https://www.crystax.net/en/android/ndk)。
- en: We now have the necessary tools in our hands to shape our mobile ideas. In the
    next chapter, we will tame them to create, compile, and deploy our first Android
    project!
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们手中有了塑造我们移动想法所需的工具。在下一章中，我们将驯服它们来创建、编译并部署我们的第一个 Android 项目！

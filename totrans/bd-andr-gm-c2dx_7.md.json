["```java\ncocos2d::Vector<cocos2d::Sprite*> _bombs;\n```", "```java\n_bombs.pushBack(_sprBomb);\n```", "```java\nvoid HelloWorld::addBombs(float dt)\n{\nSprite* bomb = nullptr;\nfor(int i = 0; i < 3; i++){\n  bomb = Sprite::create(\"bomb.png\");\n  bomb->setPosition(CCRANDOM_0_1() * visibleSize.width, visibleSize.height + bomb->getContentSize().height/2);\n  this->addChild(bomb,1);\n  setPhysicsBody(bomb);\n  bomb->getPhysicsBody()->setVelocity(Vect(0, ( (CCRANDOM_0_1() + 0.2f) * -250) ));\n  _bombs.pushBack(bomb);\n}\n}\n```", "```java\nbool explodeBombs(cocos2d::Touch* touch, cocos2d::Event* event);\n```", "```java\nbool HelloWorld::explodeBombs(cocos2d::Touch* touch, cocos2d::Event* event)\n{\nVec2 touchLocation = touch->getLocation();\ncocos2d::Vector<cocos2d::Sprite*> toErase;\nfor(auto bomb : _bombs){\n  if(bomb->getBoundingBox().containsPoint(touchLocation)){\n    bomb->setVisible(false);\n    this->removeChild(bomb);\n    toErase.pushBack(bomb);\n  }\n}\n\nfor(auto bomb : toErase){\n  _bombs.eraseObject(bomb);\n}\nreturn true;\n}\n```", "```java\nvoid HelloWorld::initTouch()\n{\n  auto listener = EventListenerTouchOneByOne::create();\n  listener->onTouchBegan = CC_CALLBACK_2(HelloWorld::explodeBombs,this);\n  listener->onTouchMoved = CC_CALLBACK_2(HelloWorld::movePlayerByTouch,this);\n  listener->onTouchEnded = [=](Touch* touch, Event* event){};\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\n```", "```java\nbool HelloWorld::explodeBombs(cocos2d::Touch* touch, cocos2d::Event* event){\n  Vec2 touchLocation = touch->getLocation();\n  cocos2d::Vector<cocos2d::Sprite*> toErase;\n  for(auto bomb : _bombs){\n    if(bomb->getBoundingBox().containsPoint(touchLocation)){\n      auto explosion = ParticleExplosion::create();\n      explosion->setPosition(bomb->getPosition());\n      this->addChild(explosion);\n      bomb->setVisible(false);\n      this->removeChild(bomb);\n      toErase.pushBack(bomb);\n    }\n  }\n  for(auto bomb : toErase){\n    _bombs.eraseObject(bomb);\n  }\n  return true;\n}\n```", "```java\nbool HelloWorld::explodeBombs(cocos2d::Touch* touch, cocos2d::Event* event){\n  Vec2 touchLocation = touch->getLocation();\n  cocos2d::Vector<cocos2d::Sprite*> toErase;\n  for(auto bomb : _bombs){\n    if(bomb->getBoundingBox().containsPoint(touchLocation)){\n      auto explosion = ParticleExplosion::create();\n      explosion->setDuration(0.25f);\n      AudioEngine::play2d(\"bomb.mp3\");\n      explosion->setPosition(bomb->getPosition());\n      this->addChild(explosion);\n      explosion->setTotalParticles(800);\n      explosion->setSpeed(3.5f);\n      explosion->setLife(300.0f);\n      bomb->setVisible(false);\n      this->removeChild(bomb);\n      toErase.pushBack(bomb);\n    }\n  }\n\n  for(auto bomb : toErase){\n    _bombs.eraseObject(bomb);\n  }\n  return true;\n}\n```", "```java\nsearchPaths.push_back(\"particles\");\n```", "```java\nbool HelloWorld::explodeBombs(cocos2d::Touch* touch, cocos2d::Event* event){\n  Vec2 touchLocation = touch->getLocation();\n  cocos2d::Vector<cocos2d::Sprite*> toErase;\n  for(auto bomb : _bombs){\n    if(bomb->getBoundingBox().containsPoint(touchLocation)){\n      AudioEngine::play2d(\"bomb.mp3\");\n auto explosion = ParticleSystemQuad::create(\"explosion.plist\");\n      explosion->setPosition(bomb->getPosition());\n      this->addChild(explosion);\n      bomb->setVisible(false);\n      this->removeChild(bomb);\n      toErase.pushBack(bomb);\n    }\n  }\n  for(auto bomb : toErase){\n    _bombs.eraseObject(bomb);\n  }\n  return true;\n}\n```", "```java\n#ifndef __HELLOWORLD_SCENE_H__\n#define __HELLOWORLD_SCENE_H__\n#include \"cocos2d.h\"\n#include \"PauseScene.h\"\n#include \"GameOverScene.h\"\n\nclass HelloWorld : public cocos2d::Layer{\npublic:\n  static cocos2d::Scene* createScene();\n  virtual bool init();\n  CREATE_FUNC(HelloWorld);\nprivate:\n  cocos2d::Director *_director;\n  cocos2d::Size _visibleSize;\n  cocos2d::Sprite* _sprBomb;\n  cocos2d::Sprite* _sprPlayer;\n  cocos2d::Vector<cocos2d::Sprite*> _bombs;\n  cocos2d::MenuItemImage* _muteItem;\n  cocos2d::MenuItemImage* _unmuteItem;\n  int _score;\n  int _musicId;\n  void initPhysics();\n  void pauseCallback(cocos2d::Ref* pSender);\n  void muteCallback(cocos2d::Ref* pSender);\n  bool onCollision(cocos2d::PhysicsContact& contact);\n  void setPhysicsBody(cocos2d::Sprite* sprite);\n  void initTouch();\n  void movePlayerByTouch(cocos2d::Touch* touch, cocos2d::Event* event);\n  void movePlayerIfPossible(float newX);\n  bool explodeBombs(cocos2d::Touch* touch, cocos2d::Event* event);\n  void movePlayerByAccelerometer(cocos2d::Acceleration* acceleration, cocos2d::Event* event);\n  void initAccelerometer();\n  void initBackButtonListener();\n  void onKeyPressed(cocos2d::EventKeyboard::KeyCode keyCode, cocos2d::Event* event);\n  void updateScore(float dt);\n  void addBombs(float dt);\n  void initAudio();\n  void initAudioNewEngine();\n  void initMuteButton();\n};\n\n#endif // __HELLOWORLD_SCENE_H__\n```", "```java\n#include \"HelloWorldScene.h\"\n#include \"SimpleAudioEngine.h\"\n#include \"audio/include/AudioEngine.h\"\n#include \"../cocos2d/cocos/platform/android/jni/Java_org_cocos2dx_lib_Cocos2dxHelper.h\"\n\nUSING_NS_CC;\nusing namespace CocosDenshion;\nusing namespace cocos2d::experimental;\n//Create scene code â€¦\n//User input event handling code\n```", "```java\nbool HelloWorld::explodeBombs(cocos2d::Touch* touch, cocos2d::Event* event){\n  Vec2 touchLocation = touch->getLocation();\n  cocos2d::Vector<cocos2d::Sprite*> toErase;\n  for(auto bomb : _bombs){\n    if(bomb->getBoundingBox().containsPoint(touchLocation)){\n      AudioEngine::play2d(\"bomb.mp3\");\n      auto explosion = ParticleSystemQuad::create(\"explosion.plist\");\n      explosion->setPosition(bomb->getPosition());\n      this->addChild(explosion);\n      bomb->setVisible(false);\n      this->removeChild(bomb);\n      toErase.pushBack(bomb);\n    }\n  }\n  for(auto bomb : toErase){\n    _bombs.eraseObject(bomb);\n  }\n  return true;\n}\n```", "```java\nvoid HelloWorld::initTouch(){\n  auto listener = EventListenerTouchOneByOne::create();\n  listener->onTouchBegan = CC_CALLBACK_2(HelloWorld::explodeBombs,this);\n  listener->onTouchMoved = CC_CALLBACK_2(HelloWorld::movePlayerByTouch,this);\n  listener->onTouchEnded = [=](Touch* touch, Event* event){};\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\n```", "```java\nvoid HelloWorld::addBombs(float dt)\n{\n  Sprite* bomb = nullptr;\n  for(int i = 0; i < 3; i++){\n    bomb = Sprite::create(\"bomb.png\");\n    bomb->setPosition(CCRANDOM_0_1() * visibleSize.width, visibleSize.height + bomb->getContentSize().height/2);\n    this->addChild(bomb,1);\n    setPhysicsBody(bomb);\n    bomb->getPhysicsBody()->setVelocity(Vect(0, ( (CCRANDOM_0_1() + 0.2f) * -250) ));\n    _bombs.pushBack(bomb);\n  }\n}\n```", "```java\nbool HelloWorld::init()\n{\n  if ( !Layer::init() ){\n    return false;\n  }\n  _score = 0;\n  _director = Director::getInstance();\n  _visibleSize = _director->getVisibleSize();\n  auto origin = _director->getVisibleOrigin();\n  auto closeItem = MenuItemImage::create(\"pause.png\", \"pause_pressed.png\", CC_CALLBACK_1(HelloWorld::pauseCallback, this));\n  closeItem->setPosition(Vec2(_visibleSize.width - closeItem->getContentSize().width/2 , closeItem->getContentSize().height/2));\n  auto menu = Menu::create(closeItem, nullptr);\n  menu->setPosition(Vec2::ZERO);\n  this->addChild(menu, 1);\n  _sprBomb = Sprite::create(\"bomb.png\");\n  _sprBomb->setPosition(_visibleSize.width/2, _visibleSize.height + _sprBomb->getContentSize().height/2);\n  this->addChild(_sprBomb,1);\n  auto bg = Sprite::create(\"background.png\");\n  bg->setAnchorPoint(Vec2());\n  bg->setPosition(0,0);\n  this->addChild(bg, -1);\n  _sprPlayer = Sprite::create(\"player.png\");\n  _sprPlayer->setPosition(_visibleSize.width/2, _visibleSize.height * 0.23);\n  setPhysicsBody(_sprPlayer);\n\n  this->addChild(_sprPlayer, 0);\n  //Animations\n  Vector<SpriteFrame*> frames;\n  Size playerSize = _sprPlayer->getContentSize();\n  frames.pushBack(SpriteFrame::create(\"player.png\", Rect(0, 0, playerSize.width, playerSize.height)));\n  frames.pushBack(SpriteFrame::create(\"player2.png\", Rect(0, 0, playerSize.width, playerSize.height)));\n  auto animation = Animation::createWithSpriteFrames(frames,0.2f);\n  auto animate = Animate::create(animation);\n  _sprPlayer->runAction(RepeatForever::create(animate));\n  setPhysicsBody(_sprBomb);\n  initPhysics();\n  _sprBomb->getPhysicsBody()->setVelocity(Vect(0,-100));\n  initTouch();\n  initAccelerometer();\n  #if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)\n  setKeepScreenOnJni(true);\n  #endif\n  initBackButtonListener();\n  schedule(CC_SCHEDULE_SELECTOR(HelloWorld::updateScore), 3.0f);\n  schedule(CC_SCHEDULE_SELECTOR(HelloWorld::addBombs), 8.0f);\n  initAudioNewEngine();\n  initMuteButton();\n  _bombs.pushBack(_sprBomb);\n  return true;\n}\n```"]
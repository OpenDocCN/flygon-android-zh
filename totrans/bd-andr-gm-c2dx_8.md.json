["```java\n<activity\n   android:name=\"org.cocos2dx.cpp.AppActivity\"\n   android:configChanges=\"orientation\"\n   android:label=\"@string/app_name\"\n   android:screenOrientation=\"portrait\"\n   android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\" >\n   <intent-filter>\n      <action android:name=\"android.intent.action.MAIN\" />\n      <category android:name=\"android.intent.category.LAUNCHER\" />\n   </intent-filter>\n</activity>\n```", "```java\npackage org.cocos2dx.cpp;\n\nimport org.cocos2dx.lib.Cocos2dxActivity;\n\npublic class AppActivity extends Cocos2dxActivity {\n}\n```", "```java\nSET CLASSPATH=.\njavap -s org.cocos2dx.cpp.AppActivity\n\n```", "```java\nCompiled from \"AppActivity.java\"\npublic class org.cocos2dx.cpp.AppActivity extends org.cocos2dx.lib.Cocos2dxActivity {\n  public org.cocos2dx.cpp.AppActivity();\n    Signature: ()V\n}\n```", "```java\nJniMethodInfo method;\nJniHelper::getStaticMethodInfo(method, CLASS_NAME,\"showToast\",\"(Ljava/lang/String;)V\");\njstring stringMessage = method.env->NewStringUTF(message);\nmethod.env->CallStaticVoidMethod(method.classID,  method.methodID, stringMessage);\n```", "```java\nmethod.env->DeleteLocalRef(stringMessage);\n```", "```java\npackage org.cocos2dx.cpp;\n\nimport org.cocos2dx.lib.Cocos2dxActivity;\nimport android.app.Activity;\nimport android.os.Bundle;\n\npublic class AppActivity extends Cocos2dxActivity {\n   private static Activity instance;\n    @Override\n    protected void onCreate(final Bundle savedInstanceState) {\n       instance = this;\n        super.onCreate(savedInstanceState);\n\n    }\n    public static Activity getInstance(){\n       return instance;\n    }\n}\n```", "```java\npackage com.packtpub.jni;\n\nimport org.cocos2dx.cpp.AppActivity;\nimport android.app.Activity;\nimport android.widget.Toast;\n\npublic class JniFacade {\n   private static Activity activity = AppActivity.getInstance();\n\n   public static void showToast(final String message) {\n      activity.runOnUiThread(new Runnable() {         \n         @Override\n         public void run() {\n            Toast.makeText(activity.getBaseContext(), message, Toast.   LENGTH_SHORT).show();   \n         }\n      });      \n   }\n}\n```", "```java\n#ifndef __JNI_BRIDGE_H__\n#define __JNI_BRIDGE_H__\n#include \"cocos2d.h\"\n\nclass JniBridge\n{\npublic:\n   static void showToast(const char* message);\n};\n\n#endif\n```", "```java\n#include \"JniBridge.h\"\n#define CLASS_NAME \"com/packtpub/jni/JniFacade\"\n#define METHOD_NAME \"showToast\"\n#define PARAM_CODE \"(Ljava/lang/String;)V\"\n\nUSING_NS_CC;\n\nvoid JniBridge::showToast(const char* message)\n{\n   JniMethodInfo method;\n   JniHelper::getStaticMethodInfo(method, CLASS_NAME, METHOD_NAME, PARAM_CODE);\n   jstring stringMessage = method.env->NewStringUTF(message);\n    method.env->CallStaticVoidMethod(method.classID, method.methodID, stringMessage);\n    method.env->DeleteLocalRef(stringMessage);\n}\n```", "```java\n#include \"JniBridge.h\"\n```", "```java\nJniBridge::showToast(\"Hello Java\");\n```", "```java\n   _muteItem->setPosition(Vec2(_visibleSize.width -  _muteItem->getContentSize().width/2 ,_visibleSize.height -  _muteItem->getContentSize().height * 2));\n```", "```java\n        <meta-data\n            android:name=\"com.google.android.gms.version\"\n            android:value=\"@integer/google_play_services_version\" />\n```", "```java\n       <activity\n            android:name=\"com.google.android.gms.ads.AdActivity\"\n            android:configChanges=\"keyboard|keyboardHidden|orientation| screenLayout|uiMode|screenSize|smallestScreenSize\" />\n```", "```java\n   private void initAdMob() {\n      final String ADMOB_ID = \"ca-app-pub-7870675803288590/4907722461\";\n      final AdView adView;\n      final FrameLayout adViewLayout;\n\n      FrameLayout.LayoutParams adParams = new FrameLayout.LayoutParams(\n            FrameLayout.LayoutParams.MATCH_PARENT,\n            FrameLayout.LayoutParams.WRAP_CONTENT);\n      adParams.gravity = Gravity.TOP | Gravity.CENTER_HORIZONTAL;      \n\n      AdRequest adRequest = new AdRequest.Builder().\n            addTestDevice(AdRequest.DEVICE_ID_EMULATOR).\n            addTestDevice(\"E8B4B73DC4CAD78DFCB44AF69E7B9EC4\").build();\n\n      adView = new AdView(this);\n      adView.setAdSize(AdSize.SMART_BANNER);\n      adView.setAdUnitId(ADMOB_ID);\n      adView.setLayoutParams(adParams);\n      adView.loadAd(adRequest);\n      adViewLayout = new FrameLayout(this);\n      adViewLayout.setLayoutParams(adParams);\n      adView.setAdListener(new AdListener() {\n            @Override\n            public void onAdLoaded() {\n              adViewLayout.addView(adView);\n            }         \n      });      \n      this.addContentView(adViewLayout, adParams);\n   }\n```", "```java\n#ifndef __JNI_BRIDGE_H__\n#define __JNI_BRIDGE_H__\n#include \"cocos2d.h\"\n\nclass JniBridge\n{\npublic:\n   static void showToast(const char* message);\n};\n\n#endif\n```", "```java\n#include \"JniBridge.h\"\n#include \"platform/android/jni/JniHelper.h\"\n#define CLASS_NAME \"com/packtpub/jni/JniFacade\"\n#define METHOD_NAME \"showToast\"\n#define PARAM_CODE \"(Ljava/lang/String;)V\"\n\nUSING_NS_CC;\n\nvoid JniBridge::showToast(const char* message)\n{\n   JniMethodInfo method;\n   JniHelper::getStaticMethodInfo(method, CLASS_NAME, METHOD_ NAME,PARAM_CODE);\n   jstring stringMessage = method.env->NewStringUTF(message);\n   method.env->CallStaticVoidMethod(method.classID, method.methodID, stringMessage);\n   method.env->DeleteLocalRef(stringMessage);\n}\n```", "```java\n#ifndef __HELLOWORLD_SCENE_H__\n#define __HELLOWORLD_SCENE_H__\n\n#include \"cocos2d.h\"\n#include \"PauseScene.h\"\n#include \"GameOverScene.h\"\n#include \"JniBridge.h\"\n\nclass HelloWorld : public cocos2d::Layer\n{\npublic:\n    static cocos2d::Scene* createScene();\n    virtual bool init();\n    void pauseCallback(cocos2d::Ref* pSender);\n    CREATE_FUNC(HelloWorld);\nprivate:\n   cocos2d::Director *_director;\n   cocos2d::Size visibleSize;   \n   cocos2d::Sprite* _sprBomb;\n   cocos2d::Sprite* _sprPlayer;   \n   cocos2d::Vector<cocos2d::Sprite*> _bombs;\n   cocos2d::MenuItemImage* _muteItem;\n   cocos2d::MenuItemImage* _unmuteItem;\n   int _score;   \n   int _musicId;\n   void initPhysics();\n   bool onCollision(cocos2d::PhysicsContact& contact);\n   void setPhysicsBody(cocos2d::Sprite* sprite);\n   void initTouch();\n   void movePlayerByTouch(cocos2d::Touch* touch,  cocos2d::Event* event);\n   bool explodeBombs(cocos2d::Touch* touch,  cocos2d::Event* event);\n   void movePlayerIfPossible(float newX);\n   void movePlayerByAccelerometer(cocos2d::Acceleration*  acceleration, cocos2d::Event* event);\n   void initAccelerometer();\n   void initBackButtonListener();\n   void onKeyPressed(cocos2d::EventKeyboard::KeyCode keyCode, cocos2d::Event* event);\n   void updateScore(float dt);\n   void addBombs(float dt);   \n   void initAudio();\n   void initAudioNewEngine();\n   void initMuteButton();\n};\n\n#endif // __HELLOWORLD_SCENE_H__\n```", "```java\n#include \"HelloWorldScene.h\"\nUSING_NS_CC;\nusing namespace CocosDenshion;\nusing namespace cocos2d::experimental;\n\n// User input handling code â€¦\nvoid HelloWorld::initMuteButton()\n{\n   _muteItem = MenuItemImage::create(\"mute.png\", \"mute.png\", CC_CALLBACK_1(HelloWorld::muteCallback, this));\n\n   _muteItem->setPosition(Vec2(_visibleSize.width -  _muteItem->getContentSize().width/2 ,\n   _visibleSize.height -  _muteItem->getContentSize().height * 2));\n```", "```java\n    _unmuteItem = MenuItemImage::create(\"unmute.png\", \"unmute.png\", CC_CALLBACK_1(HelloWorld::muteCallback, this));\n\n   _unmuteItem->setPosition(Vec2(_visibleSize.width -  _unmuteItem->getContentSize().width/2 ,\n   _visibleSize.height -  _unmuteItem->getContentSize().height *2));\n   _unmuteItem -> setVisible(false);\n\n   auto menu = Menu::create(_muteItem, _unmuteItem , nullptr);\n   menu->setPosition(Vec2::ZERO);\n   this->addChild(menu, 2);\n}\n// on \"init\" you need to initialize your instance\nbool HelloWorld::init()\n{\n  if ( !Layer::init() )\n  {\n     return false;\n  }\n  _score = 0;\n  _director = Director::getInstance();\n  visibleSize = _director->getVisibleSize();\n  auto origin = _director->getVisibleOrigin();\n  auto closeItem = MenuItemImage::create(\"CloseNormal.png\", \"CloseSelected.png\", CC_CALLBACK_1(HelloWorld::pauseCallback, this));\n  closeItem->setPosition(Vec2(visibleSize.width -  closeItem->getContentSize().width/2 , closeItem->getContentSize().height/2));\n\n  auto menu = Menu::create(closeItem, nullptr);\n  menu->setPosition(Vec2::ZERO);\n  this->addChild(menu, 1);\n  _sprBomb = Sprite::create(\"bomb.png\");   \n  _sprBomb->setPosition(visibleSize.width / 2,  visibleSize.height + _sprBomb->getContentSize().height/2);\n  this->addChild(_sprBomb,1);\n  auto bg = Sprite::create(\"background.png\");\n  bg->setAnchorPoint(Vec2());\n  bg->setPosition(0,0);\n  this->addChild(bg, -1);\n  _sprPlayer = Sprite::create(\"player.png\");   \n  _sprPlayer->setPosition(visibleSize.width / 2, visibleSize.height *   0.23);\n  setPhysicsBody(_sprPlayer);\n  this->addChild(_sprPlayer, 0);\n  //Animations\n  Vector<SpriteFrame*> frames;\n  Size playerSize = _sprPlayer->getContentSize();\n  frames.pushBack(SpriteFrame::create(\"player.png\",  Rect(0, 0, playerSize.width, playerSize.height)));\n  frames.pushBack(SpriteFrame::create(\"player2.png\",  Rect(0, 0, playerSize.width, playerSize.height)));\n  auto animation = Animation::createWithSpriteFrames(frames,0.2f);\n  auto animate = Animate::create(animation);\n  _sprPlayer->runAction(RepeatForever::create(animate));   \n  setPhysicsBody(_sprBomb);   \n  initPhysics();   \n  _sprBomb->getPhysicsBody()->setVelocity(Vect(0,-100));   \n  initTouch();\n  initAccelerometer();   \n  #if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)\n  setKeepScreenOnJni(true);\n  #endif\n  initBackButtonListener();\n  schedule(schedule_selector(HelloWorld::updateScore), 3.0f);\n  schedule(schedule_selector(HelloWorld::addBombs), 8.0f);\n  initAudioNewEngine();\n  initMuteButton();\n  _bombs.pushBack(_sprBomb);\n JniBridge::showToast(\"Hello Java\");\n  return true;\n}\n```", "```java\npackage org.cocos2dx.cpp;\n\nimport org.cocos2dx.lib.Cocos2dxActivity;\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.view.Gravity;\nimport android.widget.FrameLayout;\nimport com.google.android.gms.ads.AdListener;\nimport com.google.android.gms.ads.AdRequest;\nimport com.google.android.gms.ads.AdSize;\nimport com.google.android.gms.ads.AdView;\n\npublic class AppActivity extends Cocos2dxActivity {\n   private static Activity instance;\n\n   private void initAdMob() {\n      final String ADMOB_ID = \"ca-app-pub-7870675803288590/4907722461\";\n      final AdView adView;\n      final FrameLayout adViewLayout;\n\n      FrameLayout.LayoutParams adParams = new FrameLayout. LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.WRAP_CONTENT);\n      adParams.gravity = Gravity.TOP | Gravity.CENTER_HORIZONTAL;      \n      AdRequest adRequest = new AdRequest.Builder().\n      addTestDevice(AdRequest.DEVICE_ID_EMULATOR).\n      addTestDevice(\"E8B4B73DC4CAD78DFCB44AF69E7B9EC4\").build();\n\n      adView = new AdView(this);\n      adView.setAdSize(AdSize.SMART_BANNER);\n      adView.setAdUnitId(ADMOB_ID);\n      adView.setLayoutParams(adParams);\n      adView.loadAd(adRequest);\n      adViewLayout = new FrameLayout(this);\n      adViewLayout.setLayoutParams(adParams);\n      adView.setAdListener(new AdListener() {\n            @Override\n            public void onAdLoaded() {\n            adViewLayout.addView(adView);\n            }         \n      });      \n      this.addContentView(adViewLayout, adParams);\n   }\n\n   @Override\n   protected void onCreate(final Bundle savedInstanceState) {\n      instance = this;      \n      super.onCreate(savedInstanceState);\n      initAdMob();\n   }\n\n   public static Activity getInstance() {\n      return instance;\n   }\n}\n```", "```java\nimport org.cocos2dx.cpp.AppActivity;\nimport android.app.Activity;\nimport android.widget.Toast;\n\npublic class JniFacade {\n   private static Activity activity = AppActivity.getInstance();\n\n   public static void showToast(final String message) {\n      activity.runOnUiThread(new Runnable() {         \n         @Override\n         public void run() {\n            Toast.makeText(activity.getBaseContext(), message, Toast.   LENGTH_SHORT).show();   \n         }\n      }      \n   }\n}\n```", "```java\nLOCAL_PATH := $(call my-dir)\n\ninclude $(CLEAR_VARS)\n\n$(call import-add-path,$(LOCAL_PATH)/../../cocos2d)\n$(call import-add-path,$(LOCAL_PATH)/../../cocos2d/external)\n$(call import-add-path,$(LOCAL_PATH)/../../cocos2d/cocos)\n\nLOCAL_MODULE := cocos2dcpp_shared\n\nLOCAL_MODULE_FILENAME := libcocos2dcpp\n\nLOCAL_SRC_FILES := hellocpp/main.cpp \\\n         ../../Classes/JniBridge.cpp \\\n         ../../Classes/AppDelegate.cpp \\\n         ../../Classes/PauseScene.cpp \\\n         ../../Classes/GameOverScene.cpp \\\n                   ../../Classes/HelloWorldScene.cpp\n\nLOCAL_C_INCLUDES := $(LOCAL_PATH)/../../Classes\n\nLOCAL_STATIC_LIBRARIES := cocos2dx_static\n\ninclude $(BUILD_SHARED_LIBRARY)\n\n$(call import-module,.)\n```", "```java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest \n    package=\"com.packt.happybunny\"\n    android:installLocation=\"auto\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\" >\n\n    <uses-sdk android:minSdkVersion=\"9\" />\n\n    <uses-feature android:glEsVersion=\"0x00020000\" />\n\n    <application\n        android:icon=\"@drawable/icon\"\n        android:label=\"@string/app_name\" >\n        <meta-data\n           android:name=\"com.google.android.gms.version\"\n           android:value=\"@integer/google_play_services_version\" />\n\n        <!-- Tell Cocos2dxActivity the name of our .so -->\n        <meta-data\n           android:name=\"android.app.lib_name\"\n           android:value=\"cocos2dcpp\" />\n\n        <activity\n           android:name=\"org.cocos2dx.cpp.AppActivity\"\n           android:configChanges=\"orientation\"\n           android:label=\"@string/app_name\"\n           android:screenOrientation=\"portrait\"\n           android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\"com.google.android.gms.ads.AdActivity\"\n            android:configChanges=\"keyboard|keyboardHidden|orientation| screenLayout|uiMode|screenSize|smallestScreenSize\" />\n    </application>\n\n    <supports-screens\n        android:anyDensity=\"true\"\n        android:largeScreens=\"true\"\n        android:normalScreens=\"true\"\n        android:smallScreens=\"true\"\n        android:xlargeScreens=\"true\" />\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n</manifest>\n```"]
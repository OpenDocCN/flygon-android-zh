["```java\nprivate void addMarker(Memory memory) {\n    Marker marker = mMap.addMarker(new MarkerOptions()\n          .draggable(true).icon(BitmapDescriptorFactory.defaultMarker\n          (BitmapDescriptorFactory.HUE_CYAN)).alpha(0.7f)\n            .position(new LatLng(memory.latitude, memory.longitude)));\n\n    mMemories.put(marker.getId(), memory);\n}\n\n```", "```java\nprivate void addMarker(Memory memory) {\n    Marker marker = mMap.addMarker(new MarkerOptions()\n            .draggable(true).icon(BitmapDescriptorFactory.fromResource\n            (R.drawable.ic_edit_location)).alpha(0.7f)\n            .position(new LatLng(memory.latitude, memory.longitude)));\n\n    mMemories.put(marker.getId(), memory);\n}\n\n```", "```java\n private void addMarker(Memory memory) {\n\n        Bitmap.Config conf = Bitmap.Config.ARGB_8888;\n        Bitmap bmp = Bitmap.createBitmap(80, 80, conf);\n        Canvas canvas1 = new Canvas(bmp);\n\n        // paint defines the text color, stroke width and size\n        Paint color = new Paint();\n        color.setTextSize(15);\n        color.setColor(Color.BLACK);\n\n        // modify canvas\n        canvas1.drawBitmap(BitmapFactory.decodeResource(getResources(),\n                R.drawable.ic_edit_location), 0,0, color);\n        canvas1.drawText(\"Notes\", 30, 35, color);\n\n        // add marker to Map\n\n        Marker marker = mMap.addMarker(new MarkerOptions()\n                .draggable(true).icon(BitmapDescriptorFactory\n                .fromBitmap(bmp)).alpha(0.7f)\n                .position(new LatLng(memory.latitude, \n                memory.longitude)));\n\n        mMemories.put(marker.getId(), memory);\n    }\n\n```", "```java\n@Override\npublic void onMarkerDragStart(Marker marker) {\n\n}\n\n@Override\npublic void onMarkerDrag(Marker marker) {\n\n}\n\n@Override\npublic void onMarkerDragEnd(Marker marker) {\n\n}\n\n```", "```java\n@Override\npublic void onMapReady(GoogleMap googleMap) {\n\nmMap.setOnMarkerDragListener(this);\n...\n}\n\n```", "```java\n@Override\npublic void onMarkerDragEnd(Marker marker) {\n\n    Memory memory = mMemories.get(marker.getId());\n    updateMemoryPosition(memory, marker.getPosition());\n    mDataSource.updateMemory(memory);\n\n}\n\n```", "```java\nmMap.setOnInfoWindowClickListener(this);\n\n```", "```java\n@Override\npublic void onInfoWindowClick(final Marker marker) {\n    final Memory memory = mMemories.get(marker.getId());\n    String[] actions  = {\"Delete\"};\n    AlertDialog.Builder builder = new AlertDialog.Builder(this);\n    builder.setTitle(memory.city+\", \"+memory.country)\n            .setItems(actions, new DialogInterface.OnClickListener() {\n                @Override\n                public void onClick\n                (DialogInterface dialog, int which) {\n                    if (which == 0){\n                        marker.remove();\n                        mDataSource.deleteMemory(memory);\n                    }\n                }\n            });\n\n    builder.create().show();\n}\n\n```", "```java\nmMap.getUiSettings().setZoomControlsEnabled(true);\n\n```", "```java\nmMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);\n\n```", "```java\nobject'mMap.setMapType(GoogleMap.MAP_TYPE_TERRAIN);\n\n```", "```java\nmMap.setMapType(GoogleMap.MAP_TYPE_NONE);\n\n```", "```java\nmMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE)\n\n```", "```java\nLets create a new activity with the following layout and java code. \n//Java class\npublic class StreetView extends AppCompatActivity {\n\n    private static final LatLng SYDNEY = new LatLng(-33.87365, \n    151.20689);\n\n    @Override\n    protected void onCreate(final Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_street_view);\n\n        SupportStreetViewPanoramaFragment streetViewPanoramaFragment =\n                (SupportStreetViewPanoramaFragment)\n                        getSupportFragmentManager()\n                        .findFragmentById(R.id.Streetviewpanorama);\n\n        streetViewPanoramaFragment.getStreetViewPanoramaAsync(\n                new OnStreetViewPanoramaReadyCallback() {\n                    @Override\n                    public void onStreetViewPanoramaReady\n                    (StreetViewPanorama panorama) {\n                        // Only set the panorama to SYDNEY on startup \n                        (when no panoramas have been\n                        // loaded which is when the savedInstanceState \n                        is null).\n                        if (savedInstanceState == null) {\n                            panorama.setPosition(SYDNEY);\n                        }\n                    }\n                });\n    }\n}\n\n```", "```java\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n android:layout_width=\"match_parent\"\n android:layout_height=\"match_parent\">\n\n<fragment\n android:id=\"@+id/Streetviewpanorama\"\n android:layout_width=\"match_parent\"\n android:layout_height=\"match_parent\"\n class=\"com.google.android.gms.maps.SupportStreetViewPanoramaFragment\" />\n</FrameLayout>\n\n```", "```java\nandroid:theme=\"@style/Theme.AppCompat.Light.NoActionBar\"\n@Override\n    public void onMapLongClick(LatLng latLng) {\n        // Display the dismiss overlay with a button to exit this \n        activity.\n\n        //        mDismissOverlay.show();\n\n        Intent street = new Intent(MapsActivity.this, \n        StreetView.class);\n        startActivity(street);\n\n```", "```java\nPolyline line = mMap.addPolyline(new PolylineOptions()\n        .add(new LatLng(-34, 151), new LatLng(-37, 74.0))\n        .width(5)\n        .color(Color.WHITE));\n\n```"]
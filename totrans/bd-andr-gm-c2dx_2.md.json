["```java\nbool AppDelegate::applicationDidFinishLaunching() {\n    auto director = Director::getInstance();\n  // OpenGL initialization done by cocos project creation script\n    auto glview = director->getOpenGLView();\n    auto scene = HelloWorld::createScene();\n    director->runWithScene(scene);\n    return true;\n}\n```", "```java\nauto director = Director::getInstance();\n```", "```java\n#ifndef __Pause_SCENE_H__\n#define __Pause_SCENE_H__\n\n#include \"cocos2d.h\"\n\nclass Pause : public cocos2d::Layer\n{\npublic:\n    static cocos2d::Scene* createScene();\n    virtual bool init();\n  void exitPause(cocos2d::Ref* pSender);\n    CREATE_FUNC(Pause);\nprivate:\n  cocos2d::Director *_director;\n  cocos2d::Size _visibleSize;\n};\n\n#endif // __Pause_SCENE_H__\n```", "```java\n#include \"PauseScene.h\"\n\nUSING_NS_CC;\n\nScene* Pause::createScene()\n{\n    auto scene = Scene::create();\n    auto layer = Pause::create();\n    scene->addChild(layer);\n    return scene;\n}\n\nbool Pause::init()\n{\n    if ( !Layer::init() )\n    {\n      return false;\n    }\n  _director = Director::getInstance();\n  _visibleSize = _director->getVisibleSize();\n  Vec2 origin = _director->getVisibleOrigin();\n  auto pauseItem = MenuItemImage::create(\"play.png\", \"play_pressed.png\", CC_CALLBACK_1(Pause::exitPause, this));\n  pauseItem->setPosition(Vec2(origin.x + _visibleSize.width -pauseItem->getContentSize().width / 2, origin.y + pauseItem->getContentSize().height / 2));\n  auto menu = Menu::create(pauseItem, nullptr);\n  menu->setPosition(Vec2::ZERO);\n  this->addChild(menu, 1);\n  auto label = Label::createWithTTF(\"PAUSE\", \"fonts/Marker Felt.ttf\", 96);\n  label->setPosition(origin.x + _visibleSize.width/2, origin.y + _visibleSize.height /2);\n  this->addChild(label, 1);\n  return true;\n}\n\nvoid Pause::exitPause(cocos2d::Ref* pSender){\n  /*Pop the pause scene from the Scene stack.\n  This will remove current scene.*/\n  Director::getInstance()->popScene();\n}\n```", "```java\nvoid pauseCallback(cocos2d::Ref* pSender);\n```", "```java\nvoid HelloWorld::pauseCallback(cocos2d::Ref* pSender){\n  _director->pushScene(Pause::createScene());\n}\n```", "```java\n    auto closeItem = MenuItemImage::create(\"pause.png\", \"pause_pressed.png\", CC_CALLBACK_1(HelloWorld::pauseCallback, this));\n```", "```java\nvoid HelloWorld::pauseCallback(cocos2d::Ref* pSender){\n  _director->pushScene(TransitionFlipX::create(1.0, Pause::createScene()));\n}\n```", "```java\nauto sprBomb = Sprite::create(\"bomb.png\");\n```", "```java\nsprBomb -> setPosition(0,0);\n```", "```java\nsprBomb -> setAnchorPoint(Vec2(0,0));\nsprBomb -> setPosition(0,0);\n```", "```java\n  this->addChild(sprBomb,1);\n```", "```java\n  auto bg = Sprite::create(\"background.png\");\n  bg->setAnchorPoint(Vec2());\n  bg->setPosition(0,0);\n  this->addChild(bg, -1);\n```", "```java\nsprBomb->setPosition(_visibleSize.width / 2, _visibleSize.height + sprBomb->getContentSize().height/2);\n```", "```java\nauto player = Sprite::create(\"player.png\");\nplayer->setPosition(_visibleSize.width / 2, _visibleSize.height* 0.23);\nthis->addChild(player, 0);\n```", "```java\nsprBomb->setPosition(_visibleSize.width / 2, _visibleSize.height + sprBomb->getContentSize().height/2);\n```", "```java\n  auto moveTo = MoveTo::create(2, Vec2(sprBomb->getPositionX(), 0 - sprBomb->getContentSize().height/2));\n  sprBomb->runAction(moveTo);\n```", "```java\n  auto moveBy = MoveBy::create(2, Vec2(0, 250));\n  sprBomb->runAction(moveBy);\n```", "```java\n  //actions\n  auto moveFinished = CallFuncN::create(CC_CALLBACK_1(HelloWorld::moveFinished, this));\n  auto moveTo = MoveTo::create(2, Vec2(sprBomb->getPositionX(), 0 - sprBomb->getContentSize().height/2));\n  auto sequence = Sequence::create(moveTo, moveFinished, nullptr);\n  sprBomb->runAction(sequence);\n```", "```java\n//Animations\nVector<SpriteFrame*> frames;\nSize playerSize = sprPlayer->getContentSize();\nframes.pushBack(SpriteFrame::create(\"player.png\", Rect(0, 0, playerSize.width, playerSize.height)));\nframes.pushBack(SpriteFrame::create(\"player2.png\", Rect(0, 0, playerSize.width, playerSize.height)));\nauto animation = Animation::createWithSpriteFrames(frames,0.2f);\nauto animate = Animate::create(animation);\nsprPlayer->runAction(RepeatForever::create(animate));\n```", "```java\nSpriteFrameCache* cache = SpriteFrameCache::getInstance();\ncache->addSpriteFramesWithFile(\"bunny.plist\");\nauto sprBunny = Sprite::createWithSpriteFrameName(\"player3.png\");\nsprBunny -> setAnchorPoint(Vec2());\n```", "```java\nauto closeItem = MenuItemImage::create(\"pause.png\", \"CloseSelected.png\", CC_CALLBACK_1(HelloWorld::pause_pressed, this));\ncloseItem->setPosition(Vec2(_visibleSize.width â€“ closeItem->getContentSize().width/2 , closeItem-> getContentSize().height/2));\nauto menu = Menu::create(closeItem, nullptr);\nmenu->setPosition(Vec2::ZERO);\nthis->addChild(menu, 1);\n```", "```java\nbool AppDelegate::applicationDidFinishLaunching() {\n  auto director = Director::getInstance();\n  // OpenGL initialization done by cocos project creation script\n  auto glview = director->getOpenGLView();\n  Size screenSize = glview->getFrameSize();\n  Size designSize = CCSizeMake(768, 1280);\n  std::vector<std::string> searchPaths;\n\nif (screenSize.height > 800){\n  //High Resolution\n  searchPaths.push_back(\"images/high\");\n  director->setContentScaleFactor(1280.0f / designSize.height);\n}\nelse if (screenSize.height > 600){\n  //Mid resolution\n  searchPaths.push_back(\"images/mid\");\n  director->setContentScaleFactor(800.0f / designSize.height);\n}\nelse{\n  //Low resolution\n  searchPaths.push_back(\"images/low\");\n  director->setContentScaleFactor(320.0f / designSize.height);\n}\n  FileUtils::getInstance()->setSearchPaths(searchPaths);\n  glview->setDesignResolutionSize(designSize.width, designSize.height, ResolutionPolicy::NO_BORDER );\n  auto scene = HelloWorld::createScene();\n  director->runWithScene(scene);\n  return true;\n}\n```", "```java\n#include \"HelloWorldScene.h\"\n#include \"PauseScene.h\"\n\nUSING_NS_CC;\n\nScene* HelloWorld::createScene()\n{\n  // 'scene' is an autorelease object\n  auto scene = Scene::create();\n\n  // 'layer' is an autorelease object\n  auto layer = HelloWorld::create();\n\n  // add layer as a child to scene\n  scene->addChild(layer);\n\n  // return the scene\n  return scene;\n}\n```", "```java\nbool HelloWorld::init()\n{\n  if ( !Layer::init() )\n  {\n    return false;\n  }\n  _director = Director::getInstance();\n  _visibleSize = _director->getVisibleSize();\n  auto origin = _director->getVisibleOrigin();\n  auto closeItem = MenuItemImage::create(\"pause.png\", \"pause_pressed.png\", CC_CALLBACK_1(HelloWorld::pauseCallback, this));\n\n  closeItem->setPosition(Vec2(_visibleSize.width - closeItem->getContentSize().width/2 ,\n  closeItem->getContentSize().height/2));\n\n  auto menu = Menu::create(closeItem, nullptr);\n  menu->setPosition(Vec2::ZERO);\n  this->addChild(menu, 1);\n  auto sprBomb = Sprite::create(\"bomb.png\");\n  sprBomb->setPosition(_visibleSize.width / 2, _visibleSize.height + sprBomb->getContentSize().height/2);\n  this->addChild(sprBomb,1);\n  auto bg = Sprite::create(\"background.png\");\n  bg->setAnchorPoint(Vec2::Zero);\n  bg->setPosition(0,0);\n  this->addChild(bg, -1);\n  auto sprPlayer = Sprite::create(\"player.png\");\n  sprPlayer->setPosition(_visibleSize.width / 2, _visibleSize.height * 0.23);\n  this->addChild(sprPlayer, 0);\n```", "```java\n  Vector<SpriteFrame*> frames;\n  Size playerSize = sprPlayer->getContentSize();\n  frames.pushBack(SpriteFrame::create(\"player.png\", Rect(0, 0, playerSize.width, playerSize.height)));\n  frames.pushBack(SpriteFrame::create(\"player2.png\", Rect(0, 0, playerSize.width, playerSize.height)));\n  auto animation = Animation::createWithSpriteFrames(frames,0.2f);\n  auto animate = Animate::create(animation);\n  sprPlayer->runAction(RepeatForever::create(animate));\n```", "```java\n  //actions\n  auto moveFinished = CallFuncN::create(CC_CALLBACK_1(HelloWorld::moveFinished, this));\n  auto moveTo = MoveTo::create(2, Vec2(sprBomb->getPositionX(), 0 - sprBomb->getContentSize().height/2));\n  auto sequence = Sequence::create(moveTo, moveFinished, nullptr);\n  sprBomb->runAction(sequence);\n  return true;\n}\n\nvoid HelloWorld::moveFinished(Node* sender){\n  CCLOG(\"Move finished\");\n}\n\nvoid HelloWorld::pauseCallback(cocos2d::Ref* pSender){\n  _director->pushScene(TransitionFlipX::create(1.0, Pause::createScene()));\n}\n```"]
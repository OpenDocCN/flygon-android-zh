["```java\n<application>\n...\n  <meta-data\n    android:name=\"com.google.android.wearable.standalone\"\n    android:value=\"true\" />\n...\n</application>\n\n```", "```java\n<resources>\n    <string-array name=\"android_wear_capabilities\">\n        <item>voice_transcription</item>\n    </string-array>\n</resources>\n\n```", "```java\nprivate static final String\n        VOICE_TRANSCRIPTION_CAPABILITY_NAME = \"voice_transcription\";\n\nprivate GoogleApiClient mGoogleApiClient;\n\n...\n\nprivate void setupVoiceTranscription() {\n    CapabilityApi.GetCapabilityResult result =\n            Wearable.CapabilityApi.getCapability(\n                    mGoogleApiClient, \n                    VOICE_TRANSCRIPTION_CAPABILITY_NAME,\n                    CapabilityApi.FILTER_REACHABLE).await();\n\n    updateTranscriptionCapability(result.getCapability());\n}\n\n```", "```java\nprivate void setupVoiceTranscription() {\n    ...\n\n    CapabilityApi.CapabilityListener capabilityListener =\n            new CapabilityApi.CapabilityListener() {\n                @Override\n                public void onCapabilityChanged(CapabilityInfo \n                capabilityInfo) {\n                    updateTranscriptionCapability(capabilityInfo);\n                }\n            };\n\n    Wearable.CapabilityApi.addCapabilityListener(\n            mGoogleApiClient,\n            capabilityListener,\n            VOICE_TRANSCRIPTION_CAPABILITY_NAME);\n}\n\n```", "```java\nComplicationData.Builder(ComplicationData.*TYPE_SHORT_TEXT*)\n    .setShortText(ComplicationText.*plainText*(formatShortDate(date)))\n    .setIcon(Icon.*createWithResource*(context, R.drawable.*ic_event*))\n    .setTapAction(createContactEventsActivityIntent())\n    .build();\n\n```", "```java\ncom.google.android.wearable.permission.RECEIVE_COMPLICATION_DATA\n\n```", "```java\n<activity android:name=\"android.support.wearable.complications.ComplicationHelperActivity\"/>\n\n```", "```java\nstartActivityForResult(\n  ComplicationHelperActivity.createProviderChooserHelperIntent(\n     getActivity(),\n     watchFace,\n     complicationId,\n     ComplicationData.TYPE_LARGE_IMAGE),\n  PROVIDER_CHOOSER_REQUEST_CODE);\n\n```", "```java\n<android.support.wearable.view.drawer.WearableDrawerLayout\n    android:id=\"@+id/drawer_layout\"\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:deviceIds=\"wear\">\n\n    <android.support.v4.widget.NestedScrollView\n        android:id=\"@+id/content\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n    <LinearLayout\n            android:id=\"@+id/linear_layout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\" />\n\n    </android.support.v4.widget.NestedScrollView>\n\n    <android.support.wearable.view.drawer.WearableNavigationDrawer\n        android:id=\"@+id/top_navigation_drawer\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/>\n\n    <android.support.wearable.view.drawer.WearableActionDrawer\n        android:id=\"@+id/bottom_action_drawer\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:action_menu=\"@menu/action_drawer_menu\"/>\n\n</android.support.wearable.view.drawer.WearableDrawerLayout>\n\n```", "```java\n <android.support.wearable.view.drawer.WearableNavigationDrawer\n        android:id=\"@+id/top_drawer\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@android:color/holo_red_light\"\n        app:navigation_style=\"single_page\"/>\n\n```", "```java\n<android.support.wearable.view.drawer.WearableDrawerView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"top\"\n        android:background=\"@color/red\"\n        app:drawer_content=\"@+id/drawer_content\"\n        app:peek_view=\"@+id/peek_view\">\n        <FrameLayout\n            android:id=\"@id/drawer_content\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n            <!-- Drawer content goes here.  -->\n        </FrameLayout>\n        <LinearLayout\n            android:id=\"@id/peek_view\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:paddingTop=\"8dp\"\n            android:paddingBottom=\"8dp\"\n            android:orientation=\"horizontal\">\n            <!-- Peek view content goes here.  -->\n        <LinearLayout>\n    </android.support.wearable.view.drawer.WearableDrawerView>\n\n```", "```java\nString[] choices = context.getResources().getStringArray(R.array.notification_reply_choices);     choices = WearUtil.addEmojisToCannedResponse(choices);   \nRemoteInput remoteInput = new RemoteInput.\nBuilder(Intent.EXTRA_TEXT)         \n.setLabel(context.getString\n      (R.string.notification_prompt_reply))      \n     .setChoices(choices)    \n     .build();\n\n```", "```java\nNotificationCompat.Action.Builder actionBuilder = new NotificationCompat.Action.Builder(\n        R.drawable.ic_full_reply, R.string.notification_reply, \n        replyPendingIntent);\n    actionBuilder.addRemoteInput(remoteInput);\n    actionBuilder.setAllowGeneratedReplies(true);\n\n```", "```java\n// Android Wear 2.0 requires a hint to display the reply action inline.\n    Action.WearableExtender actionExtender =\n        new Action.WearableExtender()\n            .setHintLaunchesActivity(true)\n            .setHintDisplayActionInline(true);\n    wearableExtender.addAction\n    (actionBuilder.extend(actionExtender).build());\n\n```", "```java\n<application>\n...\n  <meta-data\n    android:name=\"com.google.android.wearable.notificationBridgeMode\"\n    android:value=\"NO_BRIDGING\" />\n...\n</application>\n\n```", "```java\nBridgingManager.fromContext(context).setConfig(\n  new BridgingConfig.Builder(context, false)\n    .build());\n\n```", "```java\nNotificationCompat.WearableExtender wearableExtender =\n  new NotificationCompat.WearableExtender().setDismissalId(\"abc123\");\nNotification notification = new NotificationCompat.Builder(context)\n// ... set other fields ...\n  .extend(wearableExtender)\n  .build();\n\n```"]
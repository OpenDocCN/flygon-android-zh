- en: Chapter 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章
- en: Android software development kit and android debug bridge
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android软件开发工具包和Android调试桥
- en: Information in this chapter
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本章信息
- en: • [Android platforms](#S0015)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: • [Android平台](#S0015)
- en: • [Software development kit (SDK)](#S0055)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: • [软件开发工具包（SDK）](#S0055)
- en: • [Android security model](#S0105)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: • [Android安全模型](#S0105)
- en: • [Forensics and the SDK](#S0110)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: • [取证与SDK](#S0110)
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: The Android software development kit (SDK) provides not only the tools to create
    applications that run on the Android platform but it also provides documentation
    and utilities that can assist significantly in the forensic or security analysis
    of a device. While the Android hardware covered in [Chapter 2](CHP002.html) plays
    a major role in the capabilities of a device, the software harnesses these features
    to ultimately create the experience and functionality consumers seek. A thorough
    understanding of the Android SDK will provide many insights into the data and
    the device, as well as important utilities that we will leverage in investigations.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Android软件开发工具包（SDK）不仅提供了在Android平台上运行的应用程序创建工具，还提供了文档和实用程序，这些在设备的法医或安全分析中可以提供很大帮助。尽管[第二章](CHP002.html)中提到的Android硬件在设备能力中扮演了主要角色，但软件则利用这些功能最终创造了消费者寻求的体验和功能性。对Android
    SDK的彻底了解将为我们提供许多关于数据和设备以及我们将在调查中利用的重要实用程序的知识。
- en: Android platforms
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android平台
- en: Android was officially announced in November 2007 but has been under significant
    development since 2005\. This, combined with the large and diverse hardware, which
    leverages Android, has created a diverse ecosystem adding significant complexity
    for the forensic analyst or security engineer.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Android在2007年11月正式发布，但从2005年起就一直在进行重大开发。结合大量多样的硬件，利用Android，创造了一个多元化的生态系统，为法医分析师或安全工程师增加了显著的复杂性。
- en: An informative characteristic of Android is the version of the Android platform
    itself. The platform is a large factor in determining the features a device can
    support. The official Android platforms are each assigned an application programming
    interface (API) level, and all the newer versions receive a code name. The current
    release, as of January 2011, is Android 2.3 which has the code name Gingerbread.
    The next major release has a code name Honeycomb and appears to target the anticipated
    growth of tablet devices. [Table 3.1](#T0010) gives the full list of Android platforms
    including API level, code name, and release date ([Android timeline, n.d.](#BIB1)).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Android的一个有趣特点是Android平台本身的版本。平台是决定设备可以支持哪些功能的重要因素。官方的Android平台每个都分配有一个应用程序编程接口（API）级别，所有较新的版本都会有一个代号。截至2011年1月，当前的发布版本是代号为Gingerbread的Android
    2.3。下一个主要版本有一个代号为Honeycomb，似乎针对的是预期增长的平板设备。[表3.1](#T0010)列出了包括API级别、代号和发布日期在内的所有Android平台（[Android时间线，未标明日期](#BIB1)）。
- en: Table 3.1 Android Platforms
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.1 Android平台
- en: '![Image](img/T100032tabT0010.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/T100032tabT0010.jpg)'
- en: While many Android versions exist, the distribution of each in current devices
    can have a large impact on forensic analysts and security engineers. [Figure 3.1](#F0010)
    shows Google’s reports of distribution of Android versions based on a two-week
    survey of devices accessing the Android Market ([Platform Versions, n.d.](#BIB2)).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存在许多Android版本，但每个版本在当前设备中的分布情况对法医分析师和安全工程师都有很大影响。[图3.1](#F0010)展示了基于两周内访问Android
    Market的设备调查的Google关于Android版本分布的报告（[平台版本，未标明日期](#BIB2)）。
- en: '![image](img/F100032f03-01-9781597496513.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/F100032f03-01-9781597496513.jpg)'
- en: FIGURE 3.1 Distribution of Android devices by platforms, January 2011.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 2011年1月Android设备平台分布情况。
- en: To put that in perspective, [Table 3.2](#T0015) shows the total number of devices
    in circulation in the United States by Android version. These data are based on
    an approximate US Android device population of 15.99 million as of November 2011
    ([comScore Reports, n.d.](#BIB3)).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让大家有一个直观的了解，[表3.2](#T0015)展示了截至2011年11月，美国流通的各Android版本设备总数。这些数据基于大约1599万美国Android设备人口统计数据（[comScore报告，未标明日期](#BIB3)）。
- en: Table 3.2 Approximate Number of Android Devices by Platform in the United States
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.2 美国按平台划分的Android设备数量（近似值）
- en: '| Android Version | Total Devices |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| Android版本 | 总设备数 |'
- en: '| --- | --- |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Android 2.3 | 63,960 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| Android 2.3 | 63,960台 |'
- en: '| Android 2.2 | 8,282,820 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| Android 2.2 | 8,282,820台 |'
- en: '| Android 2.1 | 5,628,480 |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| Android 2.1 | 5,628,480台 |'
- en: '| Android 1.6 | 1,263,210 |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| Android 1.6 | 1,263,210台 |'
- en: '| Android 1.5 | 751,530 |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| Android 1.5 | 751,530台 |'
- en: Google also released a graph displaying the historical distribution of Android
    versions for the seven-month period between August 2010 and February 2, 2011\.
    The data are again based on devices accessing the Android Market but nicely displayed
    the progress of Android updates over time as shown in [Fig. 3.2](#F0015) ([Platform
    Versions, n.d.](#BIB2)).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌还发布了一张图表，显示了2010年8月至2011年2月2日七个月间Android版本的历史分布情况。数据同样基于访问Android市场的设备，并清晰地展示了Android更新随时间推移的进展，如图[图3.2](#F0015)所示（[Platform
    Versions, n.d.](#BIB2)）。
- en: '![image](img/F100032f03-02-9781597496513.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/F100032f03-02-9781597496513.jpg)'
- en: FIGURE 3.2 Historical distribution of Android version from August 2001 through
    February 2, 2011.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 2001年8月至2011年2月2日Android版本的历史分布情况。
- en: While some devices will never support the latest version of Android, many do
    eventually receive the update. Future devices will probably be able to quickly
    support and upgrade to the latest version. However, from a forensics and security
    perspective, the older outliers cannot be ignored.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有些设备永远不会支持Android的最新版本，但许多设备最终会收到更新。未来的设备可能能够快速支持和升级到最新版本。然而，从法医和安全的角度来看，不能忽视这些较旧的异常值。
- en: Android Platform Highlights Through 2.3.3 (Gingerbread)
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过2.3.3（姜饼）的Android平台亮点
- en: Android is a sophisticated, heavily developed platform and any attempt to fully
    document all features would encompass a large portion of this book. However, a
    brief overview of each major release can be helpful so that a forensic analyst
    is aware of the features a device may support. Generally speaking, the features
    build on each other so functionality available in Android 1.5 is likely available
    and improved in Android 2.3.3.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Android是一个复杂且高度发展的平台，任何尝试完全记录所有功能的努力都将占据本书的很大一部分。然而，简要概述每个主要版本可能对法医分析师有所帮助，使他们了解设备可能支持的功能。一般来说，功能是相互构建的，因此在Android
    1.5中可用的功能在Android 2.3.3中可能得到改进并提供。
- en: Android 1.5
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Android 1.5
- en: Android 1.5, released April 2009, highlighted the features and updates listed
    in [Table 3.3](#T0020) ([Android 1.5, n.d.](#BIB4)).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Android 1.5于2009年4月发布，其特点和更新内容在[表3.3](#T0020)中列出（[Android 1.5, n.d.](#BIB4)）。
- en: Table 3.3 Android 1.5 Features and Highlights
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.3 Android 1.5功能和亮点
- en: '![Image](img/T100032tabT0020.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/T100032tabT0020.jpg)'
- en: Android 1.6
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Android 1.6
- en: Android 1.6, released September 2009, highlighted the features and updates listed
    in [Table 3.4](#T0025) ([Android 1.6, n.d.](#BIB5)).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Android 1.6于2009年9月发布，其特点和更新内容在[表3.4](#T0025)中列出（[Android 1.6, n.d.](#BIB5)）。
- en: Table 3.4 Android 1.6 Features and Highlights
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.4 Android 1.6功能和亮点
- en: '![Image](img/T100032tabT0025.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/T100032tabT0025.jpg)'
- en: Androids 2.0 and 2.1
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Androids 2.0和2.1
- en: Android 2.0 and 2.1, released October 2009 and January 2010, respectively, highlighted
    the features and updates listed in [Table 3.5](#T0030) ([Android 2.1, n.d.](#BIB6)).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Android 2.0和2.1分别于2009年10月和2010年1月发布，其特点和更新内容在[表3.5](#T0030)中列出（[Android 2.1,
    n.d.](#BIB6)）。
- en: Table 3.5 Android 2.0/2.1 Features and Highlights
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.5 Android 2.0/2.1功能和亮点
- en: '![Image](img/T100032tabT0030.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/T100032tabT0030.jpg)'
- en: Android 2.2
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Android 2.2
- en: Android 2.2, released May 2010, highlighted the features and updates found in
    [Table 3.6](#T0035).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Android 2.2于2010年5月发布，其特点和更新内容在[表3.6](#T0035)中列出。
- en: Table 3.6 Android 2.2 Features and Highlights
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.6 Android 2.2功能和亮点
- en: '![Image](img/T100032tabT0035.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/T100032tabT0035.jpg)'
- en: Android 2.3
  id: totrans-48
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Android 2.3
- en: Android 2.3, released December 2010, highlighted the features and updates listed
    in [Table 3.7](#T0040).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Android 2.3于2010年12月发布，其特点和更新内容在[表3.7](#T0040)中列出。
- en: Table 3.7 Android 2.3 Features and Highlights
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.7 Android 2.3功能和亮点
- en: '![Image](img/T100032tabT0040.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/T100032tabT0040.jpg)'
- en: Android 2.3.3
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Android 2.3.3
- en: Android 2.3.3, released February 2011, highlighted the features and updates
    found in [Table 3.8](#T0045).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Android 2.3.3于2011年2月发布，其特点和更新内容在[表3.8](#T0045)中列出。
- en: Table 3.8 Android 2.3.3 Features and Highlights
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.8 Android 2.3.3功能和亮点
- en: '![Image](img/T100032tabT0045.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图像](img/T100032tabT0045.jpg)'
- en: Software development kit (SDK)
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件开发工具包（SDK）
- en: The Android software development kit (SDK) is the development resource needed
    to develop Android applications. It includes software libraries and APIs, reference
    materials, an emulator, and other tools. The SDK is supported in many environments
    including Linux, Windows, and OS X and can be downloaded free from [http://developer.android.com](http://developer.android.com).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Android软件开发工具包（SDK）是开发Android应用程序所需的开发资源。它包括软件库和API、参考资料、模拟器和其他工具。SDK支持许多环境，包括Linux、Windows和OS
    X，并且可以从[http://developer.android.com](http://developer.android.com)免费下载。
- en: The SDK is also a powerful forensic tool used by analysts in many situations
    to aid in the investigation of an Android device.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: SDK 还是一个强大的取证工具，分析师在许多情况下使用它来帮助调查 Android 设备。
- en: SDK Release History
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SDK 发布历史
- en: While the Android platforms mark the officially supported releases of Android,
    the SDK is updated more frequently. [Table 3.9](#T0050) provides the complete
    SDK release history that can aid in these situations ([SDK Archives, n.d.](#BIB10)).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Android 平台标志着官方支持的 Android 发布版本，但 SDK 更新更为频繁。[表 3.9](#T0050) 提供了完整的 SDK 发布历史，可以在这些情况下提供帮助（[SDK
    Archives, n.d.](#BIB10)）。
- en: Table 3.9 Archived Android Platforms Releases
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3.9 归档的 Android 平台发布
- en: '| Platform | API Level | Release Date |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 平台 | API 级别 | 发布日期 |'
- en: '| --- | --- | --- |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Android 1.6 r1 | 4 | September 2009 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| Android 1.6 r1 | 4 | 2009年9月 |'
- en: '| Android 1.5 r3 | 3 | July 2009 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| Android 1.5 r3 | 3 | 2009年7月 |'
- en: '| Android 1.1 r1 | 2 | February 2009 |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| Android 1.1 r1 | 2 | 2009年2月 |'
- en: '| Android 1.0 r2 | 1 | November 2008 |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| Android 1.0 r2 | 1 | 2008年11月 |'
- en: SDK Install
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 SDK
- en: Since the SDK is critical in the investigation of an Android device, examiners
    should have a working installation. The following sections provide step-by-step
    directions for installing the SDK on the supported platforms.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 SDK 在调查 Android 设备时至关重要，检查员应该有一个正常工作的安装环境。以下部分提供了在支持平台上安装 SDK 的分步指南。
- en: Linux SDK Install
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Linux SDK 安装
- en: 'These steps are based on the Ubuntu VM used to download and compile the Android
    Open Source Project (AOSP) from [Chapter 1](CHP001.html) which already includes
    most of the prerequisites including the Java development kit. From a terminal
    window, install the needed 32-bit libraries:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤基于在第 [1](CHP001.html) 章中用于下载和编译 Android 开源项目 (AOSP) 的 Ubuntu VM，该 VM 已经包括大多数先决条件，包括
    Java 开发工具包。从终端窗口安装所需的 32 位库：
- en: Note
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 32-Bit libraries
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 32位库
- en: Since the Ubuntu VM built in [Chapter 1](CHP001.html) used the 64-bit version
    of Ubuntu, we must install the 32-bit libraries to install the SDK. If, however,
    you are using a 32-bit Linux workstation, you need not complete this step. While
    the 32-bit workstation can run the SDK, it cannot build the AOSP after version
    2.2.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在第 [1](CHP001.html) 章中构建的 Ubuntu VM 使用了 Ubuntu 的 64 位版本，因此我们必须安装 32 位库来安装
    SDK。但是，如果你使用的是 32 位 Linux 工作站，则无需完成此步骤。虽然 32 位工作站可以运行 SDK，但它无法构建版本 2.2 之后的 AOSP。
- en: '![image](img/F100032u03-01-9781597496513.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-01-9781597496513.jpg)'
- en: Next, start Firefox and navigate to [http://developer.android.com/sdk](http://developer.android.com/sdk)
    and download the Linux i386 platform (android-sdk_r08-linux_86.tgz, as of January
    2011). The default action will open the archive in the archive manager as shown
    in [Fig. 3.3](#F0020).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，启动 Firefox 并导航至[http://developer.android.com/sdk](http://developer.android.com/sdk)，下载
    Linux i386 平台版本（截至2011年1月为 android-sdk_r08-linux_86.tgz）。默认操作将在归档管理器中打开归档，如图 [3.3](#F0020)
    所示。
- en: '![image](img/F100032f03-03-9781597496513.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-03-9781597496513.jpg)'
- en: FIGURE 3.3 Download Android SDK for Linux.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 下载 Linux 版本的 Android SDK。
- en: Then right click and extract the archive to your home directory as shown in
    [Fig. 3.4](#F0025).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 然后右键点击并将归档提取到你的主目录中，如图 [3.4](#F0025) 所示。
- en: '![image](img/F100032f03-04-9781597496513.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-04-9781597496513.jpg)'
- en: FIGURE 3.4 Extract Android SDK for Linux.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 为 Linux 提取 Android SDK。
- en: 'Next, from the terminal window:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在终端窗口中：
- en: '![image](img/F100032u03-02-9781597496513.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-02-9781597496513.jpg)'
- en: This will run the Android SDK and Android Virtual Device (AVD) manager, which
    will allow you to download and manage the additional necessary components as shown
    in [Fig. 3.5](#F0030).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这将运行 Android SDK 和 Android 虚拟设备 (AVD) 管理器，允许你下载和管理如图 [3.5](#F0030) 所示的额外必要组件。
- en: '![image](img/F100032f03-05-9781597496513.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-05-9781597496513.jpg)'
- en: FIGURE 3.5 Android SDK and AVD manager in Linux.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 Linux 中的 Android SDK 和 AVD 管理器。
- en: To fully leverage the Android SDK, additional components are required. Minimally,
    we want to install the platform’s specific SDK tools and at least one SDK platform
    (in this case, Android 2.3) so that we can run the emulator. To complete the installation,
    select the Available packages from the left navigation pane and then the two additional
    packages as shown in [Fig. 3.6](#F0035).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了充分利用 Android SDK，需要安装额外的组件。至少，我们希望安装特定平台的 SDK 工具和至少一个 SDK 平台（在本例中为 Android
    2.3），这样我们就可以运行模拟器。要完成安装，请从左侧导航窗格中选择可用包，然后选择如图 [3.6](#F0035) 所示的两个附加包。
- en: '![image](img/F100032f03-06-9781597496513.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-06-9781597496513.jpg)'
- en: FIGURE 3.6 Select additional Android SDK packages.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 选择附加的 Android SDK 包。
- en: And then choose Install Selected. You will be prompted to approve the license
    for all packages as shown in [Fig. 3.7](#F0040).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 然后选择安装选定内容。你将被提示批准所有软件包的许可，如图[3.7](#F0040)所示。
- en: '![image](img/F100032f03-07-9781597496513.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-07-9781597496513.jpg)'
- en: FIGURE 3.7 Accept and install Android SDK packages.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.7 接受并安装Android SDK软件包。
- en: Select Accept All (provided you agree) and then install. The Android SDK and
    AVD manager will then download and install the components.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 选择接受所有（如果你同意）然后安装。Android SDK和AVD管理器将下载并安装组件。
- en: 'Optionally, you may want to add the binary directories to your operating system
    (OS) execution path so you do not have to specify the full path to the programs
    each time. In Linux, do the following:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，你可能想要将二进制目录添加到你的操作系统（OS）执行路径中，这样每次就无需指定程序的完整路径。在Linux中，执行以下操作：
- en: '![image](img/F100032u03-03-9781597496513.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-03-9781597496513.jpg)'
- en: Save, exit, and then re-open (Ctrl-O) a new shell.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 保存，退出，然后重新打开（Ctrl-O）一个新的shell。
- en: 'One final step you must take in Ubuntu is to create USB profiles for each Android
    device manufacturer in the system’s configuration, specifically the udev rules.
    From a terminal session as root, edit/create the udev rule:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu中，你必须采取的最后一步是创建系统配置中每个Android设备制造商的USB配置文件，特别是udev规则。以root用户从终端会话中编辑/创建udev规则：
- en: '![image](img/F100032u03-04-9781597496513.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-04-9781597496513.jpg)'
- en: 'Copy the following contents (vendor IDs are supplied on [http://developer.android.com/guide/developing/device.html#VendorIds](http://developer.android.com/guide/developing/device.html%23VendorIds)):'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 复制以下内容（供应商ID可以在[http://developer.android.com/guide/developing/device.html#VendorIds](http://developer.android.com/guide/developing/device.html%23VendorIds)找到）：
- en: '![image](img/F100032u03-05-9781597496513.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-05-9781597496513.jpg)'
- en: 'And then save the file. Finally, make the file readable by all users:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 然后保存文件。最后，使文件对所有用户可读：
- en: '![image](img/F100032u03-06-9781597496513.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-06-9781597496513.jpg)'
- en: You can either restart the udev daemon or simply reboot.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择重启udev守护进程，或者直接重启。
- en: Windows SDK Install
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Windows SDK安装
- en: The latest version of the Android SDK for Windows, shown in [Fig. 3.8](#F0045),
    is now packaged as an executable installer, which will determine if you have the
    necessary Java dependencies properly installed and, if not, will download and
    install them for you. However, the installer will only detect the 32-bit install
    of the JDK and will not automatically install the JDK on a Windows 7 64-bit install.
    If you are running a 32-bit version of Windows (such as Windows XP), then the
    installer may be a good option and you can simply download the package from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)
    and run the installer.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Windows的最新版Android SDK，如图[3.8](#F0045)所示，现在被打包成一个可执行的安装程序，该程序将检测你是否已经正确安装了必要的Java依赖项，如果没有，它将为你下载并安装它们。然而，安装程序只检测32位JDK的安装，并不会在Windows
    7 64位安装上自动安装JDK。如果你运行的是32位版本的Windows（例如Windows XP），那么安装程序可能是一个好的选择，你可以直接从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载安装包并运行安装程序。
- en: '![image](img/F100032f03-08-9781597496513.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-08-9781597496513.jpg)'
- en: FIGURE 3.8 Android SDK installer for Windows.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.8 Windows的Android SDK安装程序。
- en: However, many analysts and engineers have moved to 64-bit OSs. To install the
    Android SDK on Windows, first install the Java SE SDK by downloading it at [http://java.sun.com/javase/downloads/](http://java.sun.com/javase/downloads/).
    Make sure you install the full SDK.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，许多分析师和工程师已经转向64位操作系统。要在Windows上安装Android SDK，首先通过下载[http://java.sun.com/javase/downloads/](http://java.sun.com/javase/downloads/)来安装Java
    SE SDK。确保你安装了完整的SDK。
- en: After the SDK is installed, download the zipped version of the Window’s Android
    SDK at [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)
    and extract it to your hard drive. For our example, we will extract directly to
    C:\ that will then create the folder C:\android-sdk-windows.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完SDK后，在[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载Windows版Android
    SDK的压缩版本，并将其解压到你的硬盘上。在我们的示例中，我们将直接解压到C:\，这将创建文件夹C:\android-sdk-windows。
- en: Open that directory and double click SDK Manager.exe to begin the update process.
    Be sure that you select at least the Android SDK Platform-tools, as in [Fig. 3.9](#F0050),
    and one release platform (2.3 in this example).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 打开该目录，双击SDK Manager.exe开始更新过程。确保你至少选择Android SDK Platform-tools，如图[3.9](#F0050)所示，以及一个发布平台（在此示例中为2.3）。
- en: '![image](img/F100032f03-09-9781597496513.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-09-9781597496513.jpg)'
- en: FIGURE 3.9 Android SDK manager for Windows.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9 Windows系统的Android SDK管理器。
- en: When working with Android devices in Windows, you need to specify USB drivers.
    The Android SDK recently updated how the USB drivers are installed. First, make
    sure you are running the SDK Manager and select Available packages. Expand Third
    party Add-ons → Google Inc. add-ons and finally choose Google Usb Driver package
    as shown in [Fig. 3.10](#F0055).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows中使用安卓设备时，你需要指定USB驱动程序。Android SDK最近更新了USB驱动程序的安装方式。首先，确保你正在运行SDK管理器并选择可用包。展开第三方插件
    → Google Inc.插件，最后选择如图3.10所示的Google USB驱动程序包。
- en: '![image](img/F100032f03-10-9781597496513.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-10-9781597496513.jpg)'
- en: FIGURE 3.10 Google USB driver package for Windows.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10 Windows系统的Google USB驱动程序包。
- en: Then, accept the license and install as shown in [Fig. 3.11](#F0060).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，接受许可协议并按照[图3.11](#F0060)所示进行安装。
- en: '![image](img/F100032f03-11-9781597496513.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-11-9781597496513.jpg)'
- en: FIGURE 3.11 Accept and install license.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11 接受并安装许可协议。
- en: After the USB drivers are installed, you should have all the necessary components.
    However, to simplify running tools from the Android SDK, you should update your
    workstation’s environment variables, specifically the PATH to executable files.
    To do this, go to your Control Panel and open the System application. You should
    then select the tab where you can update the Environment variable, whose location
    will vary depending on your exact Windows version, shown in [Fig. 3.12](#F0065).
    Finally, locate the Path system variable, select Edit, and append the full path
    to your Android SDK platform-tools directory, which in our example would be ;C:\android-sdk-windows\platform-tools.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完USB驱动后，你应该拥有所有必要的组件。然而，为了简化从Android SDK运行工具，你应该更新你的工作站的环境变量，特别是可执行文件的PATH。为此，请进入你的控制面板并打开系统应用程序。然后选择可以更新环境变量的标签，其位置会根据你的Windows版本有所不同，如图3.12所示。最后，找到Path系统变量，选择编辑，并添加到你的Android
    SDK platform-tools目录的完整路径，在我们的示例中是`;C:\android-sdk-windows\platform-tools`。
- en: '![image](img/F100032f03-12-9781597496513.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-12-9781597496513.jpg)'
- en: FIGURE 3.12 Update PATH environment variable (Windows 7 64 bit).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.12 更新PATH环境变量（Windows 7 64位）。
- en: The “;” is important, as it is the delimiter between path locations. Once you
    complete this update, make sure you exit and wait for command prompts indicating
    that the new setting has taken effect.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: “;”很重要，因为它是路径位置的分隔符。完成此更新后，确保退出并等待命令提示符指示新设置已生效。
- en: OS X SDK
  id: totrans-123
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: OS X SDK
- en: To install the Android SDK on OS X, first download the archive from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html),
    from which OS X will then automatically extract.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在OS X上安装Android SDK，首先从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)下载存档文件，OS
    X会自动提取。
- en: Navigate to the tools subdirectory as shown in [Fig. 3.13](#F0070), and then
    double click Android to run the Android SDK and AVD manager as shown in [Fig.
    3.14](#F0075).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 导航至[图3.13](#F0070)所示的工具子目录，然后双击Android运行Android SDK和AVD管理器，如图3.14所示。
- en: '![image](img/F100032f03-13-9781597496513.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-13-9781597496513.jpg)'
- en: FIGURE 3.13 Extracted Android SDK for OS X.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.13 OS X的提取Android SDK。
- en: '![image](img/F100032f03-14-9781597496513.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-14-9781597496513.jpg)'
- en: FIGURE 3.14 Open Android on OS X.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14 在OS X上打开Android。
- en: When the Manager runs, select Available packages, expand Android Repository
    and then select the Android SDK platform-tools and at least one Android platform
    as shown in [Fig. 3.15](#F0080).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 当管理器运行时，选择可用包，展开安卓仓库，然后选择Android SDK platform-tools以及至少一个安卓平台，如图3.15所示。
- en: '![image](img/F100032f03-15-9781597496513.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-15-9781597496513.jpg)'
- en: FIGURE 3.15 Install Android SDK components on OS X.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15 在OS X上安装Android SDK组件。
- en: 'Then accept the licenses and complete the install. Finally, to simplify running
    tools from the Android SDK, you should update your executable PATH. On OS X 10.6,
    run Terminal (Applications → Utilities) and do the following:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 接受许可协议并完成安装。最后，为了简化从Android SDK运行工具，你应该更新你的可执行文件PATH。在OS X 10.6上，运行终端（应用程序 →
    实用工具）并执行以下操作：
- en: '![image](img/F100032u03-07-9781597496513.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-07-9781597496513.jpg)'
- en: 'Make sure you fully exit the Terminal app and then restart. From the terminal,
    type:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 确保完全退出终端应用程序然后重新启动。在终端中，输入：
- en: '![image](img/F100032u03-08-9781597496513.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-08-9781597496513.jpg)'
- en: This should return your executable path with the platform-tools appended.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会返回你的可执行路径，并附加了platform-tools。
- en: Android Virtual Devices (Emulator)
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安卓虚拟设备（模拟器）
- en: Once you have the Android SDK installed on your workstation and have at least
    one release platform downloaded, you are ready to create an AVD, a virtual mobile
    device, or emulator, which runs on your computer. The emulator is especially helpful
    for developers for creating custom applications. However, there is great value
    for the forensic analyst and security engineer because you can profile how applications
    execute on a device. This could be important to validate your findings in an investigation,
    or to test how a forensic tool affects an Android device.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的工作站上安装了Android SDK并且至少下载了一个发布平台，你就可以创建一个AVD，即虚拟移动设备或模拟器，它在你的电脑上运行。模拟器特别有助于开发者为创建定制应用程序。然而，对于取证分析师和安全工程师来说也具有很高的价值，因为你可以在设备上分析应用程序的执行情况。这在对调查结果进行验证或测试取证工具对Android设备的影响时可能很重要。
- en: The emulator takes considerable resources, so an ideal workstation would have
    a newer sufficient CPU and RAM. A bit of patience from the examiner may also be
    required. To create an AVD, first run the Android SDK and AVD manager application
    as seen in [Fig. 3.16](#F0085). If you updated your OS’s path to include the tools
    directory in the SDK, you should be able to run Android from a shell, terminal,
    or command prompt.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟器需要相当多的资源，因此理想的工作站应该配备较新的CPU和足够的RAM。检查员可能还需要一些耐心。要创建AVD，首先运行Android SDK和AVD管理应用程序，如图[图3.16](#F0085)所示。如果你更新了操作系统的路径，使其包含SDK中的工具目录，你应该可以从shell、终端或命令提示符运行Android。
- en: '![image](img/F100032f03-16-9781597496513.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-16-9781597496513.jpg)'
- en: FIGURE 3.16 Start Android SDK and AVD manager.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.16 启动Android SDK和AVD管理器。
- en: In the left pane, select Virtual devices and then select New, as in [Fig. 3.17](#F0090).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧窗格中，选择虚拟设备，然后选择新建，如图[图3.17](#F0090)所示。
- en: Make sure you populate the following fields
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 确保填写以下字段
- en: '• Name: Provide a name for the virtual device, for example, af23 (Android Forensics
    2.3).'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: • 名称：为虚拟设备提供一个名称，例如，af23（Android Forensics 2.3）。
- en: '• Target: Select the target platform, in this case Android 2.3—API level 9.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: • 目标：选择目标平台，在本例中为Android 2.3—API级别9。
- en: '• [optional] SD card: Optionally create an SD card for the virtual device.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: • [可选] SD卡：可选地为虚拟设备创建一个SD卡。
- en: '![image](img/F100032f03-17-9781597496513.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-17-9781597496513.jpg)'
- en: FIGURE 3.17 Creating a new AVD.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.17 创建新的AVD。
- en: You can set additional properties. However, for now we will create the most
    basic AVD. Also, if you encounter an Android device running on an older platform,
    you can create virtual devices running the older version by simply downloading
    the Android platform using the Android SDK and AVD manager. When you click Create
    AVD, the device will be created and you will receive a confirmation screen similar
    to that shown in [Fig. 3.18](#F0095).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以设置其他属性。然而，现在我们将创建最基本的AVD。另外，如果你遇到运行在较旧平台上的Android设备，你可以通过简单地使用Android SDK和AVD管理器下载Android平台来创建运行较旧版本的虚拟设备。当你点击创建AVD时，设备将被创建，你会看到一个类似于[图3.18](#F0095)所示的确认屏幕。
- en: '![image](img/F100032f03-18-9781597496513.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-18-9781597496513.jpg)'
- en: FIGURE 3.18 AVD-created confirmation.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.18 AVD创建确认。
- en: Ensure that the new AVD is highlighted and then click Start, at which point
    you will be prompted for launch options as shown in [Fig. 3.19](#F0100).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 确保新的AVD被选中，然后点击开始，此时你会看到如图[图3.19](#F0100)所示的启动选项提示。
- en: '![image](img/F100032f03-19-9781597496513.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-19-9781597496513.jpg)'
- en: FIGURE 3.19 AVD launch options.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.19 AVD启动选项。
- en: Select any options you wish and click Launch. At this point, the AVD will begin
    the boot process, which could take a few minutes or longer. During that time,
    you will see Android starting up. This is illustrated in [Fig. 3.20](#F0105).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 选择你希望启动的任何选项并点击启动。此时，AVD将开始启动过程，可能需要几分钟或更长时间。在这段时间里，你会看到Android正在启动。这如图[图3.20](#F0105)所示。
- en: '![image](img/F100032f03-20-9781597496513.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-20-9781597496513.jpg)'
- en: FIGURE 3.20 AVD launching.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.20 AVD启动中。
- en: Finally, you will be presented with the fully functioning AVD as shown in [Fig.
    3.21](#F0110).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你会看到一个完全功能的AVD，如图[图3.21](#F0110)所示。
- en: '![image](img/F100032f03-21-9781597496513.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-21-9781597496513.jpg)'
- en: FIGURE 3.21 Running AVD.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.21 运行的AVD。
- en: The AVD is very powerful and fully functional. For example, you can easily jump
    online, as demonstrated in [Fig. 3.22](#F0115), and surf the web site. You can
    configure e-mail accounts, send test SMS messages to other AVD and of course,
    if you are a developer, deploy and test your application.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: AVD非常强大且功能齐全。例如，你可以轻松地上网，如图[3.22](#F0115)所示，浏览网站。你可以配置电子邮件账户，向其他AVD发送测试短信，如果你是开发者，当然还可以部署和测试你的应用程序。
- en: '![image](img/F100032f03-22-9781597496513.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-22-9781597496513.jpg)'
- en: FIGURE 3.22 AVD running browser.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.22 运行浏览器的AVD。
- en: When an AVD is created and then launched, the data created are valuable for
    forensic and security research. The files are created in your home directory,
    which varies by platform, in a folder called .android (note the dot prefix in
    the filename). [Table 3.10](#T0055) provides specific OS paths.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 创建并启动AVD后，生成数据对于取证和安全研究非常有价值。这些文件在你的主目录中创建，根据平台不同而有所变化，在一个名为.android（注意文件名前的点前缀）的文件夹中。[表3.10](#T0055)提供了特定的操作系统路径。
- en: Table 3.10 AVD Storage Directory
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 表3.10 AVD存储目录
- en: '| Workstation Operating System | AVD Storage Directory | Example |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 工作站操作系统 | AVD存储目录 | 示例 |'
- en: '| --- | --- | --- |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Ubuntu Linux | /home/<username>/.android | /home/ahoog/.android |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| Ubuntu Linux | /home/<username>/.android | /home/ahoog/.android |'
- en: '| Mac OS X | /Users/<username>/.android | /Users/ahoog/.android |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| Mac OS X | /Users/<username>/.android | /Users/ahoog/.android |'
- en: '| Windows 7 | C:\Users\<username>\.android | C:\Users\ahoog\.android |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| Windows 7 | C:\Users\<username>\.android | C:\Users\ahoog\.android |'
- en: Inside AVD’s .android directory you will find configuration and data files needed
    to run the AVD.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在AVD的.android目录中，你可以找到运行AVD所需的配置和数据文件。
- en: '![image](img/F100032u03-09-9781597496513.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-09-9781597496513.jpg)'
- en: Files of particular forensic and security interest include the following
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 特别值得注意的是以下具有取证和安全意义的文件
- en: '• cache.img: disk image of /cache partition'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: • cache.img：/cache分区的磁盘映像
- en: '• sdcard.img: disk image of SD card (if created during AVD setup)'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: • sdcard.img：SD卡的磁盘映像（如果在AVD设置过程中创建）
- en: '• userdata-qemu.img: disk image of /data partition'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: • userdata-qemu.img：/data分区的磁盘映像
- en: The cache.img and userdata-qemu.img are YAFFS2 file systems that are not supported
    by current forensic software and will be covered in [Chapter 4](CHP004.html).
    However, standard forensic tools will work quite well on sdcard.img, which is
    a FAT32 file system.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: cache.img和userdata-qemu.img是YAFFS2文件系统，目前取证软件不支持，我们将在[第4章](CHP004.html)中介绍。但是，标准的取证工具在sdcard.img上工作得很好，因为它是FAT32文件系统。
- en: '![image](img/F100032u03-10-9781597496513.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-10-9781597496513.jpg)'
- en: Forensic analysts and security engineers can learn a great deal about Android
    and how it operates by leveraging the emulator and examining the network, file
    system, and data artifacts.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 取证分析师和安全工程师可以通过利用模拟器并检查网络、文件系统和数据痕迹来深入了解Android及其运行方式。
- en: Android OS Architecture
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安卓操作系统架构
- en: It is important to understand the high-level architecture of Android, especially
    for security procedures and moving beyond logical forensic analysis.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 了解Android的高级架构非常重要，特别是对于安全程序和超越逻辑取证分析。
- en: Android is based on the Linux 2.6 kernel that provides the fundamental software
    needed to boot and manage both the hardware and Android applications. While the
    functionality that the kernel provides is quite extensive, we will focus on core
    areas highlighted in [Fig. 3.23](#F0120).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: Android基于Linux 2.6内核，提供了启动和管理硬件及Android应用程序所需的基本软件。虽然内核提供的功能非常广泛，但我们将关注[图3.23](#F0120)中强调的核心区域。
- en: '![image](img/F100032f03-23-9781597496513.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-23-9781597496513.jpg)'
- en: FIGURE 3.23 Android architecture.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.23 安卓架构。
- en: As illustrated in [Fig. 3.23](#F0120), low-level functions include power management,
    [Wi-Fi.com](http://Wi-Fi.com), display, audio drivers, and more. Perhaps most
    important from a forensics perspective is the flash memory driver, which will
    be explored in detail in [Chapter 4](CHP004.html).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图3.23](#F0120)所示，低级功能包括电源管理、[Wi-Fi.com](http://Wi-Fi.com)、显示、音频驱动等。从取证的角度来看，最重要的可能是闪存驱动，我们将在[第4章](CHP004.html)中详细探讨。
- en: After the kernel, a set of libraries are available, which provide core functionality
    needed by developers and device owners alike. These include the WebKit library
    for rendering HTML in both the bundled browser and third-party apps. Other libraries
    handle fonts, displays, various media, and secure communications using Secure
    Socket Layers (SSLs). Finally, the SQLite library provides a method for structured
    data storage on Android and is an area forensic analysts and security engineers
    will focus on.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在内核之后，一套库可供使用，这些库为开发者和设备所有者提供了所需的核心功能。这些包括用于在捆绑的浏览器和第三方应用中渲染HTML的WebKit库。其他库处理字体、显示、各种媒体，以及使用安全套接字层（SSLs）的安全通信。最后，SQLite库为Android上的结构化数据存储提供了一种方法，这也是法医分析师和安全工程师关注的重点。
- en: The core libraries are then bundled with a custom Java virtual machine (VM)
    to provide the Android runtime environment, which is where applications run.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 核心库随后与自定义的Java虚拟机（VM）捆绑在一起，以提供Android运行时环境，应用程序就在这里运行。
- en: Finally, the SDK provides access to these resources via APIs and an application
    framework. The framework is the primary layer that third-party developers interact
    with and it provides them abstract access to key resources needed for their application.
    As we explore logical forensic techniques, an important aspect of the application
    framework—content providers—will be explained in more detail because they provide
    the primary mechanism by which we can extract data from an Android device.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，SDK通过API和一个应用程序框架提供对这些资源的访问。该框架是第三方开发者交互的主要层，它为他们提供了对应用程序所需关键资源的抽象访问。在我们探索逻辑取证技术时，应用程序框架的一个重要方面——内容提供者——将详细解释，因为它们是我们从Android设备提取数据的主要机制。
- en: Dalvik VM
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Dalvik VM
- en: The Dalvik Virtual Machine (Dalvik VM) was developed by Google to create an
    efficient and secure mobile application environment.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Dalvik虚拟机（Dalvik VM）是由谷歌开发的，旨在创建一个高效且安全的移动应用环境。
- en: To achieve the desired security, each application is run on its own Dalvik VM.
    As such, the Dalvik VM was written so that many VMs could run at once on an Android
    device. The Dalvik VM relies heavily on the Linux OS to provide low-level functions
    such as access to core libraries and hardware, threat and security management,
    memory management, and more.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现所需的安全性，每个应用程序都在其自己的Dalvik VM上运行。因此，Dalvik VM被编写成可以在Android设备上同时运行多个VM。Dalvik
    VM在很大程度上依赖于Linux操作系统，提供诸如访问核心库和硬件、威胁和安全管理、内存管理等低级功能。
- en: To achieve efficiency, applications that run in a Dalvik VM have a special format
    called a Dalvik Executable (.dex) file. Developers write and compile their programs
    with Sun’s Java Development Kit and the resulting byte code is then transformed
    into a .dex file which provides efficient storage and is optimized for execution
    in the Dalvik VM. An interesting project developed by JesusFreke, an accomplished
    and well-known Android hacker, is called smali/baksmali. This project allows a
    user to decompile a .dex file to determine what an application does ([smali, n.d.](#BIB11)).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高效率，在Dalvik VM中运行的应用程序有一种特殊的格式，称为Dalvik可执行文件（.dex）。开发者使用Sun的Java开发工具包编写和编译他们的程序，然后生成的字节码被转换成.dex文件，该文件提供了高效的存储，并针对在Dalvik
    VM中的执行进行了优化。由知名Android黑客JesusFreke开发的一个有趣的项目叫做smali/baksmali。这个项目允许用户反编译.dex文件，以确定应用程序的功能（[smali,
    n.d.](#BIB11)）。
- en: Dalvik is a unique aspect of Android and a critical component in the forensic
    and security analysis of a device.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Dalvik是Android的一个独特方面，也是设备法医和安全分析的一个关键组件。
- en: Native Code Development
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本地代码开发
- en: While most Android applications are written in Java using the SDK, Google provides
    a lower level development platform with their native development kit (NDK). The
    NDK was first released in June 2009 and has gone through five revisions, with
    the latest release in November 2010.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管大多数Android应用程序是使用SDK用Java编写的，但谷歌提供了一个更底层的开发平台，即他们的本地开发工具包（NDK）。NDK首次发布于2009年6月，并经历了五次修订，最新版本在2010年11月发布。
- en: The NDK allows developers to write code in C/C++ and compile it directly for
    the CPU. While this adds complexity to the development process, some developers
    can benefit from this approach by reusing an existing code base in C/C++ or by
    implementing certain functions that can be optimized outside the Dalvik VM. The
    NDK does not allow developers to create full applications that run outside of
    the Dalvik VM; instead the C/C++ components are packaged inside the application’s
    .apk file and are called by the application within the VM.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: NDK允许开发者在C/C++中编写代码，并直接为CPU编译。虽然这增加了开发过程的复杂性，但一些开发者可以通过重用现有的C/C++代码库或实现可以在Dalvik
    VM之外优化的某些功能来从中受益。NDK不允许开发者创建完全在Dalvik VM之外运行的应用程序；相反，C/C++组件被打包在应用程序的.apk文件中，并在VM内由应用程序调用。
- en: At this time, the NDK supports the ARMv5TE and ARMv7-A CPUs, and in the future
    will support Intel’s x86 CPU architecture. When a developer writes code in one
    platform (e.g., Mac OS X) but compiles it for another CPU, the technique is referred
    to as cross-compiling an application. The NDK greatly simplifies this process
    and provides a set of libraries the developer can use.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，NDK支持ARMv5TE和ARMv7-A CPU，将来还会支持英特尔的x86 CPU架构。当开发者在一种平台（例如，Mac OS X）上编写代码，但为另一种CPU编译时，这种技术被称为交叉编译应用程序。NDK极大地简化了这一过程，并提供了一套开发者可以使用的库。
- en: From a forensics and security viewpoint, cross-compiling is an important component
    for research and development of new techniques and exploits. While most forensic
    analysts and security engineers do not need to compile code, understanding how
    the process works, and what role it plays in the process, is important. For example,
    the initial Android 1.5 root exploit targeted a Linux kernel bug (CVE-2009-2692)
    to gain privileges. The initial code was distributed as source code and required
    cross-compiling. One significant advantage to this approach is that an examiner
    can describe in exact detail how the device was exploited and, if necessary, provide
    the source code.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 从取证和安全的角度来看，交叉编译是研究和开发新技术和漏洞利用的重要部分。尽管大多数取证分析师和安全工程师不需要编译代码，但了解这个过程如何工作以及它在其中扮演的角色是很重要的。例如，最初的Android
    1.5获取根权限的漏洞利用了Linux内核的一个错误（CVE-2009-2692）来获取权限。最初分发的代码是源代码，需要交叉编译。这种方法的一个显著优势是，检查员可以详细描述设备是如何被利用的，并在必要时提供源代码。
- en: As Android matures, expect to see additional developments in the NDK and natively
    complied code.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Android的成熟，预计会在NDK和本地编译代码方面看到更多的发展。
- en: Android security model
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android安全模型
- en: The Android platform implements security through a number of controls designed
    to protect the user.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: Android平台通过一系列旨在保护用户的控制措施来实现安全性。
- en: When an application is first installed, Android checks the .apk file to ensure
    it has a valid digital signature to identify the developer. Unlike SSL, the digital
    certification does not need to be signed by a Certificate Authority. However,
    the developer must keep the key safe; otherwise someone could sign a malicious
    application and distribute it as that developer. For example, if a financial institution’s
    digital signature was compromised, a malicious developer could publish an update
    to the banking application, which steals critical data.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个应用程序首次安装时，Android会检查.apk文件，以确保它有一个有效的数字签名来识别开发者。与SSL不同，数字证书不需要由证书授权中心签署。然而，开发者必须妥善保管密钥；否则，有人可能会签署一个恶意应用程序并以该开发者的身份分发。例如，如果一个金融机构的数字签名被泄露，一个恶意的开发者可以发布一个银行应用程序的更新，窃取关键数据。
- en: After the .apk file is validated, Android checks the special file created by
    the developer that specifies, among other items, what access an application needs
    to the system. For example, an application may request access to the user’s contacts,
    SMS messages, and the network/Internet. If this application adds functionality
    to the SMS system, these permissions seem reasonable. If, however, the application
    simply changes your background images, then a user should question the permission
    and can choose not to install the application. In practice, users quickly allow
    all permissions and application requests, and thus may allow a malicious application
    to install.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在验证了.apk文件之后，Android会检查开发者创建的特殊文件，该文件指定了应用程序需要系统权限的各个方面，例如，应用程序可能请求访问用户的联系人、短信和网络/互联网。如果这个应用程序为短信系统增加了功能，这些权限似乎是合理的。然而，如果应用程序只是更改你的背景图片，那么用户应该质疑这个权限，并可以选择不安装该应用程序。实际上，用户通常会快速同意所有权限和应用程序的请求，从而可能允许恶意应用程序安装。
- en: After an application has been verified and the user granted the requested permissions,
    the application can now install on the system. A key part of the Android security
    model is that each application is assigned a unique Linux user and group ID and
    runs in its own process and Dalvik VM. During the installation, the system creates
    a specific directory on the device to store the application’s data and only allows
    that application to access the data leveraging the Linux user ID and group ID
    permissions. In addition, the application’s Dalvik VM is run in its own process
    as the specific user ID. These key mechanisms enforce data security at the OS
    level as applications do not share memory, permissions, or disk storage. Applications
    can only access the memory and data within their Dalvik VM.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序经过验证并且用户授予了请求的权限之后，应用程序现在可以在系统上安装。Android安全模型的一个关键部分是，每个应用程序都会分配一个唯一的Linux用户和组ID，并在自己的进程和Dalvik
    VM中运行。在安装过程中，系统会在设备上创建一个特定的目录来存储应用程序数据，并且只允许该应用程序通过Linux用户ID和组ID权限访问这些数据。此外，应用程序的Dalvik
    VM也会以特定的用户ID在其自己的进程中运行。这些关键机制在操作系统级别强制执行数据安全，因为应用程序不共享内存、权限或磁盘存储。应用程序只能访问其Dalvik
    VM内的内存和数据。
- en: Of course, there are a few exceptions to this process. First, a developer can
    sign more than one application with the same digital certification and specify
    that it can share the same user ID, process, memory, and data storage as one of
    their other applications. This situation is exceptional and is most commonly used
    when a developer has both a free and a paid version. If a user upgrades to the
    paid version, they can leverage the data accumulated while using the free version
    and thus no data are lost.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这个过程有几个例外。首先，开发者可以使用相同的数字证书为多个应用程序签名，并指定它可以与他们的其他应用程序共享相同的用户ID、进程、内存和数据存储。这种情况是例外的，通常用于开发者同时拥有免费和付费版本的情况。如果用户升级到付费版本，他们可以利用使用免费版本时积累的数据，因此不会丢失任何数据。
- en: Also, most Android users have the option to allow apps to be installed from
    non-Market locations and to skip the digital signature check. This option can
    be accessed from the Applications menu in the device’s Settings and, when selected,
    displays a warning to the user as shown in [Fig. 3.24](#F0125).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，大多数Android用户可以选择允许应用程序从非市场位置安装，并跳过数字签名检查。这个选项可以从设备设置中的应用程序菜单中访问，当选择时，会向用户显示一个警告，如图[图3.24](#F0125)所示。
- en: '![image](img/F100032f03-24-9781597496513.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-24-9781597496513.jpg)（图片无需翻译，保留英文描述即可）'
- en: FIGURE 3.24 Android setting to allow apps installs from unknown sources.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.24 Android设置允许从未知来源安装应用程序。
- en: The most common situation is that users could now install apps from web sites
    by directly downloading an .apk file. The install process also skips the digital
    signature check. A recent AT&T phone (Motorola Backflip) removed this option from
    Android upsetting many users ([Android On Lockdown, n.d.](#BIB12)). However, a
    work-around using the Android SDK does exist and will be discussed in [Chapter
    6](CHP006.html).
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的情况是用户现在可以直接从网站下载.apk文件来安装应用程序，安装过程也会跳过数字签名检查。近期一款AT&T手机（摩托罗拉Backflip）从Android中移除了这一选项，令许多用户感到不满（[Android
    On Lockdown, n.d.](#BIB12)）。然而，使用Android SDK的一个变通方法确实存在，我们将在[第6章](CHP006.html)中进行讨论。
- en: As a result of the security architecture built into Android, forensic examiners
    do not have a simple way to extract core user data from a device. Barring exploits,
    the security architecture is effective in isolating and protecting data between
    applications.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Android内置的安全架构，取证检查员无法简单从设备中提取核心用户数据。除了漏洞利用之外，安全架构在隔离和保护应用程序之间的数据方面是有效的。
- en: Forensics and the SDK
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 取证与软件开发工具包（SDK）
- en: So how is the SDK important in forensics? The SDK not only provides a set of
    tools and drivers enabling the analysis of Android devices but is also useful
    for application profiling and other forensic research.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 那么SDK在取证中有多重要呢？SDK不仅提供了一套工具和驱动程序，以便分析Android设备，而且对于应用程序剖析和其他取证研究也很有用。
- en: Connecting an Android Device to a Workstation
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将Android设备连接到工作站
- en: It is important to note how an Android device actually connects to a VM. Android
    devices, to date, have a physical USB interface that allows them to connect, share
    data and resources, and typically to recharge from a computer or workstation.
    If you are only running a single OS, the USB device should be detected and accessible.
    However, additional configuration or drivers may be required. If you are running
    a VM though, you simply want the host OS to pass the connection through to the
    VM. For example, if your host OS is OS X and you are running VMWare fusion, you
    select the menus Virtual Machine → USB and then Connect the device (High Android
    Phone in this case), as shown in [Fig. 3.25](#F0130).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意Android设备实际是如何连接到虚拟机的。截至目前，Android设备有一个物理USB接口，允许它们连接、共享数据和资源，并且通常可以从计算机或工作站充电。如果你只运行一个操作系统，USB设备应该能被检测到并可以访问。然而，如果运行虚拟机，你可能需要额外的配置或驱动程序。例如，如果你的宿主操作系统是OS
    X并且你正在运行VMWare fusion，你可以选择菜单“虚拟机 → USB”，然后连接设备（在本例中是高Android手机），如[图3.25](#F0130)所示。
- en: '![image](img/F100032f03-25-9781597496513.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-25-9781597496513.jpg)'
- en: FIGURE 3.25 Connect USB device to Ubuntu VM in VMWare Fusion.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.25 在VMWare Fusion中连接USB设备到Ubuntu VM。
- en: 'Similarly, when your host OS is Linux, and you are running the VM using Oracle’s
    VirtualBox, you must first ensure that you are a member of the usbusers group.
    So, from a terminal session, execute the following:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果你的宿主操作系统是Linux，并且你正在使用Oracle的VirtualBox运行虚拟机，首先需要确保你是usbusers组的成员。因此，从终端会话中执行以下命令：
- en: '![image](img/F100032u03-11-9781597496513.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-11-9781597496513.jpg)'
- en: Next, you go into the VM’s Settings and add a USB Filter for the device, as
    shown in [Fig. 3.26](#F0135).
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，进入虚拟机的设置，为设备添加USB过滤器，如[图3.26](#F0135)所示。
- en: '![image](img/F100032f03-26-9781597496513.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-26-9781597496513.jpg)'
- en: FIGURE 3.26 Adding USB filter on Linux host running Oracle’s VirtualBox.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.26 在运行Oracle VirtualBox的Linux主机上添加USB过滤器。
- en: Finally, you can connect the USB device as shown in [Fig. 3.27](#F0140).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以像[图3.27](#F0140)所示那样连接USB设备。
- en: '![image](img/F100032f03-27-9781597496513.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-27-9781597496513.jpg)'
- en: FIGURE 3.27 Connecting USB device on Linux host running Oracle’s VirtualBox.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.27 在运行Oracle VirtualBox的Linux主机上连接USB设备。
- en: 'Finally, here are the steps if you are running the VM headless (VirtualBox
    3.2.10 as outlined in [Chapter 1](CHP001.html)). First, you need to install VBox
    Additions, which will enable shared folder, better video, USB support (if you
    downloaded/bought the PUEL edition), and other features. From the host workstation:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你以无头模式运行虚拟机（如[第1章](CHP001.html)所述的VirtualBox 3.2.10），以下是你要执行的步骤。首先，需要安装VBox附加组件，这将启用共享文件夹、更好的视频、USB支持（如果你下载/购买了PUEL版本）和其他功能。从宿主工作站开始：
- en: '![image](img/F100032u03-12-9781597496513.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-12-9781597496513.jpg)'
- en: The DVD should now be available on the Ubuntu VM. Remote desktop into the VM
    again (see [Chapter 1](CHP001.html) for necessary steps) and double click VBOXADDITIONS_3.2.0_61806
    DVD on your desktop to open the DVD. Then double click autorun.sh and select the
    Run option. You will be prompted for your password after which the install will
    proceed. [Figure 3.28](#F0145) illustrates this step.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Ubuntu虚拟机应该可以访问DVD了。再次远程桌面进入虚拟机（有关必要步骤请参阅[第1章](CHP001.html)），然后双击桌面上的VBOXADDITIONS_3.2.0_61806
    DVD以打开DVD。接着双击autorun.sh并选择运行选项。输入密码后，安装将继续进行。[图3.28](#F0145)展示了这一步骤。
- en: '![image](img/F100032f03-28-9781597496513.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-28-9781597496513.jpg)'
- en: FIGURE 3.28 Install VBox additions over on Ubuntu VM remote desktop protocol.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.28 通过Ubuntu VM远程桌面协议安装VBox附加组件。
- en: 'Now that you have VBox Additions installed, you can connect USB devices to
    your guest OS. But first, you must shutdown the VM. Then, follow these steps:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你已经安装了 VBox Additions，那么你可以将 USB 设备连接到你的客户操作系统。但首先，你必须关闭虚拟机。然后，按照以下步骤操作：
- en: '![image](img/F100032u03-13-9781597496513.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-13-9781597496513.jpg)'
- en: Using this example, the USB device should now be passed through to the VM.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此示例，USB 设备现在应该已经传递到虚拟机。
- en: USB Interfaces
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: USB 接口
- en: 'While you connect an Android device to your workstation or VM through a single
    USB port, the hardware and Android itself generally expose more than one virtual
    USB interface. For example, when you connect the HTC Incredible over USB, you
    are presented with a menu of four options:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 当你通过单个 USB 端口将 Android 设备连接到工作站或虚拟机时，硬件和 Android 本身通常会公开多个虚拟 USB 接口。例如，当你通过
    USB 连接 HTC Incredible 时，你会看到一个包含四个选项的菜单：
- en: 1. Charge only—Charge phone over USB
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 仅充电—通过 USB 为手机充电
- en: 2. HTC Sync—Sync contacts and calendar
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 2. HTC 同步—同步联系人和日历
- en: 3. Disk drive—Mount as disk drive
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 磁盘驱动器—作为磁盘驱动器挂载
- en: 4. Mobile Broadband Connect—Smart phone’s mobile networks with PC
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 4. 移动宽带连接—将智能手机的移动网络与 PC 连接
- en: The default selection, shown in [Fig. 3.29](#F0150), is the Charge only option.
    Both HTC Sync and Mobile Broadband Connect options are custom options and programs
    HTC and, at times, the wireless carrier support for the device.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 默认选择，如图 [3.29](#F0150) 所示，是仅充电选项。HTC 同步和移动宽带连接选项是 HTC 以及有时无线运营商为设备提供的自定义选项和程序。
- en: '![image](img/F100032f03-29-9781597496513.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-29-9781597496513.jpg)'
- en: FIGURE 3.29 HTC Incredible connect to PC options.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.29 HTC Incredible 连接到 PC 的选项。
- en: CD-ROM Interface
  id: totrans-243
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: CD-ROM 接口
- en: 'The disk drive option is more universally used. This option connects the Android
    device to the workstation as a disk drive. This is one key area where the device
    exposes multiple USB devices to the workstation. When you first plug HTC Incredible
    into the computer, it actually registers three separate types of drives: one CD-ROM
    and two USB mass storage devices. The following listing is taken from the Linux
    workstation’s kernel messages with the dmesg command:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘驱动器选项更通用。此选项将 Android 设备作为磁盘驱动器连接到工作站。这是设备向工作站公开多个 USB 设备的关键区域。当你首次将 HTC Incredible
    插入计算机时，实际上注册了三种不同类型的驱动器：一个 CD-ROM 和两个 USB 大容量存储设备。以下列表是从 Linux 工作站的内核消息中获取的，使用了
    dmesg 命令：
- en: '![image](img/F100032u03-14-9781597496513.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-14-9781597496513.jpg)'
- en: 'As you can see, two Direct-Access drives are found at 4:0:0:0 and 4:0:0:1,
    and a CD-ROM is found at 4:0:0:2\. The CD-ROM contains custom programs and drivers
    that HTC bundles with the device to enable the syncing and broadband connect features.
    Obviously, there is no physical CD-ROM. However, a portion of the device’s storage
    is dedicated to the CD-ROM and is formatted as an ISO9660\. The host OS can then
    mount the drive as a CD-ROM and, in Windows, would potentially even support the
    auto-run feature. Leveraging TSK’s fsstat program, we can see more details about
    the partition:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在 4:0:0:0 和 4:0:0:1 处找到了两个直接访问驱动器，以及在 4:0:0:2 处找到了一个 CD-ROM。CD-ROM 包含 HTC
    与设备捆绑在一起的自定义程序和驱动，以实现同步和宽带连接功能。显然，没有物理 CD-ROM。然而，设备的存储空间有一部分专用于 CD-ROM，并格式化为 ISO9660。宿主操作系统可以将其作为
    CD-ROM 挂载，并且在 Windows 中，甚至可能支持自动运行功能。利用 TSK 的 fsstat 程序，我们可以看到有关分区的更多详细信息：
- en: '![image](img/F100032u03-15a-9781597496513.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-15a-9781597496513.jpg)'
- en: '![image](img/F100032u03-15b-9781597496513.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-15b-9781597496513.jpg)'
- en: As you can tell from the Volume Name, the CD-ROM contains software provided
    by Verizon to use the additional features of the device.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 从卷名称可以看出，CD-ROM 包含由 Verizon 提供的软件，用于使用设备的附加功能。
- en: SD Cards (Removable and Virtual)
  id: totrans-250
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: SD 卡（可移动和虚拟）
- en: Far more important from a forensic standpoint are the SD card(s) available through
    the device. Placing user’s files, especially larger files such as multimedia,
    is a key strategy in Android. Most Android devices have a removable media slot,
    which accepts a micro-SD card. The core application data remain on the device
    (under /data/data), but the files that are likely important in an investigation
    may also exist on the SD card.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 从法医的角度来看，更重要的是通过设备可访问的 SD 卡。在 Android 中，将用户文件，尤其是如多媒体这样的大文件放置在 SD 卡上是关键策略。大多数
    Android 设备有一个可拆卸的媒体插槽，可接受 micro-SD 卡。核心应用程序数据保留在设备上（位于 /data/data 下），但在调查中可能重要的文件也可能存在于
    SD 卡上。
- en: 'In the previous section, when an Android device was connected via USB, the
    Linux workstation’s kernel messages displayed the various USB devices available.
    The two SCSI removable disks that were listed, sdb and sdc, represent the SD cards
    on an HTC Incredible. If you choose the “Mount as disk drive” option under Connect
    to PC, the following additional messages show up on the kernel messages:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，当通过USB连接Android设备时，Linux工作站的内核信息显示了可用的各种USB设备。列出的两个SCSI可移动磁盘sdb和sdc，代表HTC
    Incredible上的SD卡。如果您在“连接到电脑”下选择“作为磁盘驱动器挂载”选项，内核信息将显示以下附加消息：
- en: '![image](img/F100032u03-16-9781597496513.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-16-9781597496513.jpg)'
- en: 'You will now see additional information about the SD card. The drive sdc has
    one partition, sdc1\. And its size is 2 GB. We can see additional partition information
    by running TSK’s mmls:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您将看到有关SD卡的更多信息。驱动器sdc有一个分区sdc1，其大小为2 GB。我们可以通过运行TSK的mmls来查看附加的分区信息：
- en: '![image](img/F100032u03-17-9781597496513.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-17-9781597496513.jpg)'
- en: As you will see, the SD card is formatted with a FAT16 file system, but often
    you will find FAT32 or you might encounter multiple file systems like FAT32 and
    native Linux file system ext3 and ext4.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 您会看到，SD卡被格式化为FAT16文件系统，但通常您会遇到FAT32，或者可能会遇到像FAT32和本地Linux文件系统ext3和ext4这样的多种文件系统。
- en: 'More recently, devices also have an emulated or virtual SD card feature that
    uses the device’s NAND flash to create a nonremovable SD card. This more closely
    models the iPhone where the user data partition is located directly on the NAND
    flash and cannot be removed. In the previous example, the sdb device provides
    access to the emulated SD card. Unlike the physical SD card, sdc does not have
    a partition table and the file system simply starts immediately. To see important
    information, run TSK’s fsstat:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，设备还拥有一个模拟或虚拟的SD卡功能，该功能使用设备的NAND闪存创建一个不可拆卸的SD卡。这更接近于iPhone的模型，用户数据分区直接位于NAND闪存上，且无法移除。在上述示例中，sdb设备提供了对模拟SD卡的访问。与物理SD卡不同，sdc没有分区表，文件系统直接从开头开始。要查看重要信息，请运行TSK的fsstat：
- en: '![image](img/F100032u03-18a-9781597496513.jpg)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-18a-9781597496513.jpg)'
- en: '![image](img/F100032u03-18b-9781597496513.jpg)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-18b-9781597496513.jpg)'
- en: In this particular case, the file system is in fact FAT32 and you will notice
    that while the volume has no Label, the OEM Name is set BSD 4.4.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定情况下，文件系统实际上是FAT32，您会注意到尽管卷没有标签，但OEM名称设置为BSD 4.4。
- en: Warning
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Auto-mounting USB devices
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动挂载USB设备
- en: In the Ubuntu VM configuration section of [Chapter 1](CHP001.html), the auto-mount
    feature is disabled to prevent the OS from automatically detecting and mounting
    USB mass storage devices. Forensic analysts should take extreme precautions to
    prevent this from happening on a device being investigated. Beyond disabling auto-mount,
    devices should generally be connected through a USB write blocker.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](CHP001.html)的Ubuntu虚拟机配置部分，禁用了自动挂载功能，以防止操作系统自动检测并挂载USB存储设备。取证分析师应采取极端谨慎的措施，防止在调查中的设备发生这种情况。除了禁用自动挂载外，通常应通过USB写保护器连接设备。
- en: 'In Ubuntu, if you do not have auto-mounting of USB devices disabled (which
    you should in nearly all situations), the SD cards are automatically mounted for
    you. If the device is attached to a hardware write blocker, mounted read-only,
    or in a situation where write blocking is not needed (e.g., research and development),
    you can run the df command in Linux to see where they were mounted:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu中，如果您没有禁用USB设备的自动挂载（在几乎所有情况下都应该禁用），则SD卡会自动为您挂载。如果设备连接到硬件写保护器，以只读方式挂载，或者在不需要写保护的情况下（例如，研发情况），您可以在Linux中运行df命令来查看它们被挂载的位置：
- en: '![image](img/F100032u03-19-9781597496513.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-19-9781597496513.jpg)'
- en: The physical SD card was mounted on /media/E0FD-1813 and the emulated SD card
    on /media/C7F8-0810.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 物理SD卡被挂载在/media/E0FD-1813上，而模拟SD卡被挂载在/media/C7F8-0810上。
- en: 'On the Android device itself, the two SD cards are mounted as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android设备本身上，两个SD卡以下列方式挂载：
- en: '![image](img/F100032u03-20-9781597496513.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-20-9781597496513.jpg)'
- en: USB Debugging
  id: totrans-269
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: USB调试
- en: One final, and very important, USB interface exposes the Android Debug Bridge
    (ADB) that allows a developer, forensic analyst, or security engineer to communicate
    and control an Android device over USB. By default, an AVD (running in the emulator)
    will have USB debugging enabled. However, non-emulator devices must explicitly
    enable USB debugging. To enable, select Applications → Development from the devices
    Setting’s, as shown in [Fig. 3.30](#F0155). Finally, check USB debugging.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个重要的USB接口是Android调试桥（ADB），它允许开发人员、取证分析师或安全工程师通过USB与Android设备进行通信和控制。默认情况下，AVD（在模拟器中运行）将启用USB调试。然而，非模拟器设备必须明确启用USB调试。要启用，请从设备的设置中选择应用程序→开发，如图[3.30](#F0155)所示。最后，勾选USB调试。
- en: '![image](img/F100032f03-30-9781597496513.jpg)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-30-9781597496513.jpg)'
- en: FIGURE 3.30 Enable USB debugging.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.30 启用USB调试。
- en: Once set, the device will run the adb daemon (adbd) in the background and wait
    for a USB connection. The daemon will run under the non-privileged shell user
    account to limit the access it has to data. AVDs and physical devices that have
    root access enabled will run adbd as root providing complete access to the system.
    Additional details on this topic will be covered in [Chapter 6](CHP006.html).
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 设置后，设备将在后台运行adb守护进程（adbd）并等待USB连接。守护进程将在非特权shell用户账户下运行，以限制其对数据的访问。启用了root访问权限的AVD和物理设备将作为root运行adbd，从而提供对系统的完全访问。关于此主题的更多详细信息将在[第6章](CHP006.html)中介绍。
- en: In newer versions of Android, anytime a device with USB debugging enabled is
    connected over USB, it will display a security warning as seen in [Fig. 3.31](#F0160).
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android的新版本中，任何时候启用USB调试的设备通过USB连接，它都会显示一个安全警告，如图[3.31](#F0160)所示。
- en: '![image](img/F100032f03-31-9781597496513.jpg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032f03-31-9781597496513.jpg)'
- en: FIGURE 3.31 USB debugging warning.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.31 USB调试警告。
- en: For every current logical Android forensic tool, USB debugging must be enabled.
    While this is trivial to achieve if the device is unlocked, it is far more difficult
    if the device has a pass code. There are some techniques that can circumvent the
    pass code, discussed in [Chapter 6](CHP006.html). However, they do not work on
    every platform.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 对于当前所有的逻辑Android取证工具，必须启用USB调试。如果设备未锁定，实现这一点是微不足道的，但如果设备有密码，则要困难得多。有一些技术可以绕过密码，这在[第6章](CHP006.html)中有所讨论。然而，它们并不在所有平台上都有效。
- en: Introduction to Android Debug Bridge
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Android调试桥简介
- en: 'Throughout the rest of this book, we will leverage adb extensively, so covering
    the basics now is important. There are three primary components involved when
    utilizing adb:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的其余部分，我们将广泛使用adb，因此现在掌握基础知识很重要。在使用adb时，涉及到三个主要组件：
- en: 1. The adbd running on the Android device
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 运行在Android设备上的adbd
- en: 2. The adbd running on your workstation
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 运行在工作站上的adbd
- en: 3. The adb client program running on your workstation
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 运行在工作站上的adb客户端程序
- en: As previously covered, when you enable USB debugging on an Android device, the
    daemon will run and listen for a connection. Communication between the device’s
    adbd and your workstation’s adbd takes place over the virtual network running
    on top of the USB connection. The daemons communicate over their local host on
    ports 5555 through 5585\. When the workstation’s adbd detects a new emulator or
    device, it creates two sequential port connections. The even port communicates
    with the device’s console while the odd port is for adb connections. The local
    adb client program uses port 5037 to communicate with the local adbd.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，当你在Android设备上启用USB调试时，守护进程将会运行并监听连接。设备上的adbd与工作站上的adbd之间的通信是通过USB连接之上的虚拟网络进行的。守护进程通过本地主机的端口5555至5585进行通信。当工作站的adbd检测到新的模拟器或设备时，它会创建两个连续的端口连接。偶数端口与设备的控制台通信，而奇数端口用于adb连接。本地adb客户端程序使用端口5037与本地adbd通信。
- en: The most basic adb command you can issue is the adb devices command, which provides
    a list of connected devices.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以发出的最基本的adb命令是adb devices命令，它提供了已连接设备的列表。
- en: '![image](img/F100032u03-21-9781597496513.jpg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-21-9781597496513.jpg)'
- en: 'Another important command provides the ability to kill your local adb service.
    To achieve this, type the following:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个重要的命令提供了杀死本地adb服务的能力。为此，请输入以下内容：
- en: '![image](img/F100032u03-22-9781597496513.jpg)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-22-9781597496513.jpg)'
- en: 'As you can see, if the adbd on the workstation is not running, it will be automatically
    started. On Ubuntu, if you ever receive the following response:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，如果工作站上的adbd没有运行，它将被自动启动。在Ubuntu上，如果你收到以下响应：
- en: '![image](img/F100032u03-23-9781597496513.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-23-9781597496513.jpg)'
- en: it is likely that the connected Android device has a new vendor ID which must
    be identified (sudo lsusb -v) and added to the udev rule as discussed in the “SDK
    install” section. In Microsoft Windows, if the Android device is not recognized
    you will be alerted and you must install the proper USB drivers from Google or
    the manufacturer.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 连接的Android设备很可能有一个新的供应商ID，必须通过（sudo lsusb -v）识别并将其添加到“SDK安装”部分讨论的udev规则中。在Microsoft
    Windows中，如果Android设备未被识别，你会收到警告，并且必须从Google或制造商处安装适当的USB驱动程序。
- en: 'One powerful adb command all analysts and engineers should know is “adb shell,”
    which allows you to open a shell on the Android device and interact with the system.
    This is an important feature for anyone exploring Android. For example, start
    an AVD and follow these steps to view the application data directories on the
    device:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 所有分析师和工程师都应该知道的一个强大的adb命令是“adb shell”，它允许你打开Android设备上的shell并与系统交互。这对于任何探索Android的人来说都是一个重要的功能。例如，启动一个AVD并按照以下步骤查看设备上的应用程序数据目录：
- en: '![image](img/F100032u03-24a-9781597496513.jpg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-24a-9781597496513.jpg)'
- en: '![image](img/F100032u03-24b-9781597496513.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![image](img/F100032u03-24b-9781597496513.jpg)'
- en: 'The functionality of adb has increased with each new SDK and is a very powerful
    tool. Some of the features will be explored in detail in [Chapter 6](CHP006.html),
    including:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 随着每个新SDK的发布，adb的功能不断增强，是一个非常强大的工具。在第[六章](CHP006.html)中，将详细探讨一些功能，包括：
- en: 1. Running shell commands on the device
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 在设备上运行shell命令
- en: 2. Installing applications using command line
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 使用命令行安装应用程序
- en: 3. Forwarding ports between your workstation and the device
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 在你的工作站和设备之间转发端口
- en: 4. Copying files and folders recursively to and from the device
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 4. 递归地将文件和文件夹复制到设备或从设备中复制出来
- en: 5. Viewing device log files
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 5. 查看设备日志文件
- en: Full documentation for the adb command can be found on the Android Developer
    web site [http://developer.android.com/guide/developing/tools/adb.html#commandsummary](http://developer.android.com/guide/developing/tools/adb.html%23commandsummary).
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 关于adb命令的完整文档可以在Android开发者网站上找到：[http://developer.android.com/guide/developing/tools/adb.html#commandsummary](http://developer.android.com/guide/developing/tools/adb.html%23commandsummary)。
- en: Testing various commands using an Android emulator is an excellent way to understand
    the tool prior to leveraging it in an investigation.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android模拟器上测试各种命令是理解这个工具并在调查中利用它的一个很好的方法。
- en: Summary
  id: totrans-302
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 概述
- en: The Android SDK not only provides deep insight into the Android platform but
    also provides powerful tools to investigate a device, from both a forensic and
    security viewpoint. Once the SDK is installed on a forensic workstation, the examiner
    has the ability to interact with an Android device connected via USB, provided
    the USB debugging feature is enabled. Not only is it possible to query information
    from the device but apps can also be installed, run, and ultimately data extracted
    from the device. The Android SDK is an important tool used for forensic and security
    analysis.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK不仅提供了对Android平台的深入洞察，而且还提供了强大的工具来从取证和安全的角度调查设备。一旦SDK安装在取证工作站上，检查员就可以通过USB连接与Android设备交互，前提是启用了USB调试功能。不仅可以从设备查询信息，还可以安装、运行应用程序，并最终从设备提取数据。Android
    SDK是用于取证和安全分析的重要工具。
- en: References
  id: totrans-304
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: 1\. *Android timeline*. (n.d.). Android tutorials, news, views and forums, Android
    Academy. Retrieved March 12, 2011, from [http://www.androidacademy.com/1-android-timeline](http://www.androidacademy.com/1-android-timeline).
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 1. *Android时间线*（n.d.）。Android教程、新闻、观点和论坛，Android学院。2011年3月12日检索自：[http://www.androidacademy.com/1-android-timeline](http://www.androidacademy.com/1-android-timeline)。
- en: 2\. *Platform Versions*, (n.d.). Android developers. Retrieved March 12, 2011,
    from [http://developer.android.com/resources/dashboard/platform-versions.html](http://developer.android.com/resources/dashboard/platform-versions.html).
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 2. *平台版本*（n.d.）。Android开发者。2011年3月12日检索自：[http://developer.android.com/resources/dashboard/platform-versions.html](http://developer.android.com/resources/dashboard/platform-versions.html)。
- en: 3\. *comScore Reports November 2010 U.S. Mobile Subscriber Market Share—comScore,
    Inc*. (n.d.). comScore, Inc.—Measuring the digital world. Retrieved March 12,
    2011, from [http://www.comscore.com/Press_Events/Press_Releases/2011/1/comScore_Reports_November_2010_](http://www.comscore.com/Press_Events/Press_Releases/2011/1/comScore_Reports_November_2010_).
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. *comScore 报告2010年11月美国移动用户市场份额——comScore, Inc*（未注明日期）。comScore, Inc.——衡量数字世界。2011年3月12日检索自
    [http://www.comscore.com/Press_Events/Press_Releases/2011/1/comScore_Reports_November_2010_](http://www.comscore.com/Press_Events/Press_Releases/2011/1/comScore_Reports_November_2010_)。
- en: 4\. *Android 1.5 Platform*. (n.d.). Android developers. Retrieved March 12,
    2011, from [http://developer.android.com/sdk/android-1.5.html](http://developer.android.com/sdk/android-1.5.html).
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. *安卓1.5平台*（未注明日期）。安卓开发者。2011年3月12日检索自 [http://developer.android.com/sdk/android-1.5.html](http://developer.android.com/sdk/android-1.5.html)。
- en: 5\. *Android 1.6 Platform*. (n.d.). Android developers. Retrieved March 12,
    2011, from [http://developer.android.com/sdk/android-1.6.html](http://developer.android.com/sdk/android-1.6.html).
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. *安卓1.6平台*（未注明日期）。安卓开发者。2011年3月12日检索自 [http://developer.android.com/sdk/android-1.6.html](http://developer.android.com/sdk/android-1.6.html)。
- en: 6\. *Android 2.1 Platform*. (n.d.). Android developers. Retrieved March 12,
    2011, from [http://developer.android.com/sdk/android-2.1.html](http://developer.android.com/sdk/android-2.1.html).
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. *安卓2.1平台*（未注明日期）。安卓开发者。2011年3月12日检索自 [http://developer.android.com/sdk/android-2.1.html](http://developer.android.com/sdk/android-2.1.html)。
- en: 7\. *SDK Archives*. (n.d.). Android developers. Retrieved March 13, 2011, from
    [http://developer.android.com/sdk/older_releases.html](http://developer.android.com/sdk/older_releases.html).
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. *SDK 存档*（未注明日期）。安卓开发者。2011年3月13日检索自 [http://developer.android.com/sdk/older_releases.html](http://developer.android.com/sdk/older_releases.html)。
- en: 8\. *smali-Project Hosting on Google Code*. (n.d.). Google code. Retrieved March
    13, 2011, from [http://code.google.com/p/smali/](http://code.google.com/p/smali/).
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 8\. *smali-在 Google Code 上的项目托管*（未注明日期）。Google code。2011年3月13日检索自 [http://code.google.com/p/smali/](http://code.google.com/p/smali/)。
- en: '9\. *Android On Lockdown: AT&T Removes Best Parts of Android from Backflip*
    (n.d.). AndroidGuys. The trusted source for Android news and opinion, Est. 2007\.
    Retrieved March 13, 2011, from [http://www.androidguys.com/2010/03/08/android-lockdown-att-removes-parts-android-backflip/](http://www.androidguys.com/2010/03/08/android-lockdown-att-removes-parts-android-backflip/).'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 9\. *安卓系统受限：AT&T 从 Backflip 中移除了安卓的最佳功能*（未注明日期）。AndroidGuys。一个值得信赖的安卓新闻和观点来源，成立于2007年。2011年3月13日检索自
    [http://www.androidguys.com/2010/03/08/android-lockdown-att-removes-parts-android-backflip/](http://www.androidguys.com/2010/03/08/android-lockdown-att-removes-parts-android-backflip/)。

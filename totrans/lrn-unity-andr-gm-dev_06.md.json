["```java\n    public Rigidbody body;\n    ```", "```java\n    public float minTilt = 5f;\n    public float sensitivity = 1f;\n    ```", "```java\n    private Vector3 totalRotate = Vector3.zero;\n    ```", "```java\n    public void Awake() {\n      Input.gyro.enabled = true;\n    }\n    ```", "```java\n    public void Update() {\n      Vector3 rotation = Input.gyro.rotationRate * Mathf.Rad2Deg;\n    ```", "```java\n    if(Mathf.Abs(rotation.x) < minTilt) rotation.x = 0;\n    if(Mathf.Abs(rotation.y) < minTilt) rotation.y = 0;\n    if(Mathf.Abs(rotation.z) < minTilt) rotation.z = 0;\n    ```", "```java\n    TotalRotate += new Vector3(-rotation.x, rotation.z, -rotation.y) * Time.deltaTime;\n    }\n    ```", "```java\n    public void FixedUpdate() {\n      body.AddTorque(totalRotate * sensitivity);\n    }\n    ```", "```java\n    public Transform ball;\n    ```", "```java\n    public void LateUpdate() {\n      transform.position = ball.position;\n    }\n    ```", "```java\n    public Transform monkeyPivot;\n    public float monkeyLookSpeed = 10f;\n    ```", "```java\n    public void LateUpdate() {\n      if(monkeyPivot != null) {\n    ```", "```java\n    Vector3 velocity = body.velocity;\n    velocity.y = 0;\n    ```", "```java\n    Vector3 forward = monkeyPivot.forward;\n    forward.y = 0;\n    ```", "```java\n    float step = monkeyLookSpeed * Time.deltaTime;\n    ```", "```java\n    Vector3 newFacing = Vector3.RotateTowards(forward, velocity, step, 0);\n    ```", "```java\n    monkeyPivot.rotation = Quaternion.LookRotation(newFacing);\n    }\n    }\n    ```", "```java\n    public Transform respawnPoint;\n    ```", "```java\n    public void OnTriggerEnter(Collider other) {\n    ```", "```java\n    other.transform.position = respawnPoint.position;\n    other.attachedRigidbody.velocity = Vector3.zero;\n    }\n    ```", "```java\n    public GameObject victoryText;\n    public GameObject outOfTimeText;\n    ```", "```java\n    public Text timer;\n    ```", "```java\n    public float timeLimit = 60f;\n    ```", "```java\n    private bool countDown = true;\n    ```", "```java\n    public void Awake() {\n      victoryText.SetActive(false);\n      outOfTimeText.SetActive(false);\n    }\n    ```", "```java\n    public void OnTriggerEnter(Collider other) {\n      if(countDown) {\n    ```", "```java\n    victoryText.SetActive(true);\n    ```", "```java\n    other.attachedRigidbody.isKinematic = true;\n    ```", "```java\n    countDown = false;\n    }\n    }\n    ```", "```java\n    public void Update() {\n      if(countDown) {\n    ```", "```java\n    timeLimit -= Time.deltaTime;\n    ```", "```java\n    timer.text = timeLimit.ToString(\"0.00\");\n    ```", "```java\n    if(timeLimit <= 0) {\n      outOfTimeText.SetActive(true);\n      timer.gameObject.SetActive(false);\n      countDown = false;\n    }\n    }\n    }\n    ```", "```java\n    public float bobSpeed = 1.5f;\n    public float bobHeight = 0.75f;\n    public float spinSpeed = 180f;\n    ```", "```java\n    public Transform bobber;\n    ```", "```java\n    public void Update() {\n      if(bobber != null) {\n    ```", "```java\n      float newPos = Mathf.PingPong(Time.time * bobSpeed, bobHeight);\n      bobber.localPosition = Vector3.up * newPos;\n    }\n    ```", "```java\n    transform.Rotate(Vector3.up * Time.deltaTime * spinSpeed);\n    }\n    ```", "```java\n    public void Update() {\n      if(Input.touchCount <= 0) return;\n    ```", "```java\n    foreach(Touch next in Input.touches) {\n      if(next.phase == TouchPhase.Began) {\n    ```", "```java\n    RaycastHit hit;\n    Ray touchRay = Camera.main.ScreenPointToRay(next.position);\n    ```", "```java\n          if(Physics.Raycast(touchRay, out hit)) {\n            hit.transform.gameObject.SendMessage(\"Touched\", SendMessageOptions.DontRequireReceiver);\n          }\n        }\n      }\n    }\n    ```", "```java\n    public int health = 3;\n    public float divider = 2f;\n    ```", "```java\n    public void Touched() {\n      health--;\n    ```", "```java\n      bobSpeed /= divider;\n      spinSpeed /= divider;\n    ```", "```java\n      if(health <= 0) {\n        Destroy(gameObject);}\n    }\n    ```"]
- en: Chapter 9. Preparing for Release
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第九章. 发布准备
- en: In the previous chapter you've learned enough to test and debug your application.
    What do you need to prepare your application for release? How can you do this
    using Android Studio?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，你已经学到了足够多的知识来测试和调试你的应用程序。那么，为了发布你的应用程序，你需要做哪些准备？如何使用 Android Studio
    完成这些工作？
- en: This chapter describes the necessary steps to prepare your application for release
    using Android Studio. First of all we will learn about the Application Packages
    files, a variation of the JAR files in which Android applications are packed.
    We will then learn how we need to change our application after fully testing it.
    Finally, we will sign our application APK (**Application Package**) file, leaving
    it ready to upload to any market such as Google Play.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了使用 Android Studio 准备应用程序发布的必要步骤。首先，我们将了解应用程序包文件，这是 JAR 文件的一种变体，安卓应用程序就是通过它来打包的。然后，我们将了解在完全测试应用程序后，我们需要对其进行哪些更改。最后，我们将签署我们的应用程序
    APK（**应用程序包**）文件，使其准备好上传到任何市场，如 Google Play。
- en: 'These are the topics we''ll be covering in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将在本章中讨论的主题：
- en: Preparing for release
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布准备
- en: APK files
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: APK 文件
- en: Getting a certificate
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取证书
- en: Generating a signed `APK`
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成签名的 `APK`
- en: What is an APK file
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 APK 文件
- en: 'Android applications are packed in a file with the `.APK` extension, which
    is a variation of a Java JAR (**Java Archive**) file. These files are just compressed
    ZIP files, so their content can be easily explored. An APK file usually contains:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓应用程序打包在一个带有 `.APK` 扩展名的文件中，这是 Java JAR（**Java 归档**）文件的一种变体。这些文件实际上只是压缩的 ZIP
    文件，因此其内容可以轻松查看。APK 文件通常包含以下内容：
- en: '`assets/`: A folder that contains the assets files of the application. This
    is the same `assets` folder existing in the project.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`assets/`：一个包含应用程序资产文件的文件夹。这是项目中已存在的 `assets` 文件夹。'
- en: '`META-INF/`: A folder that contains our certificates.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`META-INF/`：一个包含我们证书的文件夹。'
- en: '`lib/`: A folder that contains compiled code if necessary for a processor.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lib/`：如果需要处理器，则包含编译后的代码的文件夹。'
- en: '`res/`: A folder that contains the application resources.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`res/`：一个包含应用程序资源的文件夹。'
- en: '`AndroidManifest.xml`: The application manifest file.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AndroidManifest.xml`：应用程序的清单文件。'
- en: '`classes.dex`: A file that contains the application compiled code.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`classes.dex`：一个包含应用程序编译后代码的文件。'
- en: '`resources.arsc`: A file that contains some precompiled resources.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`resources.arsc`：一个包含一些预编译资源的文件。'
- en: With the `APK` file, the application can be distributed and installed on the
    Android operating system. Android applications can be distributed as you prefer,
    through app markets such as Google Play, Amazon Appstore, or Opera Mobile Store;
    through your own website; or even through an e-mail to your users. If you choose
    any of the last two options, take into account that Android by default blocks
    installations from locations different from Google Play. You should inform your
    users that they need to disable this restriction in their devices to be able to
    install your application. They have to check the **Unknown sources** option from
    the **Settings** | **Security** menu of their Android devices.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有了 `APK` 文件，应用程序可以在 Android 操作系统上进行分发和安装。你可以根据自己的喜好分发安卓应用程序，通过 Google Play、Amazon
    Appstore 或 Opera Mobile Store 等应用市场；通过自己的网站；或者甚至通过电子邮件发送给你的用户。如果你选择最后两种选项中的任何一种，请记住
    Android 默认会阻止来自 Google Play 之外位置的安装。你应该通知你的用户，他们需要在设备上取消此限制才能安装你的应用程序。他们需要从 Android
    设备的 **设置** | **安全** 菜单中勾选 **未知来源** 选项。
- en: 'Applications have to be signed with a private key when they are built. An application
    can''t be installed in a device or even in the emulator if it is not signed. To
    build our application there are two modes, debug and release. Both `APK` versions
    contain the same folders and compiled files. The difference is the key used to
    sign them:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序在构建时必须使用私钥进行签名。如果应用程序没有签名，它就不能在设备或模拟器上安装。为了构建我们的应用程序，有两种模式：调试和发布。这两个 `APK`
    版本包含相同的文件夹和编译后的文件。不同之处在于用于签名的密钥：
- en: '**Debug**: When we run and tested our application in the previous chapters,
    we were in the debug mode, but we didn''t have any key nor did anything to sign
    our application. The Android SDK tools automatically create a debug key, an alias,
    and their passwords to sign the `APK`. This process occurs when we are running
    or debugging our application with Android Studio without us realizing that. We
    can''t publish an `APK` signed with the debug key created by the SDK tools.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调试**：在前面的章节中，我们运行和测试应用时处于调试模式，但我们没有密钥，也没有对应用进行签名。Android SDK工具会自动创建一个用于签名`APK`的调试密钥、别名及其密码。当我们使用Android
    Studio运行或调试应用时，这个过程会自动发生，而我们甚至没有意识到。我们不能发布使用SDK工具创建的调试密钥签名的`APK`。'
- en: '**Release**: We have to build a release version when we want to distribute
    our application in order to be able to install it in other Android devices. It
    is a requirement that the APK file is signed with a certificate for which the
    developer keeps the private key. In this case, we need our own private key, alias,
    and password and provide them to the build tools. The certificate identifies the
    developer of the application and can be a self-signed certificate. It is not necessary
    for a certificate authority to sign the certificate.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发布**：当我们想要在其他Android设备上分发我们的应用时，我们必须构建一个发布版本。要求`APK`文件使用开发者保留私钥的证书进行签名。在这种情况下，我们需要自己的私钥、别名和密码，并将它们提供给构建工具。证书标识了应用的开发者，可以是自签名的证书。不需要证书颁发机构签名证书。'
- en: Tip
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Keep the key store with your certificate in a secure place. To upgrade your
    application you have to use the same key in order to upload the new version. If
    you lose the key store, you won't be able to update your application. You will
    have to create a new application with a different package name.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将带有你证书的密钥库保存在安全的地方。为了升级你的应用，你必须使用相同的密钥来上传新版本。如果你丢失了密钥库，你将无法更新你的应用。你将不得不创建一个具有不同包名的全新应用。
- en: Previous steps
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 之前的步骤
- en: Before we generate the APK file, it is necessary to prepare our application
    for building it in the release mode.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们生成`APK`文件之前，有必要为发布模式构建我们的应用做好准备。
- en: 'Firstly, make sure you have completely tested your application. We recommend
    testing your application:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，确保你已经彻底测试了你的应用。我们建议在以下情况下测试你的应用：
- en: On a device using the minimum required platform
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用最低要求平台的设备上进行测试。
- en: On a device using the target platform
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用目标平台的设备上进行测试。
- en: On a device using the latest available platform
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用最新可用平台的设备上进行测试。
- en: On a real device and not just in the emulator
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在真实设备上，而不仅仅是模拟器中。
- en: On a variety of screen resolutions and sizes
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在各种屏幕分辨率和尺寸上进行测试。
- en: On a tablet if your application supports them
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的应用支持平板电脑，请在平板上进行测试。
- en: Switching to the landscape mode if you allow it, both in a mobile device and
    in a tablet
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你允许，切换到横屏模式，无论是在手机还是平板电脑上。
- en: On different network conditions, such as no Internet connectivity or low coverage
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不同的网络条件下，例如没有互联网连接或覆盖范围低。
- en: If your application uses the GPS or any location service, test it when they
    are not activated in the device
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的应用使用了GPS或任何定位服务，请在不激活设备上的这些服务时进行测试。
- en: Behavior of the back button
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回按钮的行为
- en: Secondly, we have to check the log messages that are printed from our application.
    Printing some log messages can be considered a security vulnerability. Logs generated
    by the Android system can be captured and analyzed, so we should avoid showing
    critical information about the application's internal working. You should also
    remove the `android:debuggable` property from the application manifest file. You
    can also set this property to `false`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 第二，我们必须检查从我们的应用打印出的日志消息。打印某些日志消息可能被视为安全漏洞。由Android系统生成的日志可以被捕获和分析，因此我们应避免显示关于应用内部工作原理的敏感信息。你还应该从应用清单文件中移除`android:debuggable`属性。你也可以将此属性设置为`false`。
- en: Thirdly, if your application communicates with a server, check that the configured
    URL is the production one. It is possible that during the debug phase, you referenced
    to a URL of a server in a pre-release environment.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 第三，如果你的应用与服务器通信，请检查配置的URL是否是生产环境的。在调试阶段，你可能引用了一个预发布环境中的服务器URL。
- en: Finally, set the correct value for the `android:versionCode` and `android:versionName`
    properties from the application manifest file. The version code is a number (integer)
    that represents the application version. New versions should have greater version
    codes. This code is used to determine if an application installed in a device
    is the last version, or there is a newer one.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，从应用程序清单文件中设置`android:versionCode`和`android:versionName`属性的准确值。版本代码是一个数字（整数），表示应用程序版本。新版本应该有更高的版本代码。此代码用于确定设备中安装的应用程序是否为最新版本，或者有更新的版本。
- en: The version name is a string that represents the application version. Unlike
    the version code, the version name is visible to the user and appears in the public
    information about the application. It is just an informative version name to the
    user and is not used for any internal purpose.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 版本名称是一个表示应用程序版本的字符串。与版本代码不同，版本名称对用户可见，并出现在应用程序的公开信息中。它只是向用户提供的版本信息，不用于任何内部目的。
- en: 'Specify a value of 1 for the version code and 1.0 for the version name. The
    manifest tag should look like:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '为版本代码指定值1，版本名称为1.0。清单标签应如下所示： '
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A new version of our application will have a value of 2 for the version code
    and, for example, 1.1 for the version name.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序的新版本将为版本代码赋予值2，版本名称可以是1.1。
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Generating a signed APK
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成签名APK
- en: To generate the signed `APK`, navigate on the menu **Build** | **Generate Signed
    APK**. In the dialog to generate the signed `APK`, we are asked for a certificate.
    The `APK` is signed by this certificate and it indicates that it belongs to us.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成签名的`APK`，请导航到菜单**构建** | **生成签名APK**。在生成签名`APK`的对话框中，系统会要求我们提供证书。`APK`由该证书签名，表示它属于我们。
- en: If it is our first application, probably we do not have any certificate. Click
    on the **Create new** button to open the dialog box to create a new key store.
    We have to fill in the following information.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是我们第一个应用程序，可能我们没有任何证书。点击**创建新证书**按钮以打开创建新密钥库的对话框。我们必须填写以下信息。
- en: '**Key store path**: Path in your system to create the key store. The key store
    is a file with a `.jks` extension. For example, name it as `release_keystore.jks`.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密钥库路径**：在系统中创建密钥库的路径。密钥库是一个带有`.jks`扩展名的文件。例如，将其命名为`release_keystore.jks`。'
- en: '**Password**: Key store password. You have to confirm it.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码**：密钥库密码。你必须确认它。'
- en: '**Alias**: Alias for your certificate and pair of public and private key. For
    example, name it as `releasekey`.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**别名**：证书及其公私钥对的别名。例如，将其命名为`releasekey`。'
- en: '**Password**: Certificate password. You have to confirm it.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码**：证书密码。你必须确认它。'
- en: '**Validity**: The certificate will be valid until the validity date. A value
    of 25 years or more is recommended.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有效期**：证书将直到有效期结束。建议使用25年或更长时间的值。'
- en: '**Certificate**: Personal information contained in the certificate. Type your
    first and last name, organizational unit, organization, city or locality, state
    or province, and country code. For example, `AS example` as **Organizational Unit**,
    `packtpub` as **Organization**, and `ES` as **Country Code**.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**证书**：证书中包含的个人资料信息。输入你的名字和姓氏、组织单位、组织、城市或地区、州或省、国家代码。例如，将**组织单位**命名为`AS example`，**组织**命名为`packtpub`，以及**国家代码**命名为`ES`。'
- en: 'Click on **OK**. The dialog box to create the signed `APK` is now loaded with
    the key store data. The next time we create a signed `APK`, we already have a
    certificate and therefore we will click on the **Choose existing** button. Click
    on the **Next** button. In the next step, select the path to save the `APK` file
    and click **Finish**. When the APK is completely generated, we will be informed
    as can be seen from the following screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**确定**。现在已加载用于创建签名`APK`的对话框，其中包含密钥库数据。下次我们创建签名`APK`时，我们已经有了证书，因此我们将点击**选择现有**按钮。点击**下一步**按钮。在下一步中，选择保存`APK`文件的路径并点击**完成**。当APK完全生成时，我们将得到通知，如下面的截图所示：
- en: '![Generating a signed APK](img/5273OS_09_01.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![生成签名APK](img/5273OS_09_01.jpg)'
- en: We should have the APK file created in the selected path. Click on the **Show
    in Explorer** button to open the folder containing the generated package, or click
    on the **Close** button to just close the message.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该在所选路径中创建APK文件。点击**在资源管理器中显示**按钮以打开包含生成包的文件夹，或点击**关闭**按钮仅关闭消息。
- en: Now that we have the release APK file, it is recommended to test it again in
    a device before distributing it.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经有了发布APK文件，建议在分发之前在设备上再次进行测试。
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We have learned how to make an `APK` file and how to modify our application
    to make it ready for release. We have also learned how to sign our application
    using our developer certificate. By the end of this chapter, the user should have
    generated a signed `APK` prepared for its release.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何制作一个`APK`文件以及如何修改我们的应用程序以便发布。我们还学习了如何使用我们的开发者证书为应用签名。在本章结束时，用户应该已经生成了一个准备好发布的已签名`APK`。
- en: In the next chapter we will learn about how to get help using Android Studio.
    We will access Android Studio online documentation and go through the help topics.
    Finally, we will learn about keeping our Android Studio instance updated using
    the built-in feature for it.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何使用Android Studio获得帮助。我们将访问Android Studio的在线文档，并浏览帮助主题。最后，我们还将学习如何使用内置功能保持我们的Android
    Studio实例更新。

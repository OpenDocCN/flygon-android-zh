["```java\n// Begin the transaction\nFragmentManager fm = getFragmentManager();\nFragmentTransaction ft = fm.beginTransaction();\n\n// Create the Fragment and add\nBookListFragment2 listFragment = new BookListFragment2();\nft.add(R.id.layoutRoot, listFragment, \"bookList\");\n\n// Commit the changes\nft.commit();\n```", "```java\nFragmentManager fm = getFragmentManager();\nFragment listFragment = fm.findFragmentByTag(\"bookList\");\nBookDescFragment bookDescFragment = new BookDescFragment();\nFragmentTransaction ft = fm.beginTransaction();\nft.remove(listFragment);\nft.add(R.id.layoutRoot, bookDescFragment, \"bookDescription\");\nft.commit();\n```", "```java\nFragmentManager fm = getFragmentManager();\nbookDescFragment = new BookDescFragment();\nFragmentTransaction ft = fm.beginTransaction();\nft.replace(R.id.layoutRoot, bookDescFragment, \"bookDescription\");\nft.commit();\n```", "```java\n<LinearLayout\n\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    >\n  <!--    List of Book Titles  -->\n  <fragment\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"0dp\"\n      android:layout_weight=\"1\"\n      android:name=\"com.jwhh.fragments.BookListFragment2\"\n      android:id=\"@+id/fragmentTitles\"\n      tools:layout=\"@layout/fragment_book_list\"/>\n</LinearLayout>\n```", "```java\n<LinearLayout\n\n    android:id=\"@+id/layoutRoot\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    >\n</LinearLayout>\n```", "```java\nboolean mIsDynamic;\n```", "```java\npublic class MainActivity extends Activity\n    implements BookListFragment.OnSelectedBookChangeListener {\n\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main_dynamic);\n\n    // Get the book description fragment\n    FragmentManager fm = getFragmentManager();\n    Fragment bookDescFragment = \n        fm.findFragmentById(R.id.fragmentDescription);\n\n    // If not found than we're doing dynamic mgmt\n    mIsDynamic = bookDescFragment == null || \n        !bookDescFragment.isInLayout();\n  }\n\n  // Other members elided for clarity\n}\n```", "```java\nprotected void onCreate(Bundle savedInstanceState) {\n  super.onCreate(savedInstanceState);\n  setContentView(R.layout.activity_main_dynamic);\n\n  // Get the book description fragment\n  FragmentManager fm = getFragmentManager();\n  Fragment bookDescFragment = \n      fm.findFragmentById(R.id.fragmentDescription);\n\n  // If not found than we're doing dynamic mgmt\n  mIsDynamic = bookDescFragment == null || \n      !bookDescFragment.isInLayout();\n\n  // Load the list fragment if necessary\n  if (mIsDynamic) {\n    // Begin transaction\n    FragmentTransaction ft = fm.beginTransaction();\n\n    // Create the Fragment and add\n    BookListFragment2 listFragment = new BookListFragment2();\n    ft.add(R.id.layoutRoot, listFragment, \"bookList\");\n\n    // Commit the changes\n    ft.commit();\n  }\n}\n```", "```java\npublic void onSelectedBookChanged(int bookIndex) {\n  FragmentManager fm = getFragmentManager();\n  // Get the book description fragment\n  BookDescFragment bookDescFragment = (BookDescFragment)\n      fm.findFragmentById(R.id.fragmentDescription);\n\n  // Check validity of fragment reference\n  if(bookDescFragment == null || !bookDescFragment.isVisible()){\n    // Use activity to display description\n    Intent intent = new Intent(this, BookDescActivity.class);\n    intent.putExtra(\"bookIndex\", bookIndex);\n    startActivity(intent);\n  }\n  else {\n    // Use contained fragment to display description\n    bookDescFragment.setBook(bookIndex);\n  }\n}\n```", "```java\npublic void onSelectedBookChanged(int bookIndex) {\n  BookDescFragment bookDescFragment;\n  FragmentManager fm = getFragmentManager();\n\n  // Check validity of fragment reference\n  if(mIsDynamic)\n    // Handle dynamic switch to description fragment\n  else {\n    // Use the already visible description fragment\n    bookDescFragment = (BookDescFragment)\n        fm.findFragmentById(R.id.fragmentDescription);\n    bookDescFragment.setBook(bookIndex);\n  }\n}\n```", "```java\nFragmentTransaction ft = fm.beginTransaction();\nbookDescFragment = new BookDescFragment();\nft.replace(R.id.layoutRoot, bookDescFragment, \"bookDescription\");\nft.addToBackStack(null);\nft.setCustomAnimations(\n    android.R.animator.fade_in, android.R.animator.fade_out);\nft.commit();\n```", "```java\npublic void setBook(int bookIndex) {\n  // Lookup the book description\n  String bookDescription = mBookDescriptions[bookIndex]; \n\n  // Display it\n  mBookDescriptionTextView.setText(bookDescription);\n}\n```", "```java\npublic class BookDescFragment extends Fragment {\n  // Book index argument name\n  public static final String BOOK_INDEX = \"book index\";\n  // Book index default value\n  private static final int BOOK_INDEX_NOT_SET = -1;\n\n  // Other members elided for clarity\n}\n```", "```java\npublic View onCreateView(LayoutInflater inflater, \n    ViewGroup container, Bundle savedInstanceState) {\n  View viewHierarchy = inflater.inflate(\n      R.layout.fragment_book_desc, container, false);\n\n  // Load array of book descriptions\n  mBookDescriptions = \n      getResources().getStringArray(R.array.bookDescriptions);\n  // Get reference to book description text view\n  mBookDescriptionTextView = (TextView) \n      viewHierarchy.findViewById(R.id.bookDescription);\n\n  return viewHierarchy;\n}\n```", "```java\npublic View onCreateView(LayoutInflater inflater, \n    ViewGroup container, Bundle savedInstanceState) {\n  View viewHierarchy = inflater.inflate(\n      R.layout.fragment_book_desc, container, false);\n\n  // Load array of book descriptions\n  mBookDescriptions = \n      getResources().getStringArray(R.array.bookDescriptions);\n  // Get reference to book description text view\n  mBookDescriptionTextView = (TextView) \n      viewHierarchy.findViewById(R.id.bookDescription);\n\n  // Retrieve the book index if attached\n  Bundle args = getArguments();\n  int bookIndex = args != null ? \n      args.getInt(BOOK_INDEX, BOOK_INDEX_NOT_SET) : \n      BOOK_INDEX_NOT_SET;\n\n  // If we find the book index, use it\n  if (bookIndex != BOOK_INDEX_NOT_SET) \n    setBook(bookIndex);\n\n  return viewHierarchy;\n}\n```", "```java\npublic void onSelectedBookChanged(int bookIndex) {\n  BookDescFragment bookDescFragment;\n  FragmentManager fm = getFragmentManager();\n\n  // Check validity of fragment reference\n  if(mIsDynamic){\n    // Handle dynamic switch to description fragment\n    FragmentTransaction ft = fm.beginTransaction();\n\n    // Create the fragment and attach book index\n    bookDescFragment = new BookDescFragment();\n    Bundle args = new Bundle();\n    args.putInt(BookDescFragment.BOOK_INDEX, bookIndex);\n    bookDescFragment.setArguments(args);\n\n    // Replace the book list with the description\n    ft.replace(R.id.layoutRoot, \n        bookDescFragment, \"bookDescription\");\n    ft.addToBackStack(null);\n    ft.setCustomAnimations(\n        android.R.animator.fade_in, android.R.animator.fade_out);\n    ft.commit();\n  }\n  else {\n    // Use the already visible description fragment\n    bookDescFragment = (BookDescFragment)\n        fm.findFragmentById(R.id.fragmentDescription);\n    bookDescFragment.setBook(bookIndex);\n  }\n}\n```"]
["```java\nauto label = Label::createWithTTF(\"PAUSE\", \"fonts/Marker Felt.ttf\", 96);\n```", "```java\n#include \"GameOverScene.h\"\n#include \"HelloWorldScene.h\"\n```", "```java\n   Director::getInstance()->replaceScene(TransitionFlipX:: create(1.0, HelloWorld::createScene()));;\n```", "```java\n_director->replaceScene(TransitionFlipX::create(1.0, GameOver::createScene()));\n```", "```java\n#include \"GameOverScene.h\"\n```", "```java\n  auto bg = Sprite::create(\"background.png\");\n  bg->setAnchorPoint(Vec2());\n  bg->setPosition(0,0);\n  this->addChild(bg, -1);\n```", "```java\n   auto label = Label::createWithTTF(\"Game Over\", \"fonts/Marker Felt.  ttf\", 96);\n```", "```java\n  label->enableOutline(Color4B(255, 0, 0, 100),6);\n```", "```java\n  label->enableGlow(Color4B(255, 0, 0, 255));\n```", "```java\n  label->enableShadow();\n```", "```java\nauto label2 = Label::createWithSystemFont(\"Your score is\", \"Arial\", 48);\nlabel2->setPosition(origin.x + visibleSize.width/2,origin.y + visibleSize.height /2.5);\nthis->addChild(label2, 1);\n```", "```java\nschedule(CC_SCHEDULE_SELECTOR(HelloWorld::addBombs), 8.0f);\n```", "```java\nvoid HelloWorld::addBombs(float dt)\n{\n   Sprite* bomb = nullptr;\n   for(int i = 0 ; i < 3 ; i++)\n   {\n         bomb = Sprite::create(\"bomb.png\");\n         bomb->setPosition(CCRANDOM_0_1() * visibleSize.width,   visibleSize.height + bomb->getContentSize().height/2);\n         this->addChild(bomb,1);\n         setPhysicsBody(bomb);\n         bomb->getPhysicsBody()->setVelocity(Vect(0, ( (CCRANDOM_0_1() + 0.2f) * -250) ));\n   }\n}\n```", "```java\nauto playerShape = _sprPlayer->getPhysicsBody()->getFirstShape();\nif(playerShape != contact.getShapeA() && playerShape != contact.getShapeB())\n   {\n      return false;\n   }\n```", "```java\nUserDefault::getInstance()->setIntegerForKey(\"score\",_score);\n```", "```java\nchar scoreText[32];\nint score = UserDefault::getInstance()->getIntegerForKey(\"score\",0);\nsprintf(scoreText, \"%d\", score);\nauto label3 = Label::createWithBMFont(\"font.fnt\", scoreText);\nlabel3->setPosition(origin.x + visibleSize.width/2,origin.y + visibleSize.height /3.5);\nthis->addChild(label3, 1);\n```", "```java\n#ifndef __HELLOWORLD_SCENE_H__\n#define __HELLOWORLD_SCENE_H__\n\n#include \"cocos2d.h\"\n\n#include \"PauseScene.h\"\n#include \"GameOverScene.h\"\n\n```", "```java\nclass HelloWorld : public cocos2d::Layer\n{\npublic:\n    static cocos2d::Scene* createScene();\n    virtual bool init();\n    void pauseCallback(cocos2d::Ref* pSender);\n    CREATE_FUNC(HelloWorld);\nprivate:\n   cocos2d::Director *_director;\n   cocos2d::Size visibleSize;\n   cocos2d::Sprite* _sprBomb;\n   cocos2d::Sprite* _sprPlayer;\n   int _score;\n   void initPhysics();\n   bool onCollision(cocos2d::PhysicsContact& contact);\n   void setPhysicsBody(cocos2d::Sprite* sprite);\n   void initTouch();\n   void movePlayerByTouch(cocos2d::Touch* touch, cocos2d::Event*  event);\n   void movePlayerIfPossible(float newX);\n   void movePlayerByAccelerometer(cocos2d::Acceleration*  acceleration, cocos2d::Event* event);\n   void initAccelerometer();\n   void initBackButtonListener();\n   void onKeyPressed(cocos2d::EventKeyboard::KeyCode keyCode,    cocos2d::Event* event);\n   void updateScore(float dt);\n   void addBombs(float dt);   \n};\n\n#endif // __HELLOWORLD_SCENE_H__\n```", "```java\n#include \"HelloWorldScene.h\"\n#include \"../cocos2d/cocos/platform/android/jni/Java_org_cocos2dx_lib_Cocos2dxHelper.h\"\n\nUSING_NS_CC;\n\nScene* HelloWorld::createScene()\n{\n   auto scene = Scene::createWithPhysics();   \n   scene->getPhysicsWorld()->setGravity(Vect(0,0));\n   auto layer = HelloWorld::create();\n   //enable debug draw\n   //scene->getPhysicsWorld()->setDebugDrawMask(PhysicsWorld::DEBUGDR  AW_ALL);\n   scene->addChild(layer);\n   return scene;\n}\n```", "```java\nvoid HelloWorld::updateScore(float dt)\n{\n   _score += 10;\n}\n\nvoid HelloWorld::addBombs(float dt)\n{\n   Sprite* bomb = nullptr;\n   for(int i = 0 ; i < 3 ; i++)\n   {\n      bomb = Sprite::create(\"bomb.png\");   \n      bomb->setPosition(CCRANDOM_0_1() * visibleSize.width,  visibleSize.height + bomb->getContentSize().height/2);\n      this->addChild(bomb,1);\n      setPhysicsBody(bomb);\n      bomb->getPhysicsBody()->setVelocity(Vect(0,  ( (CCRANDOM_0_1() + 0.2f) * -250) ));\n   }\n}\n\n}\n\nbool HelloWorld::init()\n{\n    if ( !Layer::init() )\n    {\n        return false;\n    }\n   _score = 0;\n   _director = Director::getInstance();\n   visibleSize = _director->getVisibleSize();\n   auto origin = _director->getVisibleOrigin();\n   auto closeItem = MenuItemImage::create(\"pause.png\", \"pause_pressed.png\", CC_CALLBACK_1(HelloWorld::pauseCallback, this));\n\n   closeItem->setPosition(Vec2(visibleSize.width - closeItem-  >getContentSize().width/2, closeItem->getContentSize().height/2));\n\n   auto menu = Menu::create(closeItem, nullptr);\n   menu->setPosition(Vec2::ZERO);\n   this->addChild(menu, 1);\n   _sprBomb = Sprite::create(\"bomb.png\");\n   _sprBomb->setPosition(visibleSize.width / 2,  visibleSize.height + _sprBomb->getContentSize().height/2);\n   this->addChild(_sprBomb,1);\n   auto bg = Sprite::create(\"background.png\");\n   bg->setAnchorPoint(Vec2());\n   bg->setPosition(0,0);\n   this->addChild(bg, -1);\n   _sprPlayer = Sprite::create(\"player.png\");   \n   _sprPlayer->setPosition(visibleSize.width / 2, visibleSize.height * 0.23);\n   setPhysicsBody(_sprPlayer);\n   this->addChild(_sprPlayer, 0);\n   //Animations\n   Vector<SpriteFrame*> frames;\n   Size playerSize = _sprPlayer->getContentSize();\n   frames.pushBack(SpriteFrame::create(\"player.png\",  Rect(0, 0, playerSize.width, playerSize.height)));\n   frames.pushBack(SpriteFrame::create(\"player2.png\",  Rect(0, 0, playerSize.width, playerSize.height)));\n   auto animation =  Animation::createWithSpriteFrames(frames,0.2f);\n   auto animate = Animate::create(animation);\n   _sprPlayer->runAction(RepeatForever::create(animate));   \n\n   setPhysicsBody(_sprBomb);   \n   initPhysics();   \n   _sprBomb->getPhysicsBody()->setVelocity(Vect(0,-100));   \n   initTouch();\n   initAccelerometer();   \n   setKeepScreenOnJni(true);\n   initBackButtonListener();\n   schedule(CC_SCHEDULE_SELECTOR (HelloWorld::updateScore), 3.0f);\n   schedule(CC_SCHEDULE_SELECTOR (HelloWorld::addBombs), 8.0f);\n   return true;\n}\n\nvoid HelloWorld::pauseCallback(cocos2d::Ref* pSender){\n   _director->pushScene(TransitionFlipX::create(1.0, Pause::createScene()));\n}\n```", "```java\n#ifndef __GameOver_SCENE_H__\n#define __GameOver_SCENE_H__\n\n#include \"cocos2d.h\"\n#include \"HelloWorldScene.h\"\n\nclass GameOver : public cocos2d::Layer\n{\npublic:\n    static cocos2d::Scene* createScene();\n    virtual bool init();    \n    void exitPause(cocos2d::Ref* pSender);\n    CREATE_FUNC(GameOver);\nprivate:\n   cocos2d::Sprite* sprLogo;\n   cocos2d::Director *director;\n   cocos2d::Size visibleSize;   \n};\n\n#endif // __Pause_SCENE_H__\n```", "```java\n#include \"GameOverScene.h\"\n\nUSING_NS_CC;\n\nScene* GameOver::createScene()\n{\n    auto scene = Scene::create();\n    auto layer = GameOver::create();\n    scene->addChild(layer);\n    return scene;\n}\n\nbool GameOver::init()\n{\n    if ( !Layer::init() )\n    {\n        return false;\n    }\n   director = Director::getInstance();  \n   visibleSize = director->getVisibleSize();\n   Vec2 origin = director->getVisibleOrigin();\n   auto pauseItem = MenuItemImage::create(\"play.png\", \"play_pressed.png\", CC_CALLBACK_1(GameOver::exitPause, this));\n   pauseItem->setPosition(Vec2(origin.x + visibleSize.width -   pauseItem->getContentSize().width / 2, origin.y + pauseItem-  >getContentSize().height / 2));\n   auto menu = Menu::create(pauseItem, NULL);\n   menu->setPosition(Vec2::ZERO);\n   this->addChild(menu, 1);\n   auto bg = Sprite::create(\"background.png\");\n   bg->setAnchorPoint(Vec2());\n   bg->setPosition(0,0);\n   this->addChild(bg, -1);\n```", "```java\n   auto label = Label::createWithTTF(\"Game Over\", \"fonts/Marker  Felt.ttf\", 96);\n   label->enableOutline(Color4B(255, 0, 0, 100),6);\n   label->enableGlow(Color4B(255, 0, 0, 255));\n   label->enableShadow();\n   label->setPosition(origin.x + visibleSize.width/2,  origin.y + visibleSize.height /2);\n   this->addChild(label, 1);\n   auto label2 = Label::createWithSystemFont(\"Your score is\",  \"Arial\", 48);\n   label2->setPosition(origin.x + visibleSize.width/2,origin.y  + visibleSize.height/2.5);\n   this->addChild(label2, 1);\n   char scoreText[32];\n   int score = UserDefault::getInstance()- >getIntegerForKey(\"score\",0);\n   sprintf(scoreText, \"%d\", score);\n   auto label3 = Label::createWithBMFont(\"font.fnt\", scoreText);\n   label3->setPosition(origin.x + visibleSize.width/2,origin.y  + visibleSize.height /3.5);\n   this->addChild(label3, 1);\n   return true;\n}\n\nvoid GameOver::exitPause(cocos2d::Ref* pSender){\n   Director::getInstance()- >replaceScene(TransitionFlipX::create(1.0, HelloWorld::createScene()));\n}\n```"]
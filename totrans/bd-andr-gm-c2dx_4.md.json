["```java\nvoid initTouch();\nvoid movePlayerByTouch(cocos2d::Touch* touch, cocos2d::Event* event);\nvoid movePlayerIfPossible(float newX);\n```", "```java\nvoid HelloWorld::initTouch() {\n  auto listener = EventListenerTouchOneByOne::create();\n  listener->onTouchBegan = [](Touch* touch, Event* event){return true;\n  }\n  listener->onTouchMoved = CC_CALLBACK_2(HelloWorld::movePlayerByTouch,this);\n  listener->onTouchEnded = [=](Touch* touch, Event* event){};\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\n```", "```java\n  initTouch();\n```", "```java\nvoid HelloWorld::movePlayerIfPossible(float newX){\n  float sprHalfWidth = _sprPlayer->getBoundingBox().size.width/2;\n  if(newX >= sprHalfWidth && newX < visibleSize.width - sprHalfWidth){\n    _sprPlayer->setPositionX(newX);\n  }\n}\n```", "```java\nvoid HelloWorld::movePlayerByTouch(Touch* touch, Event* event){\n  auto touchLocation = touch->getLocation();\n  if(_sprPlayer->getBoundingBox().containsPoint(touchLocation)){\n    movePlayerIfPossible(touchLocation.x);\n  }\n}\n```", "```java\nvoid initMultiTouch();\nvoid moveByMultiTouch(const std::vector<cocos2d::Touch*>& touches, cocos2d::Event* event);\n```", "```java\nvoid HelloWorld::initMultiTouch() {\n  auto listener = EventListenerTouchAllAtOnce::create();\n  listener->onTouchesBegan = [](const std::vector<Touch*>& touches, Event* event){};\n  listener->onTouchesMoved = CC_CALLBACK_2(HelloWorld::moveByMultiTouch,this);\n  listener->onTouchesEnded = [](const std::vector<Touch*>& touches, Event* event){};\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\n```", "```java\nvoid HelloWorld::moveByMultiTouch(const std::vector<Touch*>& touches, Event* event){\n  for(Touch* touch: touches){\n    Vec2 touchLocation = touch->getLocation();\n    if(_sprPlayer->getBoundingBox().containsPoint(touchLocation)){\n      movePlayerIfPossible(touchLocation.x);\n    }else if(_sprBomb->getBoundingBox().containsPoint(touchLocation)){\n      _sprBomb->setPosition(touchLocation);\n    }\n  }\n}\n```", "```java\ninitMultiTouch();\n```", "```java\nvoid movePlayerByAccelerometer(cocos2d::Acceleration* acceleration, cocos2d::Event* event);\nvoid initAccelerometer();\n```", "```java\nvoid HelloWorld::initAccelerometer(){\n  Device::setAccelerometerEnabled(true);\n  auto listener = EventListenerAcceleration::create(CC_CALLBACK_2(HelloWorld::movePlayerByAccelerometer, this));\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\n```", "```java\nvoid HelloWorld::movePlayerByAccelerometer(cocos2d::Acceleration* acceleration, cocos2d::Event* event){\n  int accelerationMult = 10;\n  movePlayerIfPossible(_sprPlayer->getPositionX() + (acceleration->x * accelerationMult));\n}\n```", "```java\ninitAccelerometer();\n```", "```java\n#include \"../cocos2d/cocos/platform/android/jni/Java_org_cocos2dx_lib_Cocos2dxHelper.h\"\n```", "```java\nsetKeepScreenOnJni(true);\n```", "```java\nvoid initBackButtonListener();\nvoid onKeyPressed(cocos2d::EventKeyboard::KeyCode keyCode, cocos2d::Event* event);\n```", "```java\nvoid HelloWorld::initBackButtonListener(){\n  auto listener = EventListenerKeyboard::create();\n  listener->onKeyPressed = [=](EventKeyboard::KeyCode keyCode, Event* event){};\n  listener->onKeyReleased = CC_CALLBACK_2(HelloWorld::onKeyPressed, this);\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\n```", "```java\nvoid HelloWorld::onKeyPressed(EventKeyboard::KeyCode keyCode, Event* event){\n  if(keyCode == EventKeyboard::KeyCode::KEY_BACK){\n    Director::getInstance()->end();\n  }\n}\n```", "```java\ninitBackButtonListener();\n```", "```java\n#ifndef __HELLOWORLD_SCENE_H__\n#define __HELLOWORLD_SCENE_H__\n#include \"cocos2d.h\"\nclass HelloWorld : public cocos2d::Layer\n{\npublic:\n  static cocos2d::Scene* createScene();\n  virtual bool init();\n  void pauseCallback(cocos2d::Ref* pSender);\n  CREATE_FUNC(HelloWorld);\nprivate:\n  cocos2d::Director *_director;\n  cocos2d::Size visibleSize;\n  cocos2d::Sprite* _sprBomb;\n  cocos2d::Sprite* _sprPlayer;\n  void initPhysics();\n  bool onCollision(cocos2d::PhysicsContact& contact);\n  void setPhysicsBody(cocos2d::Sprite* sprite);\n  void initTouch();\n  void movePlayerByTouch(cocos2d::Touch* touch, cocos2d::Event* event);\n  void movePlayerIfPossible(float newX);\n  void movePlayerByAccelerometer(cocos2d::Acceleration* acceleration, cocos2d::Event* event);\n  void initAccelerometer();\n  void initBackButtonListener();\n  void onKeyPressed(cocos2d::EventKeyboard::KeyCode keyCode, cocos2d::Event* event);\n};\n\n#endif // __HELLOWORLD_SCENE_H__\n```", "```java\n#include \"HelloWorldScene.h\"\n#include \"PauseScene.h\"\n#include \"../cocos2d/cocos/platform/android/jni/Java_org_cocos2dx_lib_Cocos2dxHelper.h\"\n\nUSING_NS_CC;\nScene* HelloWorld::createScene()\n{\n  auto scene = Scene::createWithPhysics();\n  scene->getPhysicsWorld()->setGravity(Vect(0,0));\n  auto layer = HelloWorld::create();\n  //enable debug draw\n  //scene->getPhysicsWorld()->setDebugDrawMask(PhysicsWorld::DEBUGDRAW_ALL);\n  scene->addChild(layer);\n  return scene;\n}\n```", "```java\nvoid HelloWorld::movePlayerIfPossible(float newX){\n  float sprHalfWidth = _sprPlayer->getBoundingBox().size.width/2;\n  if(newX >= sprHalfWidth && newX < visibleSize.width - sprHalfWidth){\n    _sprPlayer->setPositionX(newX);\n  }\n}\nvoid HelloWorld::movePlayerByTouch(Touch* touch, Event* event)\n{\n  Vec2 touchLocation = touch->getLocation();\n  if(_sprPlayer->getBoundingBox().containsPoint(touchLocation)){\n    movePlayerIfPossible(touchLocation.x);\n  }\n}\n```", "```java\nvoid HelloWorld::initTouch()\n{\n  auto listener = EventListenerTouchOneByOne::create();\n  listener->onTouchBegan = [](Touch* touch, Event* event){return true;};\n  listener->onTouchMoved = CC_CALLBACK_2(HelloWorld::movePlayerByTouch,this);\n  listener->onTouchEnded = [=](Touch* touch, Event* event){};\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\nvoid HelloWorld::initAccelerometer()\n{\n  Device::setAccelerometerEnabled(true);\n  auto listener = EventListenerAcceleration::create(CC_CALLBACK_2(HelloWorld::movePlayerByAccelerometer, this));\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\n\nvoid HelloWorld::movePlayerByAccelerometer(cocos2d::Acceleration* acceleration, cocos2d::Event* event)\n{\n  movePlayerIfPossible(_sprPlayer->getPositionX() + (acceleration->x * 10));\n}\n```", "```java\nbool HelloWorld::init()\n{\n  if( !Layer::init() ){\n    return false;\n  }\n  _director = Director::getInstance();\n  visibleSize = _director->getVisibleSize();\n  auto origin = _director->getVisibleOrigin();\n  auto closeItem = MenuItemImage::create(\"pause.png\", \"pause_pressed.png\", CC_CALLBACK_1(HelloWorld::pauseCallback, this));\n  closeItem->setPosition(Vec2(visibleSize.width - closeItem->getContentSize().width/2, closeItem->getContentSize().height/2));\n\n  auto menu = Menu::create(closeItem, nullptr);\n  menu->setPosition(Vec2::ZERO);\n  this->addChild(menu, 1);\n  _sprBomb = Sprite::create(\"bomb.png\");\n  _sprBomb->setPosition(visibleSize.width/2, visibleSize.height + _sprBomb->getContentSize().height/2);\n  this->addChild(_sprBomb,1);\n  auto bg = Sprite::create(\"background.png\");\n  bg->setAnchorPoint(Vec2());\n  bg->setPosition(0,0);\n  this->addChild(bg, -1);\n  _sprPlayer = Sprite::create(\"player.png\");\n  _sprPlayer->setPosition(visibleSize.width/2, visibleSize.height * 0.23);\n  setPhysicsBody(_sprPlayer);\n\n  this->addChild(_sprPlayer, 0);\n  //Animations\n  Vector<SpriteFrame*> frames;\n  Size playerSize = _sprPlayer->getContentSize();\n  frames.pushBack(SpriteFrame::create(\"player.png\", Rect(0, 0, playerSize.width, playerSize.height)));\n  frames.pushBack(SpriteFrame::create(\"player2.png\", Rect(0, 0, playerSize.width, playerSize.height)));\n  auto animation = Animation::createWithSpriteFrames(frames,0.2f);\n  auto animate = Animate::create(animation);\n  _sprPlayer->runAction(RepeatForever::create(animate));\n\n  setPhysicsBody(_sprBomb);\n  initPhysics();\n  _sprBomb->getPhysicsBody()->setVelocity(Vect(0,-100));\n  initTouch();\n  initAccelerometer();\n  setKeepScreenOnJni(true);\n  initBackButtonListener();\n  return true;\n}\n\nvoid HelloWorld::pauseCallback(cocos2d::Ref* pSender){\n  _director->pushScene(TransitionFlipX::create(1.0, Pause::createScene()));\n}\nvoid HelloWorld::initBackButtonListener(){\n  auto listener = EventListenerKeyboard::create();\n  listener->onKeyPressed = [=](EventKeyboard::KeyCode keyCode, Event* event){};\n  listener->onKeyReleased = CC_CALLBACK_2(HelloWorld::onKeyPressed, this);\n  _eventDispatcher->addEventListenerWithSceneGraphPriority(listener, this);\n}\n\nvoid HelloWorld::onKeyPressed(EventKeyboard::KeyCode keyCode, Event* event){\n  if(keyCode == EventKeyboard::KeyCode::KEY_BACK){\n    Director::getInstance()->end();\n  }\n}\n```"]
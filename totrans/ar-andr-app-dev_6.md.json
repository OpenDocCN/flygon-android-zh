["```java\nimport com.jme3.math.Ray;\nimport com.jme3.collision.CollisionResult;\nimport com.jme3.collision.CollisionResults;\nimport com.jme3.input.MouseInput;\nimport com.jme3.input.controls.ActionListener;\nimport com.jme3.input.controls.KeyTrigger;\nimport com.jme3.input.controls.MouseButtonTrigger;\n```", "```java\n  inputManager.addMapping(\"Shoot\",      // Declare...\n    newKeyTrigger(KeyInput.KEY_SPACE), // trigger 1: spacebar, or\n    newMouseButtonTrigger(0));         // trigger 2: left-button click\n  inputManager.addListener(actionListener, \"Shoot\");\n```", "```java\nBox b = new Box(7, 4, 6); // create cube shape at the origin\ngeom = new Geometry(\"Box\", b);  // create cube geometry from the shape\nMaterial mat = new Material(assetManager,\n\"Common/MatDefs/Misc/Unshaded.j3md\");  // create a simple material\nmat.setColor(\"Color\", ColorRGBA.Red);   // set color of material to blue\ngeom.setMaterial(mat);        // set the cube's material\ngeom.setLocalTranslation(new Vector3f(0.0f,0.0f,6.0f));\n\nshootables = new Node(\"Shootables\");\nshootables.attachChild(geom);\nrootNode.attachChild(shootables);\n```", "```java\n  privateActionListeneractionListener = new ActionListener() {\n\n  public void onAction(String name, booleankeyPressed, float tpf) {\n      Log.d(TAG,\"Shooting.\");\n\n      if (name.equals(\"Shoot\") && !keyPressed) {\n\n        // 1\\. Reset results list.\n        CollisionResults results = new CollisionResults();\n\n        // 2\\. Mode 1: user touch location.\n        Vector2f click2d = inputManager.getCursorPosition();\n        Vector3f click3d = fgCam.getWorldCoordinates(\n        new Vector2f(click2d.x, click2d.y), 0f).clone();\n        Vector3f dir = fgCam.getWorldCoordinates(\n        new Vector2f(click2d.x, click2d.y), 1f).subtractLocal(click3d).normalizeLocal();\n        Ray ray = new Ray(click3d, dir);\n\n        // 2\\. Mode 2: using screen center\n        //Aim the ray from fgcamloc to fgcam direction.\n        //Ray ray = new Ray(fgCam.getLocation(), fgCam.getDirection());\n\n        // 3\\. Collect intersections between Ray and Shootables in results list.\n        shootables.collideWith(ray, results);\n…\n```", "```java\n  for (int i = 0; i<results.size(); i++) {\n    // For each hit, we know distance, impact point, name of geometry.\n    floatdist = results.getCollision(i).getDistance();\n    Vector3f pt = results.getCollision(i).getContactPoint();\n    String hit = results.getCollision(i).getGeometry().getName();\n\n    Log.d(TAG,\"* Collision #\" + i + hit);\n    //         Log.d(TAG,\"  You shot \" + hit + \" at \" + pt + \", \" + dist + \"wu away.\");\n  }\n```", "```java\n  if (results.size() > 0) {\n    // The closest collision point is what was truly hit:\n  CollisionResult closest = results.getClosestCollision();\n\n  closest.getGeometry().getMaterial().setColor(\"Color\", ColorRGBA.Green);\n  } else {\n    geom.getMaterial().setColor(\"Color\", ColorRGBA.Red);\n  }\n```", "```java\n    Box b = new Box(7, 4, 6); // create cube shape at the origin\n    geom1 = new Geometry(\"Box\", b);  // create cube geometry from the shape\n    Material mat = new Material(assetManager,\"Common/MatDefs/Misc/Unshaded.j3md\");  // create a simple material\n    mat.setColor(\"Color\", ColorRGBA.Red);   // set color of material to red\n    geom1.setMaterial(mat);                   // set the cube's material\n\n    geom1.setLocalTranslation(new Vector3f(0.0f,0.0f,6.0f));\n\n    rootNode.attachChild(geom1);              // make the cube appear in the scene\n\n    Sphere s = new Sphere(12,12,6);\n    geom2 = new Geometry(\"Sphere\", s);  // create sphere geometry from the shape\n    Material mat2 = new Material(assetManager,\"Common/MatDefs/Misc/Unshaded.j3md\");  // create a simple material\n    mat2.setColor(\"Color\", ColorRGBA.Green);   // set color of material to green\n    geom2.setMaterial(mat2);                   // set the sphere's material\n\n    geom2.setLocalTranslation(new Vector3f(0.0f,0.0f,6.0f));\n\n    rootNode.attachChild(geom2);              // make the sphere appear in the scene\n\n    Torus= new Torus(12, 12, 2, 6); // create torus shape at the origin\n    geom3 = new Geometry(\"Torus\", t);  // create torus geometry from the shape\n    Material mat3 = new Material(assetManager,\"Common/MatDefs/Misc/Unshaded.j3md\");  // create a simple material\n    mat3.setColor(\"Color\", ColorRGBA.Blue);   // set color of material to blue\n    geom3.setMaterial(mat3);                   // set the torus material\n    geom3.setLocalTranslation(new Vector3f(0.0f,0.0f,6.0f));\n\n    rootNode.attachChild(geom3);              // make the torus appear in the scene\n```", "```java\n      Vector3f pos=new Vector3f();\n\n      pos=fgCam.getLocation();\n\n      if (pos.length()>50.)\n      {\n        rootNode.attachChild(geom1);           \n        rootNode.detachChild(geom2);       \n        rootNode.detachChild(geom3); \n\n      }\n      else\n        if (pos.length()>40.)\n        {\n          rootNode.detachChild(geom1);           \n          rootNode.attachChild(geom2);       \n          rootNode.detachChild(geom3); \n        },\n        else\n        {\n          rootNode.detachChild(geom1);           \n          rootNode.detachChild(geom2);       \n          rootNode.attachChild(geom3); \n        }\n```", "```java\npublic void detectShake(SensorEvent event) {\n…\n  floatcurAccForce = Math.abs(event.values[2] - mLastAccelValZ) / timeDiff;\n  if (curAccForce> ACCEL_FORCE_THRESHOLD) {\n    mShakeCount++;\n    if ((mShakeCount>= ACCEL_EVENT_COUNT_THRESHOLD) && (now - mTimeOfLastShake> SHAKE_DURATION_THRESHOLD)) {\n      mTimeOfLastShake = now;mShakeCount = 0;\t\t\t\n      if ((com.ar4android.ShakeItJME) app != null) {\n        ((com.ar4android.ShakeItJME) app).onShake();\n      }\n    }\n…\n  }    \n}\n```", "```java\npublic void onShake() {\n  mAniChannel.setAnim(\"Spin\");\n}\n```", "```java\npublic void onAnimCycleDone(AnimControl control, AnimChannel channel, String animName) {\nif(animName.contains(\"Spin\")) {\n    mAniChannel.setAnim(\"Walk\");\n  }\n}\n```"]
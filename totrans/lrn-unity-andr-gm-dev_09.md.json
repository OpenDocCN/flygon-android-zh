["```java\n    using UnityEngine.UI;\n    ```", "```java\n    public class TrackerStat : MonoBehaviour {\n    ```", "```java\n    public class TrackerStat {\n    ```", "```java\n    public string key = \"\";\n    public float averageTime = 0;\n    public int totalCalls = 0;\n    public float longestCall = 0;\n    ```", "```java\n    public float openTime = 0;\n    public bool isOpen = false;\n    ```", "```java\n    private Text averageLabel;\n    private Text totalLabel;\n    private Text longestLabel;\n    ```", "```java\n    public void Open() {\n      if(isOpen) {\n        Debug.LogWarning(\"Tracking is already open. Key: \" + key);\n      }\n\n      isOpen = true;\n      openTime = Time.realtimeSinceStartup;\n    }\n    ```", "```java\n    public void Close(float closeTime) {\n      if(!isOpen) {\n        Debug.LogWarning(\"Tracking is already closed. Key: \" + key);\n        return;\n      }\n\n      isOpen = false;\n      AddValue(closeTime – openTime);\n    }\n    ```", "```java\n    public void AddValue(float callLength) {\n      float totalTime = averageTime * totalCalls;\n      averageTime = (totalTime + callLength) / (totalCalls + 1);\n\n      if(longestCall < callLength) {\n        longestCall = callLength;\n      }\n\n      totalCalls++;\n\n      averageLabel.text = averageTime.ToString();\n      totalLabel.text = totalCalls.ToString();\n      longestLabel.text = longestCall.ToString();\n    }\n    ```", "```java\n    public void CreateTexts(int position) {\n      float yPos = -45 – (30 * position);\n\n      Text keyLabel = ScriptTracker.NewLabel(key + \":Key\");\n      keyLabel.text = key;\n      keyLabel.rectTransform.anchoredPosition = new Vector2(75, yPos);\n      keyLabel.rectTransform.sizeDelta = new Vector2(150, 30);\n\n      averageLabel = ScriptTracker.NewLabel(key + \":Average\");\n      averageLabel.rectTransform.anchoredPosition = new Vector2(200, yPos);\n      averageLabel.rectTransform.sizeDelta = new Vector2(100, 30);\n\n      totalLabel = ScriptTracker.NewLabel(key + \":Total\");\n      totalLabel.rectTransform.anchoredPosition = new Vector2(200, yPos);\n      totalLabel.rectTransform.sizeDelta = new Vector2(100, 30);\n\n      longestLabel = ScriptTracker.NewLabel(key + \":Longest\");\n      longestLabel.rectTransform.anchoredPosition = new Vector2(200, yPos);\n      longestLabel.rectTransform.sizeDelta = new Vector2(100, 30);\n    }\n    ```", "```java\n    using UnityEngine.UI;\n    ```", "```java\n    private static TrackerStat[] stats = new TrackerStat[0];\n    ```", "```java\n    public static void Open(string key) {\n      int index = -1;\n\n      for(int i=0;i<stats.Length;i++) {\n        if(stats[i].key == key) {\n          index = I;\n          break;\n        }\n      }\n    ```", "```java\n      if(index < 0) {\n        if(stats.Length <= 0) {\n          CreateLabels();\n        }\n\n        AddNewStat(key);\n        index = stats.Length – 1;\n      }\n\n      stats[index].Open();\n    }\n    ```", "```java\n    private static void AddNewStat(string key) {\n      TrackerStatp[] temp = stats;\n      stats = new TrackerStat[temp.Length + 1];\n\n      for(int i=0;i<temp.Length;i++) {\n        stats[i] = temp[i];\n      }\n\n      stats[stats.Length – 1] = new TrackerStat();\n      stats[stats.Length – 1].key = key;\n      stats[stats.Length – 1].CreateTexts(stats.Length – 1);\n    }\n    ```", "```java\n    public static void Close(string key) {\n      float closeTime = Time.realtimeSinceStartup;\n\n      for(int i=0;i<stats.Length;i++) {\n        if(stats[i].key = key) {\n          stats[i].Close(closeTime);\n          return;\n        }\n      }\n\n      Debug.LogError(\"Tracking stat not found. Key: \" + key);\n    }\n    ```", "```java\n    private static void CreateLabels() {\n      Text keyLabel = NewLabel(\"TrackerLabel:Key\");\n      keyLabel.text = \"Key\";\n      keyLabel.rectTransform.anchoredPosition = new Vector2(75, -15);\n      keyLabel.rectTransform.sizeDelta = new Vector2(150, 30);\n\n      Text averageLabel = NewLabel(\"TrackerLabel:Average\");\n      averageLabel.text = \"Average\";\n      averageLabel.rectTransform.anchoredPosition = new Vector2(200, -15);\n      averageLabel.rectTransform.sizeDelta = new Vector2(100, 30);\n\n      Text totalLabel = NewLabel(\"TrackerLabel:Total\");\n      totalLabel.text = \"Total\";\n      totalLabel.rectTransform.anchoredPosition = new Vector2(275, -15);\n      totalLabel.rectTransform.sizeDelta = new Vector2(50, 30);\n\n      Text longestLabel = NewLabel(\"TrackerLabel:Longest\");\n      longestLabel.text = \"Longest\";\n      longestLabel.rectTransform.anchoredPosition = new Vector2(350, -15);\n      longestLabel.rectTransform.sizeDelta = new Vector2(100, 30);\n    }\n    ```", "```java\n    public static Text NewLabel(string labelName) {\n      Canvas canvas = GameObject.FindObjectOfType<Canvas>();\n      if(canvas == null) {\n        GameObject go = new GameObject(\"Canvas\");\n        go.AddComponent<RectTransform>();\n        canvas = go.AddComponent<Canvas>();\n      }\n    ```", "```java\n    GameObject label = new GameObject(labelName);\n    label.transform.parent = canvas.transform;\n\n    RectTransform labelTrans = label.AddComponent<RectTransform>();\n    labelTrans.anchorMin = Vector2.up;\n    labelTrans.anchorMax = Vector2.up;\n\n    label.AddComponent<CanvasRenderer>();\n    Text textComp = label.AddComponent<Text>();\n    textComp.font = Resources.GetBuiltinResource(typeof(Font), \"Arial.ttf\") as Font;\n    return textComp;\n    }\n    ```", "```java\n    ScriptTracker.Open(\"BananaBounce Update\");\n    ```", "```java\n    ScriptTracker.Close(\"BananaBounce Update\");\n    ```"]